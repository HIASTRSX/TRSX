
os.elf:     file format elf32-littleriscv


Disassembly of section .init:

30001000 <_start>:
	.section .init
	.globl _start
	.type _start,@function

_start:
	csrrci x0, mstatus, 0x8  //Disable the interrupt globally
30001000:	30047073          	csrci	mstatus,8
.option push
.option norelax
	la gp, __global_pointer$
30001004:	00007197          	auipc	gp,0x7
30001008:	32418193          	addi	gp,gp,804 # 30008328 <__global_pointer$>
.option pop
	la sp, _sp
3000100c:	000ff117          	auipc	sp,0xff
30001010:	ff410113          	addi	sp,sp,-12 # 30100000 <_sp>
    #csrrsi x0, 0xbfe, 0x8 // Disable I-Cache

	/* Bob: Load code section from flash to ITCM */
	la a0, _itcm_lma
30001014:	00000517          	auipc	a0,0x0
30001018:	0ac50513          	addi	a0,a0,172 # 300010c0 <register_fini>
	la a1, _itcm
3000101c:	00000597          	auipc	a1,0x0
30001020:	0a458593          	addi	a1,a1,164 # 300010c0 <register_fini>
    beq a0, a1, 2f  /*If the ITCM phy-address same as the logic-address, then quit*/
30001024:	02b50263          	beq	a0,a1,30001048 <_start+0x48>
	la a2, _eitcm
30001028:	00006617          	auipc	a2,0x6
3000102c:	84860613          	addi	a2,a2,-1976 # 30006870 <_eitcm>
	bgeu a1, a2, 2f
30001030:	00c5fc63          	bgeu	a1,a2,30001048 <_start+0x48>
1:
	lw t0, (a0)
30001034:	00052283          	lw	t0,0(a0)
	sw t0, (a1)
30001038:	0055a023          	sw	t0,0(a1)
	addi a0, a0, 4
3000103c:	00450513          	addi	a0,a0,4
	addi a1, a1, 4
30001040:	00458593          	addi	a1,a1,4
	bltu a1, a2, 1b
30001044:	fec5e8e3          	bltu	a1,a2,30001034 <_start+0x34>
2:

	/* Load data section */
	la a0, _data_lma
30001048:	00006517          	auipc	a0,0x6
3000104c:	fb850513          	addi	a0,a0,-72 # 30007000 <_data>
	la a1, _data
30001050:	00006597          	auipc	a1,0x6
30001054:	fb058593          	addi	a1,a1,-80 # 30007000 <_data>
	la a2, _edata
30001058:	81418613          	addi	a2,gp,-2028 # 30007b3c <cur_thread_num>
	bgeu a1, a2, 2f
3000105c:	00c5fc63          	bgeu	a1,a2,30001074 <_start+0x74>
1:
	lw t0, (a0)
30001060:	00052283          	lw	t0,0(a0)
	sw t0, (a1)
30001064:	0055a023          	sw	t0,0(a1)
	addi a0, a0, 4
30001068:	00450513          	addi	a0,a0,4
	addi a1, a1, 4
3000106c:	00458593          	addi	a1,a1,4
	bltu a1, a2, 1b
30001070:	fec5e8e3          	bltu	a1,a2,30001060 <_start+0x60>
2:

	/* Clear bss section */
	la a0, __bss_start
30001074:	81418513          	addi	a0,gp,-2028 # 30007b3c <cur_thread_num>
	la a1, _end
30001078:	00017597          	auipc	a1,0x17
3000107c:	11058593          	addi	a1,a1,272 # 30018188 <_end>
	bgeu a0, a1, 2f
30001080:	00b57863          	bgeu	a0,a1,30001090 <_start+0x90>
1:
	sw zero, (a0)
30001084:	00052023          	sw	zero,0(a0)
	addi a0, a0, 4
30001088:	00450513          	addi	a0,a0,4
	bltu a0, a1, 1b
3000108c:	feb56ce3          	bltu	a0,a1,30001084 <_start+0x84>
2:

	/* Call global constructors */
	la a0, __libc_fini_array
30001090:	00003517          	auipc	a0,0x3
30001094:	fd450513          	addi	a0,a0,-44 # 30004064 <__libc_fini_array>
	call atexit
30001098:	789020ef          	jal	ra,30004020 <atexit>
	call __libc_init_array
3000109c:	024030ef          	jal	ra,300040c0 <__libc_init_array>
	li t0, MSTATUS_FS
	csrs mstatus, t0 
	csrw fcsr, x0   
#endif

	jal pre_process
300010a0:	68d010ef          	jal	ra,30002f2c <pre_process>

	/* argc = argv = 0 */
	# call reset_handler
	li t1, 8
300010a4:	00800313          	li	t1,8
	csrw mstatus, t1
300010a8:	30031073          	csrw	mstatus,t1
	li a0, 0
300010ac:	00000513          	li	a0,0
	li a1, 0
300010b0:	00000593          	li	a1,0
	call main
300010b4:	6b5010ef          	jal	ra,30002f68 <main>
	tail exit
300010b8:	77d0206f          	j	30004034 <exit>

1:
	j 1b
300010bc:	0000006f          	j	300010bc <_start+0xbc>

Disassembly of section .text:

300010c0 <register_fini>:
300010c0:	00000793          	li	a5,0
300010c4:	00078863          	beqz	a5,300010d4 <register_fini+0x14>
300010c8:	30004537          	lui	a0,0x30004
300010cc:	06450513          	addi	a0,a0,100 # 30004064 <__libc_fini_array>
300010d0:	7510206f          	j	30004020 <atexit>
300010d4:	00008067          	ret
	...

300010e0 <switch_to>:

# 线程切换汇编代码
.globl switch_to
.align 4
switch_to:
	csrrw	t6, mscratch, t6
300010e0:	340f9ff3          	csrrw	t6,mscratch,t6

	reg_save t6			
300010e4:	001fa023          	sw	ra,0(t6)
300010e8:	002fa223          	sw	sp,4(t6)
300010ec:	004fa623          	sw	tp,12(t6)
300010f0:	005fa823          	sw	t0,16(t6)
300010f4:	006faa23          	sw	t1,20(t6)
300010f8:	007fac23          	sw	t2,24(t6)
300010fc:	008fae23          	sw	s0,28(t6)
30001100:	029fa023          	sw	s1,32(t6)
30001104:	02afa223          	sw	a0,36(t6)
30001108:	02bfa423          	sw	a1,40(t6)
3000110c:	02cfa623          	sw	a2,44(t6)
30001110:	02dfa823          	sw	a3,48(t6)
30001114:	02efaa23          	sw	a4,52(t6)
30001118:	02ffac23          	sw	a5,56(t6)
3000111c:	030fae23          	sw	a6,60(t6)
30001120:	051fa023          	sw	a7,64(t6)
30001124:	052fa223          	sw	s2,68(t6)
30001128:	053fa423          	sw	s3,72(t6)
3000112c:	054fa623          	sw	s4,76(t6)
30001130:	055fa823          	sw	s5,80(t6)
30001134:	056faa23          	sw	s6,84(t6)
30001138:	057fac23          	sw	s7,88(t6)
3000113c:	058fae23          	sw	s8,92(t6)
30001140:	079fa023          	sw	s9,96(t6)
30001144:	07afa223          	sw	s10,100(t6)
30001148:	07bfa423          	sw	s11,104(t6)
3000114c:	30002373          	csrr	t1,mstatus
30001150:	066fa623          	sw	t1,108(t6)
30001154:	30502373          	csrr	t1,mtvec
30001158:	066fa823          	sw	t1,112(t6)
3000115c:	34102373          	csrr	t1,mepc
30001160:	066fac23          	sw	t1,120(t6)
30001164:	07cfae23          	sw	t3,124(t6)
30001168:	09dfa023          	sw	t4,128(t6)
3000116c:	09efa223          	sw	t5,132(t6)
	mv	t5, t6	
30001170:	000f8f13          	mv	t5,t6
	csrr	t6, mscratch
30001174:	34002ff3          	csrr	t6,mscratch
	sw	t6, TCB_SIZE(t5)
30001178:	09ff2423          	sw	t6,136(t5)


	csrw	mscratch, a0
3000117c:	34051073          	csrw	mscratch,a0
	mv	t6, a0
30001180:	00050f93          	mv	t6,a0

	reg_restore t6
30001184:	000fa083          	lw	ra,0(t6)
30001188:	004fa503          	lw	a0,4(t6)
3000118c:	004fa103          	lw	sp,4(t6)
30001190:	00cfa203          	lw	tp,12(t6)
30001194:	010fa283          	lw	t0,16(t6)
30001198:	014fa303          	lw	t1,20(t6)
3000119c:	018fa383          	lw	t2,24(t6)
300011a0:	01cfa403          	lw	s0,28(t6)
300011a4:	020fa483          	lw	s1,32(t6)
300011a8:	024fa503          	lw	a0,36(t6)
300011ac:	028fa583          	lw	a1,40(t6)
300011b0:	02cfa603          	lw	a2,44(t6)
300011b4:	030fa683          	lw	a3,48(t6)
300011b8:	034fa703          	lw	a4,52(t6)
300011bc:	038fa783          	lw	a5,56(t6)
300011c0:	03cfa803          	lw	a6,60(t6)
300011c4:	040fa883          	lw	a7,64(t6)
300011c8:	044fa903          	lw	s2,68(t6)
300011cc:	048fa983          	lw	s3,72(t6)
300011d0:	04cfaa03          	lw	s4,76(t6)
300011d4:	050faa83          	lw	s5,80(t6)
300011d8:	054fab03          	lw	s6,84(t6)
300011dc:	058fab83          	lw	s7,88(t6)
300011e0:	05cfac03          	lw	s8,92(t6)
300011e4:	060fac83          	lw	s9,96(t6)
300011e8:	064fad03          	lw	s10,100(t6)
300011ec:	068fad83          	lw	s11,104(t6)
300011f0:	06cfae03          	lw	t3,108(t6)
300011f4:	300e1073          	csrw	mstatus,t3
300011f8:	070fae03          	lw	t3,112(t6)
300011fc:	305e1073          	csrw	mtvec,t3
30001200:	078fae03          	lw	t3,120(t6)
30001204:	341e1073          	csrw	mepc,t3
30001208:	07cfae03          	lw	t3,124(t6)
3000120c:	080fae83          	lw	t4,128(t6)
30001210:	084faf03          	lw	t5,132(t6)
30001214:	088faf83          	lw	t6,136(t6)

	ret
30001218:	00008067          	ret
3000121c:	00000013          	nop

30001220 <int_vector>:
.globl int_vector

.align 4
int_vector:

	csrrw	t6, mscratch, t6
30001220:	340f9ff3          	csrrw	t6,mscratch,t6
	addi t6,t6,TCB_SIZE+4
30001224:	08cf8f93          	addi	t6,t6,140
	reg_save t6
30001228:	001fa023          	sw	ra,0(t6)
3000122c:	002fa223          	sw	sp,4(t6)
30001230:	004fa623          	sw	tp,12(t6)
30001234:	005fa823          	sw	t0,16(t6)
30001238:	006faa23          	sw	t1,20(t6)
3000123c:	007fac23          	sw	t2,24(t6)
30001240:	008fae23          	sw	s0,28(t6)
30001244:	029fa023          	sw	s1,32(t6)
30001248:	02afa223          	sw	a0,36(t6)
3000124c:	02bfa423          	sw	a1,40(t6)
30001250:	02cfa623          	sw	a2,44(t6)
30001254:	02dfa823          	sw	a3,48(t6)
30001258:	02efaa23          	sw	a4,52(t6)
3000125c:	02ffac23          	sw	a5,56(t6)
30001260:	030fae23          	sw	a6,60(t6)
30001264:	051fa023          	sw	a7,64(t6)
30001268:	052fa223          	sw	s2,68(t6)
3000126c:	053fa423          	sw	s3,72(t6)
30001270:	054fa623          	sw	s4,76(t6)
30001274:	055fa823          	sw	s5,80(t6)
30001278:	056faa23          	sw	s6,84(t6)
3000127c:	057fac23          	sw	s7,88(t6)
30001280:	058fae23          	sw	s8,92(t6)
30001284:	079fa023          	sw	s9,96(t6)
30001288:	07afa223          	sw	s10,100(t6)
3000128c:	07bfa423          	sw	s11,104(t6)
30001290:	30002373          	csrr	t1,mstatus
30001294:	066fa623          	sw	t1,108(t6)
30001298:	30502373          	csrr	t1,mtvec
3000129c:	066fa823          	sw	t1,112(t6)
300012a0:	34102373          	csrr	t1,mepc
300012a4:	066fac23          	sw	t1,120(t6)
300012a8:	07cfae23          	sw	t3,124(t6)
300012ac:	09dfa023          	sw	t4,128(t6)
300012b0:	09efa223          	sw	t5,132(t6)


	mv	t5, t6	
300012b4:	000f8f13          	mv	t5,t6
	csrr	t6, mscratch
300012b8:	34002ff3          	csrr	t6,mscratch
	sw	t6, TCB_SIZE(t5)
300012bc:	09ff2423          	sw	t6,136(t5)


	addi t5,t5,-TCB_SIZE-4
300012c0:	f74f0f13          	addi	t5,t5,-140
	csrw	mscratch, t5
300012c4:	340f1073          	csrw	mscratch,t5

	csrr	a0, mepc
300012c8:	34102573          	csrr	a0,mepc
	csrr	a1, mcause
300012cc:	342025f3          	csrr	a1,mcause
	call	int_handler
300012d0:	2d5010ef          	jal	ra,30002da4 <int_handler>


	csrw	mepc, a0
300012d4:	34151073          	csrw	mepc,a0


	csrr	t6, mscratch
300012d8:	34002ff3          	csrr	t6,mscratch
	addi t6,t6,TCB_SIZE+4
300012dc:	08cf8f93          	addi	t6,t6,140
	reg_restore t6
300012e0:	000fa083          	lw	ra,0(t6)
300012e4:	004fa503          	lw	a0,4(t6)
300012e8:	004fa103          	lw	sp,4(t6)
300012ec:	00cfa203          	lw	tp,12(t6)
300012f0:	010fa283          	lw	t0,16(t6)
300012f4:	014fa303          	lw	t1,20(t6)
300012f8:	018fa383          	lw	t2,24(t6)
300012fc:	01cfa403          	lw	s0,28(t6)
30001300:	020fa483          	lw	s1,32(t6)
30001304:	024fa503          	lw	a0,36(t6)
30001308:	028fa583          	lw	a1,40(t6)
3000130c:	02cfa603          	lw	a2,44(t6)
30001310:	030fa683          	lw	a3,48(t6)
30001314:	034fa703          	lw	a4,52(t6)
30001318:	038fa783          	lw	a5,56(t6)
3000131c:	03cfa803          	lw	a6,60(t6)
30001320:	040fa883          	lw	a7,64(t6)
30001324:	044fa903          	lw	s2,68(t6)
30001328:	048fa983          	lw	s3,72(t6)
3000132c:	04cfaa03          	lw	s4,76(t6)
30001330:	050faa83          	lw	s5,80(t6)
30001334:	054fab03          	lw	s6,84(t6)
30001338:	058fab83          	lw	s7,88(t6)
3000133c:	05cfac03          	lw	s8,92(t6)
30001340:	060fac83          	lw	s9,96(t6)
30001344:	064fad03          	lw	s10,100(t6)
30001348:	068fad83          	lw	s11,104(t6)
3000134c:	06cfae03          	lw	t3,108(t6)
30001350:	300e1073          	csrw	mstatus,t3
30001354:	070fae03          	lw	t3,112(t6)
30001358:	305e1073          	csrw	mtvec,t3
3000135c:	078fae03          	lw	t3,120(t6)
30001360:	341e1073          	csrw	mepc,t3
30001364:	07cfae03          	lw	t3,124(t6)
30001368:	080fae83          	lw	t4,128(t6)
3000136c:	084faf03          	lw	t5,132(t6)
30001370:	088faf83          	lw	t6,136(t6)

	mret
30001374:	30200073          	mret

30001378 <uart_putc>:

#define UART		((UART_Typedef	*) UART_BASE	)
#define txdata		UART_BASE + 0xc

void uart_putc(int c)
{
30001378:	fe010113          	addi	sp,sp,-32
3000137c:	00812e23          	sw	s0,28(sp)
30001380:	02010413          	addi	s0,sp,32
30001384:	fea42623          	sw	a0,-20(s0)
        //#define SERIAL_LSR_THRE         0x20
	//while ((DEV_UART2->LSR & SERIAL_LSR_THRE) == 0) ;
        *( volatile int * ) ( txdata ) = c;
30001388:	400007b7          	lui	a5,0x40000
3000138c:	01078793          	addi	a5,a5,16 # 40000010 <_sp+0xff00010>
30001390:	fec42703          	lw	a4,-20(s0)
30001394:	00e7a023          	sw	a4,0(a5)
}
30001398:	00000013          	nop
3000139c:	01c12403          	lw	s0,28(sp)
300013a0:	02010113          	addi	sp,sp,32
300013a4:	00008067          	ret

300013a8 <outbyte>:

int outbyte(int c)
{
300013a8:	fe010113          	addi	sp,sp,-32
300013ac:	00112e23          	sw	ra,28(sp)
300013b0:	00812c23          	sw	s0,24(sp)
300013b4:	02010413          	addi	s0,sp,32
300013b8:	fea42623          	sw	a0,-20(s0)
	uart_putc(c);
300013bc:	fec42503          	lw	a0,-20(s0)
300013c0:	fb9ff0ef          	jal	ra,30001378 <uart_putc>
	if (c =='\n')
300013c4:	fec42703          	lw	a4,-20(s0)
300013c8:	00a00793          	li	a5,10
300013cc:	00f71663          	bne	a4,a5,300013d8 <outbyte+0x30>
		uart_putc('\r');
300013d0:	00d00513          	li	a0,13
300013d4:	fa5ff0ef          	jal	ra,30001378 <uart_putc>
	return c;
300013d8:	fec42783          	lw	a5,-20(s0)
}
300013dc:	00078513          	mv	a0,a5
300013e0:	01c12083          	lw	ra,28(sp)
300013e4:	01812403          	lw	s0,24(sp)
300013e8:	02010113          	addi	sp,sp,32
300013ec:	00008067          	ret

300013f0 <printchar>:



static void printchar(char **str, int c)
{
300013f0:	fe010113          	addi	sp,sp,-32
300013f4:	00112e23          	sw	ra,28(sp)
300013f8:	00812c23          	sw	s0,24(sp)
300013fc:	02010413          	addi	s0,sp,32
30001400:	fea42623          	sw	a0,-20(s0)
30001404:	feb42423          	sw	a1,-24(s0)
	extern int putchar(int c);

	if (str) {
30001408:	fec42783          	lw	a5,-20(s0)
3000140c:	02078863          	beqz	a5,3000143c <printchar+0x4c>
		**str = c;
30001410:	fec42783          	lw	a5,-20(s0)
30001414:	0007a783          	lw	a5,0(a5)
30001418:	fe842703          	lw	a4,-24(s0)
3000141c:	0ff77713          	zext.b	a4,a4
30001420:	00e78023          	sb	a4,0(a5)
		++(*str);
30001424:	fec42783          	lw	a5,-20(s0)
30001428:	0007a783          	lw	a5,0(a5)
3000142c:	00178713          	addi	a4,a5,1
30001430:	fec42783          	lw	a5,-20(s0)
30001434:	00e7a023          	sw	a4,0(a5)
	}
	else (void)putchar(c);
}
30001438:	00c0006f          	j	30001444 <printchar+0x54>
	else (void)putchar(c);
3000143c:	fe842503          	lw	a0,-24(s0)
30001440:	f69ff0ef          	jal	ra,300013a8 <outbyte>
}
30001444:	00000013          	nop
30001448:	01c12083          	lw	ra,28(sp)
3000144c:	01812403          	lw	s0,24(sp)
30001450:	02010113          	addi	sp,sp,32
30001454:	00008067          	ret

30001458 <prints>:

#define PAD_RIGHT 1
#define PAD_ZERO 2

static int prints(char **out, const char *string, int width, int pad)
{
30001458:	fd010113          	addi	sp,sp,-48
3000145c:	02112623          	sw	ra,44(sp)
30001460:	02812423          	sw	s0,40(sp)
30001464:	02912223          	sw	s1,36(sp)
30001468:	03212023          	sw	s2,32(sp)
3000146c:	01312e23          	sw	s3,28(sp)
30001470:	01412c23          	sw	s4,24(sp)
30001474:	03010413          	addi	s0,sp,48
30001478:	fca42e23          	sw	a0,-36(s0)
3000147c:	fcb42c23          	sw	a1,-40(s0)
30001480:	fcc42a23          	sw	a2,-44(s0)
30001484:	fcd42823          	sw	a3,-48(s0)
	register int pc = 0, padchar = ' ';
30001488:	00000493          	li	s1,0
3000148c:	02000a13          	li	s4,32

	if (width > 0) {
30001490:	fd442783          	lw	a5,-44(s0)
30001494:	04f05663          	blez	a5,300014e0 <prints+0x88>
		register int len = 0;
30001498:	00000913          	li	s2,0
		register const char *ptr;
		for (ptr = string; *ptr; ++ptr) ++len;
3000149c:	fd842983          	lw	s3,-40(s0)
300014a0:	00c0006f          	j	300014ac <prints+0x54>
300014a4:	00190913          	addi	s2,s2,1
300014a8:	00198993          	addi	s3,s3,1
300014ac:	0009c783          	lbu	a5,0(s3)
300014b0:	fe079ae3          	bnez	a5,300014a4 <prints+0x4c>
		if (len >= width) width = 0;
300014b4:	fd442783          	lw	a5,-44(s0)
300014b8:	00f94663          	blt	s2,a5,300014c4 <prints+0x6c>
300014bc:	fc042a23          	sw	zero,-44(s0)
300014c0:	0100006f          	j	300014d0 <prints+0x78>
		else width -= len;
300014c4:	fd442783          	lw	a5,-44(s0)
300014c8:	412787b3          	sub	a5,a5,s2
300014cc:	fcf42a23          	sw	a5,-44(s0)
		if (pad & PAD_ZERO) padchar = '0';
300014d0:	fd042783          	lw	a5,-48(s0)
300014d4:	0027f793          	andi	a5,a5,2
300014d8:	00078463          	beqz	a5,300014e0 <prints+0x88>
300014dc:	03000a13          	li	s4,48
	}
	if (!(pad & PAD_RIGHT)) {
300014e0:	fd042783          	lw	a5,-48(s0)
300014e4:	0017f793          	andi	a5,a5,1
300014e8:	04079a63          	bnez	a5,3000153c <prints+0xe4>
		for ( ; width > 0; --width) {
300014ec:	0200006f          	j	3000150c <prints+0xb4>
			printchar (out, padchar);
300014f0:	000a0593          	mv	a1,s4
300014f4:	fdc42503          	lw	a0,-36(s0)
300014f8:	ef9ff0ef          	jal	ra,300013f0 <printchar>
			++pc;
300014fc:	00148493          	addi	s1,s1,1
		for ( ; width > 0; --width) {
30001500:	fd442783          	lw	a5,-44(s0)
30001504:	fff78793          	addi	a5,a5,-1
30001508:	fcf42a23          	sw	a5,-44(s0)
3000150c:	fd442783          	lw	a5,-44(s0)
30001510:	fef040e3          	bgtz	a5,300014f0 <prints+0x98>
		}
	}
	for ( ; *string ; ++string) {
30001514:	0280006f          	j	3000153c <prints+0xe4>
		printchar (out, *string);
30001518:	fd842783          	lw	a5,-40(s0)
3000151c:	0007c783          	lbu	a5,0(a5)
30001520:	00078593          	mv	a1,a5
30001524:	fdc42503          	lw	a0,-36(s0)
30001528:	ec9ff0ef          	jal	ra,300013f0 <printchar>
		++pc;
3000152c:	00148493          	addi	s1,s1,1
	for ( ; *string ; ++string) {
30001530:	fd842783          	lw	a5,-40(s0)
30001534:	00178793          	addi	a5,a5,1
30001538:	fcf42c23          	sw	a5,-40(s0)
3000153c:	fd842783          	lw	a5,-40(s0)
30001540:	0007c783          	lbu	a5,0(a5)
30001544:	fc079ae3          	bnez	a5,30001518 <prints+0xc0>
	}
	for ( ; width > 0; --width) {
30001548:	0200006f          	j	30001568 <prints+0x110>
		printchar (out, padchar);
3000154c:	000a0593          	mv	a1,s4
30001550:	fdc42503          	lw	a0,-36(s0)
30001554:	e9dff0ef          	jal	ra,300013f0 <printchar>
		++pc;
30001558:	00148493          	addi	s1,s1,1
	for ( ; width > 0; --width) {
3000155c:	fd442783          	lw	a5,-44(s0)
30001560:	fff78793          	addi	a5,a5,-1
30001564:	fcf42a23          	sw	a5,-44(s0)
30001568:	fd442783          	lw	a5,-44(s0)
3000156c:	fef040e3          	bgtz	a5,3000154c <prints+0xf4>
	}

	return pc;
30001570:	00048793          	mv	a5,s1
}
30001574:	00078513          	mv	a0,a5
30001578:	02c12083          	lw	ra,44(sp)
3000157c:	02812403          	lw	s0,40(sp)
30001580:	02412483          	lw	s1,36(sp)
30001584:	02012903          	lw	s2,32(sp)
30001588:	01c12983          	lw	s3,28(sp)
3000158c:	01812a03          	lw	s4,24(sp)
30001590:	03010113          	addi	sp,sp,48
30001594:	00008067          	ret

30001598 <printi>:

/* the following should be enough for 32 bit int */
#define PRINT_BUF_LEN 12

static int printi(char **out, int i, int b, int sg, int width, int pad, int letbase)
{
30001598:	fb010113          	addi	sp,sp,-80
3000159c:	04112623          	sw	ra,76(sp)
300015a0:	04812423          	sw	s0,72(sp)
300015a4:	04912223          	sw	s1,68(sp)
300015a8:	05212023          	sw	s2,64(sp)
300015ac:	03312e23          	sw	s3,60(sp)
300015b0:	03412c23          	sw	s4,56(sp)
300015b4:	05010413          	addi	s0,sp,80
300015b8:	fca42623          	sw	a0,-52(s0)
300015bc:	fcb42423          	sw	a1,-56(s0)
300015c0:	fcc42223          	sw	a2,-60(s0)
300015c4:	fcd42023          	sw	a3,-64(s0)
300015c8:	fae42e23          	sw	a4,-68(s0)
300015cc:	faf42c23          	sw	a5,-72(s0)
300015d0:	fb042a23          	sw	a6,-76(s0)
	char print_buf[PRINT_BUF_LEN];
	register char *s;
	register int t, neg = 0, pc = 0;
300015d4:	00000a13          	li	s4,0
300015d8:	00000993          	li	s3,0
	register unsigned int u = i;
300015dc:	fc842083          	lw	ra,-56(s0)

	if (i == 0) {
300015e0:	fc842783          	lw	a5,-56(s0)
300015e4:	02079863          	bnez	a5,30001614 <printi+0x7c>
		print_buf[0] = '0';
300015e8:	03000793          	li	a5,48
300015ec:	fcf40a23          	sb	a5,-44(s0)
		print_buf[1] = '\0';
300015f0:	fc040aa3          	sb	zero,-43(s0)
		return prints (out, print_buf, width, pad);
300015f4:	fd440793          	addi	a5,s0,-44
300015f8:	fb842683          	lw	a3,-72(s0)
300015fc:	fbc42603          	lw	a2,-68(s0)
30001600:	00078593          	mv	a1,a5
30001604:	fcc42503          	lw	a0,-52(s0)
30001608:	e51ff0ef          	jal	ra,30001458 <prints>
3000160c:	00050793          	mv	a5,a0
30001610:	0e00006f          	j	300016f0 <printi+0x158>
	}

	if (sg && b == 10 && i < 0) {
30001614:	fc042783          	lw	a5,-64(s0)
30001618:	02078463          	beqz	a5,30001640 <printi+0xa8>
3000161c:	fc442703          	lw	a4,-60(s0)
30001620:	00a00793          	li	a5,10
30001624:	00f71e63          	bne	a4,a5,30001640 <printi+0xa8>
30001628:	fc842783          	lw	a5,-56(s0)
3000162c:	0007da63          	bgez	a5,30001640 <printi+0xa8>
		neg = 1;
30001630:	00100a13          	li	s4,1
		u = -i;
30001634:	fc842783          	lw	a5,-56(s0)
30001638:	40f007b3          	neg	a5,a5
3000163c:	00078093          	mv	ra,a5
	}

	s = print_buf + PRINT_BUF_LEN-1;
30001640:	fd440493          	addi	s1,s0,-44
30001644:	00b48493          	addi	s1,s1,11
	*s = '\0';
30001648:	00048023          	sb	zero,0(s1)

	while (u) {
3000164c:	0400006f          	j	3000168c <printi+0xf4>
		t = u % b;
30001650:	fc442783          	lw	a5,-60(s0)
30001654:	02f0f7b3          	remu	a5,ra,a5
30001658:	00078913          	mv	s2,a5
		if( t >= 10 )
3000165c:	00900793          	li	a5,9
30001660:	0127d863          	bge	a5,s2,30001670 <printi+0xd8>
			t += letbase - '0' - 10;
30001664:	fb442783          	lw	a5,-76(s0)
30001668:	fc678793          	addi	a5,a5,-58
3000166c:	00f90933          	add	s2,s2,a5
		*--s = t + '0';
30001670:	0ff97793          	zext.b	a5,s2
30001674:	fff48493          	addi	s1,s1,-1
30001678:	03078793          	addi	a5,a5,48
3000167c:	0ff7f793          	zext.b	a5,a5
30001680:	00f48023          	sb	a5,0(s1)
		u /= b;
30001684:	fc442783          	lw	a5,-60(s0)
30001688:	02f0d0b3          	divu	ra,ra,a5
	while (u) {
3000168c:	fc0092e3          	bnez	ra,30001650 <printi+0xb8>
	}

	if (neg) {
30001690:	040a0263          	beqz	s4,300016d4 <printi+0x13c>
		if( width && (pad & PAD_ZERO) ) {
30001694:	fbc42783          	lw	a5,-68(s0)
30001698:	02078863          	beqz	a5,300016c8 <printi+0x130>
3000169c:	fb842783          	lw	a5,-72(s0)
300016a0:	0027f793          	andi	a5,a5,2
300016a4:	02078263          	beqz	a5,300016c8 <printi+0x130>
			printchar (out, '-');
300016a8:	02d00593          	li	a1,45
300016ac:	fcc42503          	lw	a0,-52(s0)
300016b0:	d41ff0ef          	jal	ra,300013f0 <printchar>
			++pc;
300016b4:	00198993          	addi	s3,s3,1
			--width;
300016b8:	fbc42783          	lw	a5,-68(s0)
300016bc:	fff78793          	addi	a5,a5,-1
300016c0:	faf42e23          	sw	a5,-68(s0)
300016c4:	0100006f          	j	300016d4 <printi+0x13c>
		}
		else {
			*--s = '-';
300016c8:	fff48493          	addi	s1,s1,-1
300016cc:	02d00793          	li	a5,45
300016d0:	00f48023          	sb	a5,0(s1)
		}
	}

	return pc + prints (out, s, width, pad);
300016d4:	fb842683          	lw	a3,-72(s0)
300016d8:	fbc42603          	lw	a2,-68(s0)
300016dc:	00048593          	mv	a1,s1
300016e0:	fcc42503          	lw	a0,-52(s0)
300016e4:	d75ff0ef          	jal	ra,30001458 <prints>
300016e8:	00050793          	mv	a5,a0
300016ec:	00f987b3          	add	a5,s3,a5
}
300016f0:	00078513          	mv	a0,a5
300016f4:	04c12083          	lw	ra,76(sp)
300016f8:	04812403          	lw	s0,72(sp)
300016fc:	04412483          	lw	s1,68(sp)
30001700:	04012903          	lw	s2,64(sp)
30001704:	03c12983          	lw	s3,60(sp)
30001708:	03812a03          	lw	s4,56(sp)
3000170c:	05010113          	addi	sp,sp,80
30001710:	00008067          	ret

30001714 <print>:

static int print( char **out, const char *format, va_list args )
{
30001714:	fc010113          	addi	sp,sp,-64
30001718:	02112e23          	sw	ra,60(sp)
3000171c:	02812c23          	sw	s0,56(sp)
30001720:	02912a23          	sw	s1,52(sp)
30001724:	03212823          	sw	s2,48(sp)
30001728:	03312623          	sw	s3,44(sp)
3000172c:	04010413          	addi	s0,sp,64
30001730:	fca42623          	sw	a0,-52(s0)
30001734:	fcb42423          	sw	a1,-56(s0)
30001738:	fcc42223          	sw	a2,-60(s0)
	register int width, pad;
	register int pc = 0;
3000173c:	00000493          	li	s1,0
	char scr[2];

	for (; *format != 0; ++format) {
30001740:	2d40006f          	j	30001a14 <print+0x300>
		if (*format == '%') {
30001744:	fc842783          	lw	a5,-56(s0)
30001748:	0007c703          	lbu	a4,0(a5)
3000174c:	02500793          	li	a5,37
30001750:	28f71a63          	bne	a4,a5,300019e4 <print+0x2d0>
			++format;
30001754:	fc842783          	lw	a5,-56(s0)
30001758:	00178793          	addi	a5,a5,1
3000175c:	fcf42423          	sw	a5,-56(s0)
			width = pad = 0;
30001760:	00000993          	li	s3,0
30001764:	00098913          	mv	s2,s3
			if (*format == '\0') break;
30001768:	fc842783          	lw	a5,-56(s0)
3000176c:	0007c783          	lbu	a5,0(a5)
30001770:	2a078a63          	beqz	a5,30001a24 <print+0x310>
			if (*format == '%') goto out;
30001774:	fc842783          	lw	a5,-56(s0)
30001778:	0007c703          	lbu	a4,0(a5)
3000177c:	02500793          	li	a5,37
30001780:	26f70663          	beq	a4,a5,300019ec <print+0x2d8>
			if (*format == '-') {
30001784:	fc842783          	lw	a5,-56(s0)
30001788:	0007c703          	lbu	a4,0(a5)
3000178c:	02d00793          	li	a5,45
30001790:	02f71463          	bne	a4,a5,300017b8 <print+0xa4>
				++format;
30001794:	fc842783          	lw	a5,-56(s0)
30001798:	00178793          	addi	a5,a5,1
3000179c:	fcf42423          	sw	a5,-56(s0)
				pad = PAD_RIGHT;
300017a0:	00100993          	li	s3,1
			}
			while (*format == '0') {
300017a4:	0140006f          	j	300017b8 <print+0xa4>
				++format;
300017a8:	fc842783          	lw	a5,-56(s0)
300017ac:	00178793          	addi	a5,a5,1
300017b0:	fcf42423          	sw	a5,-56(s0)
				pad |= PAD_ZERO;
300017b4:	0029e993          	ori	s3,s3,2
			while (*format == '0') {
300017b8:	fc842783          	lw	a5,-56(s0)
300017bc:	0007c703          	lbu	a4,0(a5)
300017c0:	03000793          	li	a5,48
300017c4:	fef702e3          	beq	a4,a5,300017a8 <print+0x94>
			}
			for ( ; *format >= '0' && *format <= '9'; ++format) {
300017c8:	0340006f          	j	300017fc <print+0xe8>
				width *= 10;
300017cc:	00090793          	mv	a5,s2
300017d0:	00279793          	slli	a5,a5,0x2
300017d4:	012787b3          	add	a5,a5,s2
300017d8:	00179793          	slli	a5,a5,0x1
300017dc:	00078913          	mv	s2,a5
				width += *format - '0';
300017e0:	fc842783          	lw	a5,-56(s0)
300017e4:	0007c783          	lbu	a5,0(a5)
300017e8:	fd078793          	addi	a5,a5,-48
300017ec:	00f90933          	add	s2,s2,a5
			for ( ; *format >= '0' && *format <= '9'; ++format) {
300017f0:	fc842783          	lw	a5,-56(s0)
300017f4:	00178793          	addi	a5,a5,1
300017f8:	fcf42423          	sw	a5,-56(s0)
300017fc:	fc842783          	lw	a5,-56(s0)
30001800:	0007c703          	lbu	a4,0(a5)
30001804:	02f00793          	li	a5,47
30001808:	00e7fa63          	bgeu	a5,a4,3000181c <print+0x108>
3000180c:	fc842783          	lw	a5,-56(s0)
30001810:	0007c703          	lbu	a4,0(a5)
30001814:	03900793          	li	a5,57
30001818:	fae7fae3          	bgeu	a5,a4,300017cc <print+0xb8>
			}
			if( *format == 's' ) {
3000181c:	fc842783          	lw	a5,-56(s0)
30001820:	0007c703          	lbu	a4,0(a5)
30001824:	07300793          	li	a5,115
30001828:	04f71663          	bne	a4,a5,30001874 <print+0x160>
				register char *s = (char *)((long)va_arg( args, int ));
3000182c:	fc442783          	lw	a5,-60(s0)
30001830:	00478713          	addi	a4,a5,4
30001834:	fce42223          	sw	a4,-60(s0)
30001838:	0007a783          	lw	a5,0(a5)
3000183c:	00078093          	mv	ra,a5
				pc += prints (out, s?s:"(null)", width, pad);
30001840:	00008663          	beqz	ra,3000184c <print+0x138>
30001844:	00008793          	mv	a5,ra
30001848:	00c0006f          	j	30001854 <print+0x140>
3000184c:	300077b7          	lui	a5,0x30007
30001850:	00078793          	mv	a5,a5
30001854:	00098693          	mv	a3,s3
30001858:	00090613          	mv	a2,s2
3000185c:	00078593          	mv	a1,a5
30001860:	fcc42503          	lw	a0,-52(s0)
30001864:	bf5ff0ef          	jal	ra,30001458 <prints>
30001868:	00050793          	mv	a5,a0
3000186c:	00f484b3          	add	s1,s1,a5
				continue;
30001870:	1980006f          	j	30001a08 <print+0x2f4>
			}
			if( *format == 'd' ) {
30001874:	fc842783          	lw	a5,-56(s0)
30001878:	0007c703          	lbu	a4,0(a5) # 30007000 <_data>
3000187c:	06400793          	li	a5,100
30001880:	02f71e63          	bne	a4,a5,300018bc <print+0x1a8>
				pc += printi (out, va_arg( args, int ), 10, 1, width, pad, 'a');
30001884:	fc442783          	lw	a5,-60(s0)
30001888:	00478713          	addi	a4,a5,4
3000188c:	fce42223          	sw	a4,-60(s0)
30001890:	0007a583          	lw	a1,0(a5)
30001894:	06100813          	li	a6,97
30001898:	00098793          	mv	a5,s3
3000189c:	00090713          	mv	a4,s2
300018a0:	00100693          	li	a3,1
300018a4:	00a00613          	li	a2,10
300018a8:	fcc42503          	lw	a0,-52(s0)
300018ac:	cedff0ef          	jal	ra,30001598 <printi>
300018b0:	00050793          	mv	a5,a0
300018b4:	00f484b3          	add	s1,s1,a5
				continue;
300018b8:	1500006f          	j	30001a08 <print+0x2f4>
			}
			if( *format == 'x' ) {
300018bc:	fc842783          	lw	a5,-56(s0)
300018c0:	0007c703          	lbu	a4,0(a5)
300018c4:	07800793          	li	a5,120
300018c8:	02f71e63          	bne	a4,a5,30001904 <print+0x1f0>
				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'a');
300018cc:	fc442783          	lw	a5,-60(s0)
300018d0:	00478713          	addi	a4,a5,4
300018d4:	fce42223          	sw	a4,-60(s0)
300018d8:	0007a583          	lw	a1,0(a5)
300018dc:	06100813          	li	a6,97
300018e0:	00098793          	mv	a5,s3
300018e4:	00090713          	mv	a4,s2
300018e8:	00000693          	li	a3,0
300018ec:	01000613          	li	a2,16
300018f0:	fcc42503          	lw	a0,-52(s0)
300018f4:	ca5ff0ef          	jal	ra,30001598 <printi>
300018f8:	00050793          	mv	a5,a0
300018fc:	00f484b3          	add	s1,s1,a5
				continue;
30001900:	1080006f          	j	30001a08 <print+0x2f4>
			}
			if( *format == 'X' ) {
30001904:	fc842783          	lw	a5,-56(s0)
30001908:	0007c703          	lbu	a4,0(a5)
3000190c:	05800793          	li	a5,88
30001910:	02f71e63          	bne	a4,a5,3000194c <print+0x238>
				pc += printi (out, va_arg( args, int ), 16, 0, width, pad, 'A');
30001914:	fc442783          	lw	a5,-60(s0)
30001918:	00478713          	addi	a4,a5,4
3000191c:	fce42223          	sw	a4,-60(s0)
30001920:	0007a583          	lw	a1,0(a5)
30001924:	04100813          	li	a6,65
30001928:	00098793          	mv	a5,s3
3000192c:	00090713          	mv	a4,s2
30001930:	00000693          	li	a3,0
30001934:	01000613          	li	a2,16
30001938:	fcc42503          	lw	a0,-52(s0)
3000193c:	c5dff0ef          	jal	ra,30001598 <printi>
30001940:	00050793          	mv	a5,a0
30001944:	00f484b3          	add	s1,s1,a5
				continue;
30001948:	0c00006f          	j	30001a08 <print+0x2f4>
			}
			if( *format == 'u' ) {
3000194c:	fc842783          	lw	a5,-56(s0)
30001950:	0007c703          	lbu	a4,0(a5)
30001954:	07500793          	li	a5,117
30001958:	02f71e63          	bne	a4,a5,30001994 <print+0x280>
				pc += printi (out, va_arg( args, int ), 10, 0, width, pad, 'a');
3000195c:	fc442783          	lw	a5,-60(s0)
30001960:	00478713          	addi	a4,a5,4
30001964:	fce42223          	sw	a4,-60(s0)
30001968:	0007a583          	lw	a1,0(a5)
3000196c:	06100813          	li	a6,97
30001970:	00098793          	mv	a5,s3
30001974:	00090713          	mv	a4,s2
30001978:	00000693          	li	a3,0
3000197c:	00a00613          	li	a2,10
30001980:	fcc42503          	lw	a0,-52(s0)
30001984:	c15ff0ef          	jal	ra,30001598 <printi>
30001988:	00050793          	mv	a5,a0
3000198c:	00f484b3          	add	s1,s1,a5
				continue;
30001990:	0780006f          	j	30001a08 <print+0x2f4>
			}
			if( *format == 'c' ) {
30001994:	fc842783          	lw	a5,-56(s0)
30001998:	0007c703          	lbu	a4,0(a5)
3000199c:	06300793          	li	a5,99
300019a0:	06f71463          	bne	a4,a5,30001a08 <print+0x2f4>
				/* char are converted to int then pushed on the stack */
				scr[0] = (char)va_arg( args, int );
300019a4:	fc442783          	lw	a5,-60(s0)
300019a8:	00478713          	addi	a4,a5,4
300019ac:	fce42223          	sw	a4,-60(s0)
300019b0:	0007a783          	lw	a5,0(a5)
300019b4:	0ff7f793          	zext.b	a5,a5
300019b8:	fcf40e23          	sb	a5,-36(s0)
				scr[1] = '\0';
300019bc:	fc040ea3          	sb	zero,-35(s0)
				pc += prints (out, scr, width, pad);
300019c0:	fdc40793          	addi	a5,s0,-36
300019c4:	00098693          	mv	a3,s3
300019c8:	00090613          	mv	a2,s2
300019cc:	00078593          	mv	a1,a5
300019d0:	fcc42503          	lw	a0,-52(s0)
300019d4:	a85ff0ef          	jal	ra,30001458 <prints>
300019d8:	00050793          	mv	a5,a0
300019dc:	00f484b3          	add	s1,s1,a5
				continue;
300019e0:	0280006f          	j	30001a08 <print+0x2f4>
			}
		}
		else {
		out:
300019e4:	00000013          	nop
300019e8:	0080006f          	j	300019f0 <print+0x2dc>
			if (*format == '%') goto out;
300019ec:	00000013          	nop
			printchar (out, *format);
300019f0:	fc842783          	lw	a5,-56(s0)
300019f4:	0007c783          	lbu	a5,0(a5)
300019f8:	00078593          	mv	a1,a5
300019fc:	fcc42503          	lw	a0,-52(s0)
30001a00:	9f1ff0ef          	jal	ra,300013f0 <printchar>
			++pc;
30001a04:	00148493          	addi	s1,s1,1
	for (; *format != 0; ++format) {
30001a08:	fc842783          	lw	a5,-56(s0)
30001a0c:	00178793          	addi	a5,a5,1
30001a10:	fcf42423          	sw	a5,-56(s0)
30001a14:	fc842783          	lw	a5,-56(s0)
30001a18:	0007c783          	lbu	a5,0(a5)
30001a1c:	d20794e3          	bnez	a5,30001744 <print+0x30>
30001a20:	0080006f          	j	30001a28 <print+0x314>
			if (*format == '\0') break;
30001a24:	00000013          	nop
		}
	}
	if (out) **out = '\0';
30001a28:	fcc42783          	lw	a5,-52(s0)
30001a2c:	00078863          	beqz	a5,30001a3c <print+0x328>
30001a30:	fcc42783          	lw	a5,-52(s0)
30001a34:	0007a783          	lw	a5,0(a5)
30001a38:	00078023          	sb	zero,0(a5)
	va_end( args );
	return pc;
30001a3c:	00048793          	mv	a5,s1
}
30001a40:	00078513          	mv	a0,a5
30001a44:	03c12083          	lw	ra,60(sp)
30001a48:	03812403          	lw	s0,56(sp)
30001a4c:	03412483          	lw	s1,52(sp)
30001a50:	03012903          	lw	s2,48(sp)
30001a54:	02c12983          	lw	s3,44(sp)
30001a58:	04010113          	addi	sp,sp,64
30001a5c:	00008067          	ret

30001a60 <printf>:

int printf(const char *format, ...)
{
30001a60:	fb010113          	addi	sp,sp,-80
30001a64:	02112623          	sw	ra,44(sp)
30001a68:	02812423          	sw	s0,40(sp)
30001a6c:	03010413          	addi	s0,sp,48
30001a70:	fca42e23          	sw	a0,-36(s0)
30001a74:	00b42223          	sw	a1,4(s0)
30001a78:	00c42423          	sw	a2,8(s0)
30001a7c:	00d42623          	sw	a3,12(s0)
30001a80:	00e42823          	sw	a4,16(s0)
30001a84:	00f42a23          	sw	a5,20(s0)
30001a88:	01042c23          	sw	a6,24(s0)
30001a8c:	01142e23          	sw	a7,28(s0)
        va_list args;
        
        va_start( args, format );
30001a90:	02040793          	addi	a5,s0,32
30001a94:	fcf42c23          	sw	a5,-40(s0)
30001a98:	fd842783          	lw	a5,-40(s0)
30001a9c:	fe478793          	addi	a5,a5,-28
30001aa0:	fef42623          	sw	a5,-20(s0)
        return print( 0, format, args);
30001aa4:	fec42783          	lw	a5,-20(s0)
30001aa8:	00078613          	mv	a2,a5
30001aac:	fdc42583          	lw	a1,-36(s0)
30001ab0:	00000513          	li	a0,0
30001ab4:	c61ff0ef          	jal	ra,30001714 <print>
30001ab8:	00050793          	mv	a5,a0
}
30001abc:	00078513          	mv	a0,a5
30001ac0:	02c12083          	lw	ra,44(sp)
30001ac4:	02812403          	lw	s0,40(sp)
30001ac8:	05010113          	addi	sp,sp,80
30001acc:	00008067          	ret

30001ad0 <uart_init>:
void uart_init()
{
30001ad0:	fe010113          	addi	sp,sp,-32
30001ad4:	00812e23          	sw	s0,28(sp)
30001ad8:	02010413          	addi	s0,sp,32
	UART_Typedef *uart = UART;
30001adc:	400007b7          	lui	a5,0x40000
30001ae0:	00478793          	addi	a5,a5,4 # 40000004 <_sp+0xff00004>
30001ae4:	fef42623          	sw	a5,-20(s0)
	uint32_t ctrl_data = 3;
30001ae8:	00300793          	li	a5,3
30001aec:	fef42423          	sw	a5,-24(s0)
	uint32_t divider = 0x15b;
30001af0:	15b00793          	li	a5,347
30001af4:	fef42223          	sw	a5,-28(s0)
	uart->CTRL 		= ctrl_data;
30001af8:	fec42783          	lw	a5,-20(s0)
30001afc:	fe842703          	lw	a4,-24(s0)
30001b00:	00e7a023          	sw	a4,0(a5)
	uart->BAUDDIV	= divider;
30001b04:	fec42783          	lw	a5,-20(s0)
30001b08:	fe442703          	lw	a4,-28(s0)
30001b0c:	00e7a223          	sw	a4,4(a5)
30001b10:	00000013          	nop
30001b14:	01c12403          	lw	s0,28(sp)
30001b18:	02010113          	addi	sp,sp,32
30001b1c:	00008067          	ret

30001b20 <timer_start>:
#include "timer.h"
void timer_start(int c)				//start timer,set time period c ms
{
30001b20:	fd010113          	addi	sp,sp,-48
30001b24:	02812623          	sw	s0,44(sp)
30001b28:	03010413          	addi	s0,sp,48
30001b2c:	fca42e23          	sw	a0,-36(s0)
	int t = 3000 * 50000;
30001b30:	08f0d7b7          	lui	a5,0x8f0d
30001b34:	18078793          	addi	a5,a5,384 # 8f0d180 <__stack_size+0x8f0c180>
30001b38:	fef42623          	sw	a5,-20(s0)
	*( volatile int * ) ( MTIMECMP )   = t;
30001b3c:	400007b7          	lui	a5,0x40000
30001b40:	04078793          	addi	a5,a5,64 # 40000040 <_sp+0xff00040>
30001b44:	fec42703          	lw	a4,-20(s0)
30001b48:	00e7a023          	sw	a4,0(a5)
	*( volatile int * ) ( MCOUNTSTAR ) = 1;
30001b4c:	400007b7          	lui	a5,0x40000
30001b50:	04478793          	addi	a5,a5,68 # 40000044 <_sp+0xff00044>
30001b54:	00100713          	li	a4,1
30001b58:	00e7a023          	sw	a4,0(a5)
}
30001b5c:	00000013          	nop
30001b60:	02c12403          	lw	s0,44(sp)
30001b64:	03010113          	addi	sp,sp,48
30001b68:	00008067          	ret

30001b6c <timer_close>:

void timer_close()
{
30001b6c:	ff010113          	addi	sp,sp,-16
30001b70:	00812623          	sw	s0,12(sp)
30001b74:	01010413          	addi	s0,sp,16
	*( volatile int * ) ( MCOUNTSTAR ) = 0;
30001b78:	400007b7          	lui	a5,0x40000
30001b7c:	04478793          	addi	a5,a5,68 # 40000044 <_sp+0xff00044>
30001b80:	0007a023          	sw	zero,0(a5)
}
30001b84:	00000013          	nop
30001b88:	00c12403          	lw	s0,12(sp)
30001b8c:	01010113          	addi	sp,sp,16
30001b90:	00008067          	ret

30001b94 <timer_init>:

void timer_init(){
30001b94:	ff010113          	addi	sp,sp,-16
30001b98:	00112623          	sw	ra,12(sp)
30001b9c:	00812423          	sw	s0,8(sp)
30001ba0:	01010413          	addi	s0,sp,16
	timer_start(1);
30001ba4:	00100513          	li	a0,1
30001ba8:	f79ff0ef          	jal	ra,30001b20 <timer_start>
}
30001bac:	00000013          	nop
30001bb0:	00c12083          	lw	ra,12(sp)
30001bb4:	00812403          	lw	s0,8(sp)
30001bb8:	01010113          	addi	sp,sp,16
30001bbc:	00008067          	ret

30001bc0 <timer_reset>:
void timer_reset(){
30001bc0:	ff010113          	addi	sp,sp,-16
30001bc4:	00112623          	sw	ra,12(sp)
30001bc8:	00812423          	sw	s0,8(sp)
30001bcc:	01010413          	addi	s0,sp,16
	timer_close();
30001bd0:	f9dff0ef          	jal	ra,30001b6c <timer_close>
	timer_start(1);
30001bd4:	00100513          	li	a0,1
30001bd8:	f49ff0ef          	jal	ra,30001b20 <timer_start>
}
30001bdc:	00000013          	nop
30001be0:	00c12083          	lw	ra,12(sp)
30001be4:	00812403          	lw	s0,8(sp)
30001be8:	01010113          	addi	sp,sp,16
30001bec:	00008067          	ret

30001bf0 <timer_handler>:

void timer_handler(){
30001bf0:	ff010113          	addi	sp,sp,-16
30001bf4:	00112623          	sw	ra,12(sp)
30001bf8:	00812423          	sw	s0,8(sp)
30001bfc:	01010413          	addi	s0,sp,16
	timer_reset();
30001c00:	fc1ff0ef          	jal	ra,30001bc0 <timer_reset>
	sche_thread(0,-1);
30001c04:	fff00593          	li	a1,-1
30001c08:	00000513          	li	a0,0
30001c0c:	79d000ef          	jal	ra,30002ba8 <sche_thread>
30001c10:	00000013          	nop
30001c14:	00c12083          	lw	ra,12(sp)
30001c18:	00812403          	lw	s0,8(sp)
30001c1c:	01010113          	addi	sp,sp,16
30001c20:	00008067          	ret

30001c24 <conv2d>:
    dst:CHW
    kernel_data:IOHW
    stripe=1
    no padding
*/
void conv2d(int res_size,float * res,float * dst,int in_channels,int out_channels,int kernel_size,float * kernel_data){
30001c24:	fa010113          	addi	sp,sp,-96
30001c28:	04112e23          	sw	ra,92(sp)
30001c2c:	04812c23          	sw	s0,88(sp)
30001c30:	04912a23          	sw	s1,84(sp)
30001c34:	05212823          	sw	s2,80(sp)
30001c38:	06010413          	addi	s0,sp,96
30001c3c:	faa42e23          	sw	a0,-68(s0)
30001c40:	fab42c23          	sw	a1,-72(s0)
30001c44:	fac42a23          	sw	a2,-76(s0)
30001c48:	fad42823          	sw	a3,-80(s0)
30001c4c:	fae42623          	sw	a4,-84(s0)
30001c50:	faf42423          	sw	a5,-88(s0)
30001c54:	fb042223          	sw	a6,-92(s0)
    int dst_size = res_size - 2*(kernel_size/2);
30001c58:	fa842783          	lw	a5,-88(s0)
30001c5c:	01f7d713          	srli	a4,a5,0x1f
30001c60:	00f707b3          	add	a5,a4,a5
30001c64:	4017d793          	srai	a5,a5,0x1
30001c68:	00179793          	slli	a5,a5,0x1
30001c6c:	fbc42703          	lw	a4,-68(s0)
30001c70:	40f707b3          	sub	a5,a4,a5
30001c74:	fcf42a23          	sw	a5,-44(s0)
    for(int oc=0;oc<out_channels;oc++){
30001c78:	fe042623          	sw	zero,-20(s0)
30001c7c:	1e40006f          	j	30001e60 <conv2d+0x23c>
        for(int ic=0;ic<in_channels;ic++){
30001c80:	fe042423          	sw	zero,-24(s0)
30001c84:	1c40006f          	j	30001e48 <conv2d+0x224>
            for(int ii=0;ii<dst_size;ii++){
30001c88:	fe042223          	sw	zero,-28(s0)
30001c8c:	1a40006f          	j	30001e30 <conv2d+0x20c>
                for(int jj=0;jj<dst_size;jj++){
30001c90:	fe042023          	sw	zero,-32(s0)
30001c94:	1840006f          	j	30001e18 <conv2d+0x1f4>
                    for(int ki=0;ki<kernel_size;ki++){
30001c98:	fc042e23          	sw	zero,-36(s0)
30001c9c:	1640006f          	j	30001e00 <conv2d+0x1dc>
                        for(int kj=0;kj<kernel_size;kj++){
30001ca0:	fc042c23          	sw	zero,-40(s0)
30001ca4:	1440006f          	j	30001de8 <conv2d+0x1c4>
                            int dst_index = oc*dst_size*dst_size+ii*dst_size+jj;
30001ca8:	fec42703          	lw	a4,-20(s0)
30001cac:	fd442783          	lw	a5,-44(s0)
30001cb0:	02f70733          	mul	a4,a4,a5
30001cb4:	fd442783          	lw	a5,-44(s0)
30001cb8:	02f70733          	mul	a4,a4,a5
30001cbc:	fe442683          	lw	a3,-28(s0)
30001cc0:	fd442783          	lw	a5,-44(s0)
30001cc4:	02f687b3          	mul	a5,a3,a5
30001cc8:	00f707b3          	add	a5,a4,a5
30001ccc:	fe042703          	lw	a4,-32(s0)
30001cd0:	00f707b3          	add	a5,a4,a5
30001cd4:	fcf42823          	sw	a5,-48(s0)
                            int kernel_index = oc*in_channels*kernel_size*kernel_size+ic*kernel_size*kernel_size+ki*kernel_size+kj;
30001cd8:	fec42703          	lw	a4,-20(s0)
30001cdc:	fb042783          	lw	a5,-80(s0)
30001ce0:	02f70733          	mul	a4,a4,a5
30001ce4:	fa842783          	lw	a5,-88(s0)
30001ce8:	02f70733          	mul	a4,a4,a5
30001cec:	fa842783          	lw	a5,-88(s0)
30001cf0:	02f70733          	mul	a4,a4,a5
30001cf4:	fe842683          	lw	a3,-24(s0)
30001cf8:	fa842783          	lw	a5,-88(s0)
30001cfc:	02f686b3          	mul	a3,a3,a5
30001d00:	fa842783          	lw	a5,-88(s0)
30001d04:	02f687b3          	mul	a5,a3,a5
30001d08:	00f70733          	add	a4,a4,a5
30001d0c:	fdc42683          	lw	a3,-36(s0)
30001d10:	fa842783          	lw	a5,-88(s0)
30001d14:	02f687b3          	mul	a5,a3,a5
30001d18:	00f707b3          	add	a5,a4,a5
30001d1c:	fd842703          	lw	a4,-40(s0)
30001d20:	00f707b3          	add	a5,a4,a5
30001d24:	fcf42623          	sw	a5,-52(s0)
                            int res_index = ic*res_size*res_size + (ki+ii)*res_size+kj+jj;
30001d28:	fe842703          	lw	a4,-24(s0)
30001d2c:	fbc42783          	lw	a5,-68(s0)
30001d30:	02f70733          	mul	a4,a4,a5
30001d34:	fbc42783          	lw	a5,-68(s0)
30001d38:	02f70733          	mul	a4,a4,a5
30001d3c:	fdc42683          	lw	a3,-36(s0)
30001d40:	fe442783          	lw	a5,-28(s0)
30001d44:	00f686b3          	add	a3,a3,a5
30001d48:	fbc42783          	lw	a5,-68(s0)
30001d4c:	02f687b3          	mul	a5,a3,a5
30001d50:	00f70733          	add	a4,a4,a5
30001d54:	fd842783          	lw	a5,-40(s0)
30001d58:	00f707b3          	add	a5,a4,a5
30001d5c:	fe042703          	lw	a4,-32(s0)
30001d60:	00f707b3          	add	a5,a4,a5
30001d64:	fcf42423          	sw	a5,-56(s0)
                            dst[dst_index]+=kernel_data[kernel_index]*res[res_index];
30001d68:	fd042783          	lw	a5,-48(s0)
30001d6c:	00279793          	slli	a5,a5,0x2
30001d70:	fb442703          	lw	a4,-76(s0)
30001d74:	00f707b3          	add	a5,a4,a5
30001d78:	0007a903          	lw	s2,0(a5)
30001d7c:	fcc42783          	lw	a5,-52(s0)
30001d80:	00279793          	slli	a5,a5,0x2
30001d84:	fa442703          	lw	a4,-92(s0)
30001d88:	00f707b3          	add	a5,a4,a5
30001d8c:	0007a683          	lw	a3,0(a5)
30001d90:	fc842783          	lw	a5,-56(s0)
30001d94:	00279793          	slli	a5,a5,0x2
30001d98:	fb842703          	lw	a4,-72(s0)
30001d9c:	00f707b3          	add	a5,a4,a5
30001da0:	0007a783          	lw	a5,0(a5)
30001da4:	00078593          	mv	a1,a5
30001da8:	00068513          	mv	a0,a3
30001dac:	331010ef          	jal	ra,300038dc <__mulsf3>
30001db0:	00050793          	mv	a5,a0
30001db4:	00078693          	mv	a3,a5
30001db8:	fd042783          	lw	a5,-48(s0)
30001dbc:	00279793          	slli	a5,a5,0x2
30001dc0:	fb442703          	lw	a4,-76(s0)
30001dc4:	00f704b3          	add	s1,a4,a5
30001dc8:	00068593          	mv	a1,a3
30001dcc:	00090513          	mv	a0,s2
30001dd0:	290010ef          	jal	ra,30003060 <__addsf3>
30001dd4:	00050793          	mv	a5,a0
30001dd8:	00f4a023          	sw	a5,0(s1)
                        for(int kj=0;kj<kernel_size;kj++){
30001ddc:	fd842783          	lw	a5,-40(s0)
30001de0:	00178793          	addi	a5,a5,1
30001de4:	fcf42c23          	sw	a5,-40(s0)
30001de8:	fd842703          	lw	a4,-40(s0)
30001dec:	fa842783          	lw	a5,-88(s0)
30001df0:	eaf74ce3          	blt	a4,a5,30001ca8 <conv2d+0x84>
                    for(int ki=0;ki<kernel_size;ki++){
30001df4:	fdc42783          	lw	a5,-36(s0)
30001df8:	00178793          	addi	a5,a5,1
30001dfc:	fcf42e23          	sw	a5,-36(s0)
30001e00:	fdc42703          	lw	a4,-36(s0)
30001e04:	fa842783          	lw	a5,-88(s0)
30001e08:	e8f74ce3          	blt	a4,a5,30001ca0 <conv2d+0x7c>
                for(int jj=0;jj<dst_size;jj++){
30001e0c:	fe042783          	lw	a5,-32(s0)
30001e10:	00178793          	addi	a5,a5,1
30001e14:	fef42023          	sw	a5,-32(s0)
30001e18:	fe042703          	lw	a4,-32(s0)
30001e1c:	fd442783          	lw	a5,-44(s0)
30001e20:	e6f74ce3          	blt	a4,a5,30001c98 <conv2d+0x74>
            for(int ii=0;ii<dst_size;ii++){
30001e24:	fe442783          	lw	a5,-28(s0)
30001e28:	00178793          	addi	a5,a5,1
30001e2c:	fef42223          	sw	a5,-28(s0)
30001e30:	fe442703          	lw	a4,-28(s0)
30001e34:	fd442783          	lw	a5,-44(s0)
30001e38:	e4f74ce3          	blt	a4,a5,30001c90 <conv2d+0x6c>
        for(int ic=0;ic<in_channels;ic++){
30001e3c:	fe842783          	lw	a5,-24(s0)
30001e40:	00178793          	addi	a5,a5,1
30001e44:	fef42423          	sw	a5,-24(s0)
30001e48:	fe842703          	lw	a4,-24(s0)
30001e4c:	fb042783          	lw	a5,-80(s0)
30001e50:	e2f74ce3          	blt	a4,a5,30001c88 <conv2d+0x64>
    for(int oc=0;oc<out_channels;oc++){
30001e54:	fec42783          	lw	a5,-20(s0)
30001e58:	00178793          	addi	a5,a5,1
30001e5c:	fef42623          	sw	a5,-20(s0)
30001e60:	fec42703          	lw	a4,-20(s0)
30001e64:	fac42783          	lw	a5,-84(s0)
30001e68:	e0f74ce3          	blt	a4,a5,30001c80 <conv2d+0x5c>
                }
            }
        }
    }
    // print_conv1_data(dst);
}
30001e6c:	00000013          	nop
30001e70:	00000013          	nop
30001e74:	05c12083          	lw	ra,92(sp)
30001e78:	05812403          	lw	s0,88(sp)
30001e7c:	05412483          	lw	s1,84(sp)
30001e80:	05012903          	lw	s2,80(sp)
30001e84:	06010113          	addi	sp,sp,96
30001e88:	00008067          	ret

30001e8c <maxPool2d>:


/*
    stripe = kernel_size
*/
void maxPool2d(int in_channels,int res_size,int kernel_size,float * res,float*dst){
30001e8c:	fa010113          	addi	sp,sp,-96
30001e90:	04112e23          	sw	ra,92(sp)
30001e94:	04812c23          	sw	s0,88(sp)
30001e98:	06010413          	addi	s0,sp,96
30001e9c:	faa42e23          	sw	a0,-68(s0)
30001ea0:	fab42c23          	sw	a1,-72(s0)
30001ea4:	fac42a23          	sw	a2,-76(s0)
30001ea8:	fad42823          	sw	a3,-80(s0)
30001eac:	fae42623          	sw	a4,-84(s0)
    int stripe = kernel_size;
30001eb0:	fb442783          	lw	a5,-76(s0)
30001eb4:	fcf42c23          	sw	a5,-40(s0)
    int dst_size = res_size / kernel_size;
30001eb8:	fb842703          	lw	a4,-72(s0)
30001ebc:	fb442783          	lw	a5,-76(s0)
30001ec0:	02f747b3          	div	a5,a4,a5
30001ec4:	fcf42a23          	sw	a5,-44(s0)
    for(int ic=0;ic<in_channels;ic++){
30001ec8:	fe042623          	sw	zero,-20(s0)
30001ecc:	18c0006f          	j	30002058 <maxPool2d+0x1cc>
        for(int i=0;i<dst_size;i++){
30001ed0:	fe042423          	sw	zero,-24(s0)
30001ed4:	16c0006f          	j	30002040 <maxPool2d+0x1b4>
            for(int j=0;j<dst_size;j++){
30001ed8:	fe042223          	sw	zero,-28(s0)
30001edc:	14c0006f          	j	30002028 <maxPool2d+0x19c>
                for(int ii=0;ii<kernel_size;ii++){
30001ee0:	fe042023          	sw	zero,-32(s0)
30001ee4:	12c0006f          	j	30002010 <maxPool2d+0x184>
                    for(int jj=0;jj<kernel_size;jj++){
30001ee8:	fc042e23          	sw	zero,-36(s0)
30001eec:	10c0006f          	j	30001ff8 <maxPool2d+0x16c>
                        int dst_index = ic*dst_size*dst_size+i*dst_size+j;
30001ef0:	fec42703          	lw	a4,-20(s0)
30001ef4:	fd442783          	lw	a5,-44(s0)
30001ef8:	02f70733          	mul	a4,a4,a5
30001efc:	fd442783          	lw	a5,-44(s0)
30001f00:	02f70733          	mul	a4,a4,a5
30001f04:	fe842683          	lw	a3,-24(s0)
30001f08:	fd442783          	lw	a5,-44(s0)
30001f0c:	02f687b3          	mul	a5,a3,a5
30001f10:	00f707b3          	add	a5,a4,a5
30001f14:	fe442703          	lw	a4,-28(s0)
30001f18:	00f707b3          	add	a5,a4,a5
30001f1c:	fcf42823          	sw	a5,-48(s0)
                        int res_index = ic*res_size*res_size+(i*stripe+ii)*res_size+j*stripe+jj;
30001f20:	fec42703          	lw	a4,-20(s0)
30001f24:	fb842783          	lw	a5,-72(s0)
30001f28:	02f70733          	mul	a4,a4,a5
30001f2c:	fb842783          	lw	a5,-72(s0)
30001f30:	02f70733          	mul	a4,a4,a5
30001f34:	fe842683          	lw	a3,-24(s0)
30001f38:	fd842783          	lw	a5,-40(s0)
30001f3c:	02f686b3          	mul	a3,a3,a5
30001f40:	fe042783          	lw	a5,-32(s0)
30001f44:	00f686b3          	add	a3,a3,a5
30001f48:	fb842783          	lw	a5,-72(s0)
30001f4c:	02f687b3          	mul	a5,a3,a5
30001f50:	00f70733          	add	a4,a4,a5
30001f54:	fe442683          	lw	a3,-28(s0)
30001f58:	fd842783          	lw	a5,-40(s0)
30001f5c:	02f687b3          	mul	a5,a3,a5
30001f60:	00f707b3          	add	a5,a4,a5
30001f64:	fdc42703          	lw	a4,-36(s0)
30001f68:	00f707b3          	add	a5,a4,a5
30001f6c:	fcf42623          	sw	a5,-52(s0)
                        dst[dst_index] = dst[dst_index] > res[res_index] ? dst[dst_index] : res[res_index];
30001f70:	fd042783          	lw	a5,-48(s0)
30001f74:	00279793          	slli	a5,a5,0x2
30001f78:	fac42703          	lw	a4,-84(s0)
30001f7c:	00f707b3          	add	a5,a4,a5
30001f80:	0007a683          	lw	a3,0(a5)
30001f84:	fcc42783          	lw	a5,-52(s0)
30001f88:	00279793          	slli	a5,a5,0x2
30001f8c:	fb042703          	lw	a4,-80(s0)
30001f90:	00f707b3          	add	a5,a4,a5
30001f94:	0007a783          	lw	a5,0(a5)
30001f98:	00078593          	mv	a1,a5
30001f9c:	00068513          	mv	a0,a3
30001fa0:	061010ef          	jal	ra,30003800 <__gesf2>
30001fa4:	00050793          	mv	a5,a0
30001fa8:	00f05e63          	blez	a5,30001fc4 <maxPool2d+0x138>
30001fac:	fd042783          	lw	a5,-48(s0)
30001fb0:	00279793          	slli	a5,a5,0x2
30001fb4:	fac42703          	lw	a4,-84(s0)
30001fb8:	00f707b3          	add	a5,a4,a5
30001fbc:	0007a783          	lw	a5,0(a5)
30001fc0:	0180006f          	j	30001fd8 <maxPool2d+0x14c>
30001fc4:	fcc42783          	lw	a5,-52(s0)
30001fc8:	00279793          	slli	a5,a5,0x2
30001fcc:	fb042703          	lw	a4,-80(s0)
30001fd0:	00f707b3          	add	a5,a4,a5
30001fd4:	0007a783          	lw	a5,0(a5)
30001fd8:	fd042703          	lw	a4,-48(s0)
30001fdc:	00271713          	slli	a4,a4,0x2
30001fe0:	fac42683          	lw	a3,-84(s0)
30001fe4:	00e68733          	add	a4,a3,a4
30001fe8:	00f72023          	sw	a5,0(a4)
                    for(int jj=0;jj<kernel_size;jj++){
30001fec:	fdc42783          	lw	a5,-36(s0)
30001ff0:	00178793          	addi	a5,a5,1
30001ff4:	fcf42e23          	sw	a5,-36(s0)
30001ff8:	fdc42703          	lw	a4,-36(s0)
30001ffc:	fb442783          	lw	a5,-76(s0)
30002000:	eef748e3          	blt	a4,a5,30001ef0 <maxPool2d+0x64>
                for(int ii=0;ii<kernel_size;ii++){
30002004:	fe042783          	lw	a5,-32(s0)
30002008:	00178793          	addi	a5,a5,1
3000200c:	fef42023          	sw	a5,-32(s0)
30002010:	fe042703          	lw	a4,-32(s0)
30002014:	fb442783          	lw	a5,-76(s0)
30002018:	ecf748e3          	blt	a4,a5,30001ee8 <maxPool2d+0x5c>
            for(int j=0;j<dst_size;j++){
3000201c:	fe442783          	lw	a5,-28(s0)
30002020:	00178793          	addi	a5,a5,1
30002024:	fef42223          	sw	a5,-28(s0)
30002028:	fe442703          	lw	a4,-28(s0)
3000202c:	fd442783          	lw	a5,-44(s0)
30002030:	eaf748e3          	blt	a4,a5,30001ee0 <maxPool2d+0x54>
        for(int i=0;i<dst_size;i++){
30002034:	fe842783          	lw	a5,-24(s0)
30002038:	00178793          	addi	a5,a5,1
3000203c:	fef42423          	sw	a5,-24(s0)
30002040:	fe842703          	lw	a4,-24(s0)
30002044:	fd442783          	lw	a5,-44(s0)
30002048:	e8f748e3          	blt	a4,a5,30001ed8 <maxPool2d+0x4c>
    for(int ic=0;ic<in_channels;ic++){
3000204c:	fec42783          	lw	a5,-20(s0)
30002050:	00178793          	addi	a5,a5,1
30002054:	fef42623          	sw	a5,-20(s0)
30002058:	fec42703          	lw	a4,-20(s0)
3000205c:	fbc42783          	lw	a5,-68(s0)
30002060:	e6f748e3          	blt	a4,a5,30001ed0 <maxPool2d+0x44>
                }
            }
        }
    }

}
30002064:	00000013          	nop
30002068:	00000013          	nop
3000206c:	05c12083          	lw	ra,92(sp)
30002070:	05812403          	lw	s0,88(sp)
30002074:	06010113          	addi	sp,sp,96
30002078:	00008067          	ret

3000207c <relu>:


void relu(float * res,int in_channels,int res_size){
3000207c:	fd010113          	addi	sp,sp,-48
30002080:	02112623          	sw	ra,44(sp)
30002084:	02812423          	sw	s0,40(sp)
30002088:	03010413          	addi	s0,sp,48
3000208c:	fca42e23          	sw	a0,-36(s0)
30002090:	fcb42c23          	sw	a1,-40(s0)
30002094:	fcc42a23          	sw	a2,-44(s0)
    for(int i=0;i<in_channels*res_size*res_size;i++){
30002098:	fe042623          	sw	zero,-20(s0)
3000209c:	0680006f          	j	30002104 <relu+0x88>
        res[i] = res[i]>0?res[i]:0;
300020a0:	fec42783          	lw	a5,-20(s0)
300020a4:	00279793          	slli	a5,a5,0x2
300020a8:	fdc42703          	lw	a4,-36(s0)
300020ac:	00f707b3          	add	a5,a4,a5
300020b0:	0007a783          	lw	a5,0(a5)
300020b4:	00000593          	li	a1,0
300020b8:	00078513          	mv	a0,a5
300020bc:	744010ef          	jal	ra,30003800 <__gesf2>
300020c0:	00050793          	mv	a5,a0
300020c4:	00f05e63          	blez	a5,300020e0 <relu+0x64>
300020c8:	fec42783          	lw	a5,-20(s0)
300020cc:	00279793          	slli	a5,a5,0x2
300020d0:	fdc42703          	lw	a4,-36(s0)
300020d4:	00f707b3          	add	a5,a4,a5
300020d8:	0007a783          	lw	a5,0(a5)
300020dc:	0080006f          	j	300020e4 <relu+0x68>
300020e0:	00000793          	li	a5,0
300020e4:	fec42703          	lw	a4,-20(s0)
300020e8:	00271713          	slli	a4,a4,0x2
300020ec:	fdc42683          	lw	a3,-36(s0)
300020f0:	00e68733          	add	a4,a3,a4
300020f4:	00f72023          	sw	a5,0(a4)
    for(int i=0;i<in_channels*res_size*res_size;i++){
300020f8:	fec42783          	lw	a5,-20(s0)
300020fc:	00178793          	addi	a5,a5,1
30002100:	fef42623          	sw	a5,-20(s0)
30002104:	fd842703          	lw	a4,-40(s0)
30002108:	fd442783          	lw	a5,-44(s0)
3000210c:	02f70733          	mul	a4,a4,a5
30002110:	fd442783          	lw	a5,-44(s0)
30002114:	02f707b3          	mul	a5,a4,a5
30002118:	fec42703          	lw	a4,-20(s0)
3000211c:	f8f742e3          	blt	a4,a5,300020a0 <relu+0x24>
    }
}
30002120:	00000013          	nop
30002124:	00000013          	nop
30002128:	02c12083          	lw	ra,44(sp)
3000212c:	02812403          	lw	s0,40(sp)
30002130:	03010113          	addi	sp,sp,48
30002134:	00008067          	ret

30002138 <Linear>:

void Linear(int in_features,int out_features,float *res,float *dst,float * params){
30002138:	fc010113          	addi	sp,sp,-64
3000213c:	02112e23          	sw	ra,60(sp)
30002140:	02812c23          	sw	s0,56(sp)
30002144:	02912a23          	sw	s1,52(sp)
30002148:	03212823          	sw	s2,48(sp)
3000214c:	04010413          	addi	s0,sp,64
30002150:	fca42e23          	sw	a0,-36(s0)
30002154:	fcb42c23          	sw	a1,-40(s0)
30002158:	fcc42a23          	sw	a2,-44(s0)
3000215c:	fcd42823          	sw	a3,-48(s0)
30002160:	fce42623          	sw	a4,-52(s0)
    for(int i=0;i<out_features;i++){
30002164:	fe042623          	sw	zero,-20(s0)
30002168:	0b40006f          	j	3000221c <Linear+0xe4>
        for(int j=0;j<in_features;j++){
3000216c:	fe042423          	sw	zero,-24(s0)
30002170:	0940006f          	j	30002204 <Linear+0xcc>
            dst[i] += res[j]*params[i*in_features+j];
30002174:	fec42783          	lw	a5,-20(s0)
30002178:	00279793          	slli	a5,a5,0x2
3000217c:	fd042703          	lw	a4,-48(s0)
30002180:	00f707b3          	add	a5,a4,a5
30002184:	0007a903          	lw	s2,0(a5)
30002188:	fe842783          	lw	a5,-24(s0)
3000218c:	00279793          	slli	a5,a5,0x2
30002190:	fd442703          	lw	a4,-44(s0)
30002194:	00f707b3          	add	a5,a4,a5
30002198:	0007a683          	lw	a3,0(a5)
3000219c:	fec42703          	lw	a4,-20(s0)
300021a0:	fdc42783          	lw	a5,-36(s0)
300021a4:	02f70733          	mul	a4,a4,a5
300021a8:	fe842783          	lw	a5,-24(s0)
300021ac:	00f707b3          	add	a5,a4,a5
300021b0:	00279793          	slli	a5,a5,0x2
300021b4:	fcc42703          	lw	a4,-52(s0)
300021b8:	00f707b3          	add	a5,a4,a5
300021bc:	0007a783          	lw	a5,0(a5)
300021c0:	00078593          	mv	a1,a5
300021c4:	00068513          	mv	a0,a3
300021c8:	714010ef          	jal	ra,300038dc <__mulsf3>
300021cc:	00050793          	mv	a5,a0
300021d0:	00078693          	mv	a3,a5
300021d4:	fec42783          	lw	a5,-20(s0)
300021d8:	00279793          	slli	a5,a5,0x2
300021dc:	fd042703          	lw	a4,-48(s0)
300021e0:	00f704b3          	add	s1,a4,a5
300021e4:	00068593          	mv	a1,a3
300021e8:	00090513          	mv	a0,s2
300021ec:	675000ef          	jal	ra,30003060 <__addsf3>
300021f0:	00050793          	mv	a5,a0
300021f4:	00f4a023          	sw	a5,0(s1)
        for(int j=0;j<in_features;j++){
300021f8:	fe842783          	lw	a5,-24(s0)
300021fc:	00178793          	addi	a5,a5,1
30002200:	fef42423          	sw	a5,-24(s0)
30002204:	fe842703          	lw	a4,-24(s0)
30002208:	fdc42783          	lw	a5,-36(s0)
3000220c:	f6f744e3          	blt	a4,a5,30002174 <Linear+0x3c>
    for(int i=0;i<out_features;i++){
30002210:	fec42783          	lw	a5,-20(s0)
30002214:	00178793          	addi	a5,a5,1
30002218:	fef42623          	sw	a5,-20(s0)
3000221c:	fec42703          	lw	a4,-20(s0)
30002220:	fd842783          	lw	a5,-40(s0)
30002224:	f4f744e3          	blt	a4,a5,3000216c <Linear+0x34>
        }
    }
30002228:	00000013          	nop
3000222c:	00000013          	nop
30002230:	03c12083          	lw	ra,60(sp)
30002234:	03812403          	lw	s0,56(sp)
30002238:	03412483          	lw	s1,52(sp)
3000223c:	03012903          	lw	s2,48(sp)
30002240:	04010113          	addi	sp,sp,64
30002244:	00008067          	ret

30002248 <ReverseInt>:




int ReverseInt(int i)
{
30002248:	fd010113          	addi	sp,sp,-48
3000224c:	02812623          	sw	s0,44(sp)
30002250:	03010413          	addi	s0,sp,48
30002254:	fca42e23          	sw	a0,-36(s0)
	unsigned char ch1, ch2, ch3, ch4;
	ch1 = i & 255;
30002258:	fdc42783          	lw	a5,-36(s0)
3000225c:	fef407a3          	sb	a5,-17(s0)
	ch2 = (i >> 8) & 255;
30002260:	fdc42783          	lw	a5,-36(s0)
30002264:	4087d793          	srai	a5,a5,0x8
30002268:	fef40723          	sb	a5,-18(s0)
	ch3 = (i >> 16) & 255;
3000226c:	fdc42783          	lw	a5,-36(s0)
30002270:	4107d793          	srai	a5,a5,0x10
30002274:	fef406a3          	sb	a5,-19(s0)
	ch4 = (i >> 24) & 255;
30002278:	fdc42783          	lw	a5,-36(s0)
3000227c:	0187d793          	srli	a5,a5,0x18
30002280:	fef40623          	sb	a5,-20(s0)
	return((int)ch1 << 24) + ((int)ch2 << 16) + ((int)ch3 << 8) + ch4;
30002284:	fef44783          	lbu	a5,-17(s0)
30002288:	01879713          	slli	a4,a5,0x18
3000228c:	fee44783          	lbu	a5,-18(s0)
30002290:	01079793          	slli	a5,a5,0x10
30002294:	00f70733          	add	a4,a4,a5
30002298:	fed44783          	lbu	a5,-19(s0)
3000229c:	00879793          	slli	a5,a5,0x8
300022a0:	00f70733          	add	a4,a4,a5
300022a4:	fec44783          	lbu	a5,-20(s0)
300022a8:	00f707b3          	add	a5,a4,a5
}
300022ac:	00078513          	mv	a0,a5
300022b0:	02c12403          	lw	s0,44(sp)
300022b4:	03010113          	addi	sp,sp,48
300022b8:	00008067          	ret

300022bc <forward>:

void forward(char * weights,char * images){
300022bc:	f9010113          	addi	sp,sp,-112
300022c0:	06112623          	sw	ra,108(sp)
300022c4:	06812423          	sw	s0,104(sp)
300022c8:	07010413          	addi	s0,sp,112
300022cc:	f8a42e23          	sw	a0,-100(s0)
300022d0:	f8b42c23          	sw	a1,-104(s0)
    //读取图片文件头
    int magic_number = 0;
300022d4:	fa042e23          	sw	zero,-68(s0)
    int number_of_images = 0;
300022d8:	fa042c23          	sw	zero,-72(s0)
    int n_rows = 0;
300022dc:	fa042a23          	sw	zero,-76(s0)
    int n_cols = 0;
300022e0:	fa042823          	sw	zero,-80(s0)
    unsigned int images_data_index=0;
300022e4:	fa042623          	sw	zero,-84(s0)
    magic_number = *((int *)&images[images_data_index]);
300022e8:	f9842703          	lw	a4,-104(s0)
300022ec:	fac42783          	lw	a5,-84(s0)
300022f0:	00f707b3          	add	a5,a4,a5
300022f4:	0007a783          	lw	a5,0(a5)
300022f8:	faf42e23          	sw	a5,-68(s0)
    images_data_index+=4;
300022fc:	fac42783          	lw	a5,-84(s0)
30002300:	00478793          	addi	a5,a5,4
30002304:	faf42623          	sw	a5,-84(s0)
    number_of_images = *((int *)&images[images_data_index]);
30002308:	f9842703          	lw	a4,-104(s0)
3000230c:	fac42783          	lw	a5,-84(s0)
30002310:	00f707b3          	add	a5,a4,a5
30002314:	0007a783          	lw	a5,0(a5)
30002318:	faf42c23          	sw	a5,-72(s0)
    images_data_index+=4;
3000231c:	fac42783          	lw	a5,-84(s0)
30002320:	00478793          	addi	a5,a5,4
30002324:	faf42623          	sw	a5,-84(s0)
    n_rows = *((int *)&images[images_data_index]);
30002328:	f9842703          	lw	a4,-104(s0)
3000232c:	fac42783          	lw	a5,-84(s0)
30002330:	00f707b3          	add	a5,a4,a5
30002334:	0007a783          	lw	a5,0(a5)
30002338:	faf42a23          	sw	a5,-76(s0)
    images_data_index+=4;
3000233c:	fac42783          	lw	a5,-84(s0)
30002340:	00478793          	addi	a5,a5,4
30002344:	faf42623          	sw	a5,-84(s0)
    n_cols = *((int *)&images[images_data_index]);
30002348:	f9842703          	lw	a4,-104(s0)
3000234c:	fac42783          	lw	a5,-84(s0)
30002350:	00f707b3          	add	a5,a4,a5
30002354:	0007a783          	lw	a5,0(a5)
30002358:	faf42823          	sw	a5,-80(s0)
    images_data_index+=4;
3000235c:	fac42783          	lw	a5,-84(s0)
30002360:	00478793          	addi	a5,a5,4
30002364:	faf42623          	sw	a5,-84(s0)

    magic_number = ReverseInt(magic_number);
30002368:	fbc42503          	lw	a0,-68(s0)
3000236c:	eddff0ef          	jal	ra,30002248 <ReverseInt>
30002370:	faa42e23          	sw	a0,-68(s0)
    number_of_images = ReverseInt(number_of_images);
30002374:	fb842503          	lw	a0,-72(s0)
30002378:	ed1ff0ef          	jal	ra,30002248 <ReverseInt>
3000237c:	faa42c23          	sw	a0,-72(s0)
    n_rows = ReverseInt(n_rows);
30002380:	fb442503          	lw	a0,-76(s0)
30002384:	ec5ff0ef          	jal	ra,30002248 <ReverseInt>
30002388:	faa42a23          	sw	a0,-76(s0)
    n_cols = ReverseInt(n_cols);
3000238c:	fb042503          	lw	a0,-80(s0)
30002390:	eb9ff0ef          	jal	ra,30002248 <ReverseInt>
30002394:	faa42823          	sw	a0,-80(s0)
    printf("magic_number=%d,number of images=%d,image rows=%d,image cols=%d\n",magic_number,number_of_images,n_rows,n_cols);
30002398:	fb042703          	lw	a4,-80(s0)
3000239c:	fb442683          	lw	a3,-76(s0)
300023a0:	fb842603          	lw	a2,-72(s0)
300023a4:	fbc42583          	lw	a1,-68(s0)
300023a8:	300077b7          	lui	a5,0x30007
300023ac:	00878513          	addi	a0,a5,8 # 30007008 <_data+0x8>
300023b0:	eb0ff0ef          	jal	ra,30001a60 <printf>

    //读取权重文件头
    unsigned int conv_weight_size=0,fc_weight_size=0,weight_off;
300023b4:	fa042423          	sw	zero,-88(s0)
300023b8:	fa042223          	sw	zero,-92(s0)
    conv_weight_size = *((unsigned int *)weights);
300023bc:	f9c42783          	lw	a5,-100(s0)
300023c0:	0007a783          	lw	a5,0(a5)
300023c4:	faf42423          	sw	a5,-88(s0)
    fc_weight_size = *((unsigned int *)&weights[conv_weight_size+4]);
300023c8:	fa842783          	lw	a5,-88(s0)
300023cc:	00478793          	addi	a5,a5,4
300023d0:	f9c42703          	lw	a4,-100(s0)
300023d4:	00f707b3          	add	a5,a4,a5
300023d8:	0007a783          	lw	a5,0(a5)
300023dc:	faf42223          	sw	a5,-92(s0)
    printf("conv weight size = %u,fc_weight_size=%u\n",conv_weight_size,fc_weight_size);
300023e0:	fa442603          	lw	a2,-92(s0)
300023e4:	fa842583          	lw	a1,-88(s0)
300023e8:	300077b7          	lui	a5,0x30007
300023ec:	04c78513          	addi	a0,a5,76 # 3000704c <_data+0x4c>
300023f0:	e70ff0ef          	jal	ra,30001a60 <printf>

    weight_off=4;
300023f4:	00400793          	li	a5,4
300023f8:	fef42623          	sw	a5,-20(s0)
    for(int i=0;i<250;i++){
300023fc:	fe042423          	sw	zero,-24(s0)
30002400:	0640006f          	j	30002464 <forward+0x1a8>
        conv_weight[i] = *((int *)&weights[weight_off]) * 1.0;
30002404:	f9c42703          	lw	a4,-100(s0)
30002408:	fec42783          	lw	a5,-20(s0)
3000240c:	00f707b3          	add	a5,a4,a5
30002410:	0007a783          	lw	a5,0(a5)
30002414:	00078513          	mv	a0,a5
30002418:	3a1000ef          	jal	ra,30002fb8 <__floatsidf>
3000241c:	00050713          	mv	a4,a0
30002420:	00058793          	mv	a5,a1
30002424:	00070513          	mv	a0,a4
30002428:	00078593          	mv	a1,a5
3000242c:	219010ef          	jal	ra,30003e44 <__truncdfsf2>
30002430:	00050693          	mv	a3,a0
30002434:	300087b7          	lui	a5,0x30008
30002438:	79c78713          	addi	a4,a5,1948 # 3000879c <conv_weight>
3000243c:	fe842783          	lw	a5,-24(s0)
30002440:	00279793          	slli	a5,a5,0x2
30002444:	00f707b3          	add	a5,a4,a5
30002448:	00d7a023          	sw	a3,0(a5)
        weight_off+=4;
3000244c:	fec42783          	lw	a5,-20(s0)
30002450:	00478793          	addi	a5,a5,4
30002454:	fef42623          	sw	a5,-20(s0)
    for(int i=0;i<250;i++){
30002458:	fe842783          	lw	a5,-24(s0)
3000245c:	00178793          	addi	a5,a5,1
30002460:	fef42423          	sw	a5,-24(s0)
30002464:	fe842703          	lw	a4,-24(s0)
30002468:	0f900793          	li	a5,249
3000246c:	f8e7dce3          	bge	a5,a4,30002404 <forward+0x148>
    }
    weight_off+=4;
30002470:	fec42783          	lw	a5,-20(s0)
30002474:	00478793          	addi	a5,a5,4
30002478:	fef42623          	sw	a5,-20(s0)
    for(int i=0;i<400;i++){
3000247c:	fe042223          	sw	zero,-28(s0)
30002480:	0640006f          	j	300024e4 <forward+0x228>
        fc_weight[i] = *((int *)&weights[weight_off]) * 1.0;
30002484:	f9c42703          	lw	a4,-100(s0)
30002488:	fec42783          	lw	a5,-20(s0)
3000248c:	00f707b3          	add	a5,a4,a5
30002490:	0007a783          	lw	a5,0(a5)
30002494:	00078513          	mv	a0,a5
30002498:	321000ef          	jal	ra,30002fb8 <__floatsidf>
3000249c:	00050713          	mv	a4,a0
300024a0:	00058793          	mv	a5,a1
300024a4:	00070513          	mv	a0,a4
300024a8:	00078593          	mv	a1,a5
300024ac:	199010ef          	jal	ra,30003e44 <__truncdfsf2>
300024b0:	00050693          	mv	a3,a0
300024b4:	300097b7          	lui	a5,0x30009
300024b8:	b8478713          	addi	a4,a5,-1148 # 30008b84 <fc_weight>
300024bc:	fe442783          	lw	a5,-28(s0)
300024c0:	00279793          	slli	a5,a5,0x2
300024c4:	00f707b3          	add	a5,a4,a5
300024c8:	00d7a023          	sw	a3,0(a5)
        weight_off+=4;
300024cc:	fec42783          	lw	a5,-20(s0)
300024d0:	00478793          	addi	a5,a5,4
300024d4:	fef42623          	sw	a5,-20(s0)
    for(int i=0;i<400;i++){
300024d8:	fe442783          	lw	a5,-28(s0)
300024dc:	00178793          	addi	a5,a5,1
300024e0:	fef42223          	sw	a5,-28(s0)
300024e4:	fe442703          	lw	a4,-28(s0)
300024e8:	18f00793          	li	a5,399
300024ec:	f8e7dce3          	bge	a5,a4,30002484 <forward+0x1c8>
    }


    for(int i=0;i<number_of_images;i++){
300024f0:	fe042023          	sw	zero,-32(s0)
300024f4:	3b40006f          	j	300028a8 <forward+0x5ec>
        unsigned char *res = &images[images_data_index+i*28*28];
300024f8:	fe042703          	lw	a4,-32(s0)
300024fc:	31000793          	li	a5,784
30002500:	02f707b3          	mul	a5,a4,a5
30002504:	00078713          	mv	a4,a5
30002508:	fac42783          	lw	a5,-84(s0)
3000250c:	00f707b3          	add	a5,a4,a5
30002510:	f9842703          	lw	a4,-104(s0)
30002514:	00f707b3          	add	a5,a4,a5
30002518:	faf42023          	sw	a5,-96(s0)
        for(int i=0;i<n_cols*n_rows;i++){
3000251c:	fc042e23          	sw	zero,-36(s0)
30002520:	08c0006f          	j	300025ac <forward+0x2f0>
            if(i%n_cols==0){
30002524:	fdc42703          	lw	a4,-36(s0)
30002528:	fb042783          	lw	a5,-80(s0)
3000252c:	02f767b3          	rem	a5,a4,a5
30002530:	00079a63          	bnez	a5,30002544 <forward+0x288>
                printf("\n");
30002534:	00a00513          	li	a0,10
30002538:	42d010ef          	jal	ra,30004164 <putchar>
                delay(MAIN_D_TIME);
3000253c:	0c800513          	li	a0,200
30002540:	75c000ef          	jal	ra,30002c9c <delay>
            }
            if(res[i]){
30002544:	fdc42783          	lw	a5,-36(s0)
30002548:	fa042703          	lw	a4,-96(s0)
3000254c:	00f707b3          	add	a5,a4,a5
30002550:	0007c783          	lbu	a5,0(a5)
30002554:	00078863          	beqz	a5,30002564 <forward+0x2a8>
                printf(" ");
30002558:	02000513          	li	a0,32
3000255c:	409010ef          	jal	ra,30004164 <putchar>
30002560:	00c0006f          	j	3000256c <forward+0x2b0>
            }
            else{
                printf("*");
30002564:	02a00513          	li	a0,42
30002568:	3fd010ef          	jal	ra,30004164 <putchar>
            }
            conv_res[i] = (float)res[i];
3000256c:	fdc42783          	lw	a5,-36(s0)
30002570:	fa042703          	lw	a4,-96(s0)
30002574:	00f707b3          	add	a5,a4,a5
30002578:	0007c783          	lbu	a5,0(a5)
3000257c:	00078513          	mv	a0,a5
30002580:	700010ef          	jal	ra,30003c80 <__floatunsisf>
30002584:	00050693          	mv	a3,a0
30002588:	300087b7          	lui	a5,0x30008
3000258c:	b5c78713          	addi	a4,a5,-1188 # 30007b5c <conv_res>
30002590:	fdc42783          	lw	a5,-36(s0)
30002594:	00279793          	slli	a5,a5,0x2
30002598:	00f707b3          	add	a5,a4,a5
3000259c:	00d7a023          	sw	a3,0(a5)
        for(int i=0;i<n_cols*n_rows;i++){
300025a0:	fdc42783          	lw	a5,-36(s0)
300025a4:	00178793          	addi	a5,a5,1
300025a8:	fcf42e23          	sw	a5,-36(s0)
300025ac:	fb042703          	lw	a4,-80(s0)
300025b0:	fb442783          	lw	a5,-76(s0)
300025b4:	02f707b3          	mul	a5,a4,a5
300025b8:	fdc42703          	lw	a4,-36(s0)
300025bc:	f6f744e3          	blt	a4,a5,30002524 <forward+0x268>
        }
        printf("\n");
300025c0:	00a00513          	li	a0,10
300025c4:	3a1010ef          	jal	ra,30004164 <putchar>
        for(int j=0;j<10*24*24;j++){
300025c8:	fc042c23          	sw	zero,-40(s0)
300025cc:	02c0006f          	j	300025f8 <forward+0x33c>
            conv1_dst[j]=0;
300025d0:	300097b7          	lui	a5,0x30009
300025d4:	1c478713          	addi	a4,a5,452 # 300091c4 <conv1_dst>
300025d8:	fd842783          	lw	a5,-40(s0)
300025dc:	00279793          	slli	a5,a5,0x2
300025e0:	00f707b3          	add	a5,a4,a5
300025e4:	00000713          	li	a4,0
300025e8:	00e7a023          	sw	a4,0(a5)
        for(int j=0;j<10*24*24;j++){
300025ec:	fd842783          	lw	a5,-40(s0)
300025f0:	00178793          	addi	a5,a5,1
300025f4:	fcf42c23          	sw	a5,-40(s0)
300025f8:	fd842703          	lw	a4,-40(s0)
300025fc:	000017b7          	lui	a5,0x1
30002600:	67f78793          	addi	a5,a5,1663 # 167f <__stack_size+0x67f>
30002604:	fce7d6e3          	bge	a5,a4,300025d0 <forward+0x314>
        }
        conv2d(28,conv_res,conv1_dst,1,10,5,conv_weight);
30002608:	300087b7          	lui	a5,0x30008
3000260c:	79c78813          	addi	a6,a5,1948 # 3000879c <conv_weight>
30002610:	00500793          	li	a5,5
30002614:	00a00713          	li	a4,10
30002618:	00100693          	li	a3,1
3000261c:	30009637          	lui	a2,0x30009
30002620:	1c460613          	addi	a2,a2,452 # 300091c4 <conv1_dst>
30002624:	300085b7          	lui	a1,0x30008
30002628:	b5c58593          	addi	a1,a1,-1188 # 30007b5c <conv_res>
3000262c:	01c00513          	li	a0,28
30002630:	df4ff0ef          	jal	ra,30001c24 <conv2d>

        for(int j=0;j<40;j++){
30002634:	fc042a23          	sw	zero,-44(s0)
30002638:	02c0006f          	j	30002664 <forward+0x3a8>
            mp1_dst[j]=0;
3000263c:	3000f7b7          	lui	a5,0x3000f
30002640:	bc478713          	addi	a4,a5,-1084 # 3000ebc4 <mp1_dst>
30002644:	fd442783          	lw	a5,-44(s0)
30002648:	00279793          	slli	a5,a5,0x2
3000264c:	00f707b3          	add	a5,a4,a5
30002650:	00000713          	li	a4,0
30002654:	00e7a023          	sw	a4,0(a5)
        for(int j=0;j<40;j++){
30002658:	fd442783          	lw	a5,-44(s0)
3000265c:	00178793          	addi	a5,a5,1
30002660:	fcf42a23          	sw	a5,-44(s0)
30002664:	fd442703          	lw	a4,-44(s0)
30002668:	02700793          	li	a5,39
3000266c:	fce7d8e3          	bge	a5,a4,3000263c <forward+0x380>
        }
        maxPool2d(10,24,12,conv1_dst,(float *)mp1_dst);;
30002670:	3000f7b7          	lui	a5,0x3000f
30002674:	bc478713          	addi	a4,a5,-1084 # 3000ebc4 <mp1_dst>
30002678:	300097b7          	lui	a5,0x30009
3000267c:	1c478693          	addi	a3,a5,452 # 300091c4 <conv1_dst>
30002680:	00c00613          	li	a2,12
30002684:	01800593          	li	a1,24
30002688:	00a00513          	li	a0,10
3000268c:	801ff0ef          	jal	ra,30001e8c <maxPool2d>
        relu((float*)mp1_dst,10,2);
30002690:	00200613          	li	a2,2
30002694:	00a00593          	li	a1,10
30002698:	3000f7b7          	lui	a5,0x3000f
3000269c:	bc478513          	addi	a0,a5,-1084 # 3000ebc4 <mp1_dst>
300026a0:	9ddff0ef          	jal	ra,3000207c <relu>
        for(int i=0;i<10;i++){
300026a4:	fc042823          	sw	zero,-48(s0)
300026a8:	02c0006f          	j	300026d4 <forward+0x418>
            fc3_dst[i]=0;
300026ac:	3000f7b7          	lui	a5,0x3000f
300026b0:	c6478713          	addi	a4,a5,-924 # 3000ec64 <fc3_dst>
300026b4:	fd042783          	lw	a5,-48(s0)
300026b8:	00279793          	slli	a5,a5,0x2
300026bc:	00f707b3          	add	a5,a4,a5
300026c0:	00000713          	li	a4,0
300026c4:	00e7a023          	sw	a4,0(a5)
        for(int i=0;i<10;i++){
300026c8:	fd042783          	lw	a5,-48(s0)
300026cc:	00178793          	addi	a5,a5,1
300026d0:	fcf42823          	sw	a5,-48(s0)
300026d4:	fd042703          	lw	a4,-48(s0)
300026d8:	00900793          	li	a5,9
300026dc:	fce7d8e3          	bge	a5,a4,300026ac <forward+0x3f0>
        }
        Linear(40,10,mp1_dst,(float*)fc3_dst,fc_weight);
300026e0:	300097b7          	lui	a5,0x30009
300026e4:	b8478713          	addi	a4,a5,-1148 # 30008b84 <fc_weight>
300026e8:	3000f7b7          	lui	a5,0x3000f
300026ec:	c6478693          	addi	a3,a5,-924 # 3000ec64 <fc3_dst>
300026f0:	3000f7b7          	lui	a5,0x3000f
300026f4:	bc478613          	addi	a2,a5,-1084 # 3000ebc4 <mp1_dst>
300026f8:	00a00593          	li	a1,10
300026fc:	02800513          	li	a0,40
30002700:	a39ff0ef          	jal	ra,30002138 <Linear>
        float acc_sum=0;
30002704:	00000793          	li	a5,0
30002708:	fcf42623          	sw	a5,-52(s0)
        for(int i=0;i<10;i++){
3000270c:	fc042423          	sw	zero,-56(s0)
30002710:	0680006f          	j	30002778 <forward+0x4bc>
            if(fc3_dst[i]>0){
30002714:	3000f7b7          	lui	a5,0x3000f
30002718:	c6478713          	addi	a4,a5,-924 # 3000ec64 <fc3_dst>
3000271c:	fc842783          	lw	a5,-56(s0)
30002720:	00279793          	slli	a5,a5,0x2
30002724:	00f707b3          	add	a5,a4,a5
30002728:	0007a783          	lw	a5,0(a5)
3000272c:	00000593          	li	a1,0
30002730:	00078513          	mv	a0,a5
30002734:	0cc010ef          	jal	ra,30003800 <__gesf2>
30002738:	00050793          	mv	a5,a0
3000273c:	02f05863          	blez	a5,3000276c <forward+0x4b0>
                acc_sum+=fc3_dst[i];
30002740:	3000f7b7          	lui	a5,0x3000f
30002744:	c6478713          	addi	a4,a5,-924 # 3000ec64 <fc3_dst>
30002748:	fc842783          	lw	a5,-56(s0)
3000274c:	00279793          	slli	a5,a5,0x2
30002750:	00f707b3          	add	a5,a4,a5
30002754:	0007a783          	lw	a5,0(a5)
30002758:	00078593          	mv	a1,a5
3000275c:	fcc42503          	lw	a0,-52(s0)
30002760:	101000ef          	jal	ra,30003060 <__addsf3>
30002764:	00050793          	mv	a5,a0
30002768:	fcf42623          	sw	a5,-52(s0)
        for(int i=0;i<10;i++){
3000276c:	fc842783          	lw	a5,-56(s0)
30002770:	00178793          	addi	a5,a5,1
30002774:	fcf42423          	sw	a5,-56(s0)
30002778:	fc842703          	lw	a4,-56(s0)
3000277c:	00900793          	li	a5,9
30002780:	f8e7dae3          	bge	a5,a4,30002714 <forward+0x458>
            }
        }
        for(int i=0;i<10;i++){
30002784:	fc042223          	sw	zero,-60(s0)
30002788:	1080006f          	j	30002890 <forward+0x5d4>
            float p=0;
3000278c:	00000793          	li	a5,0
30002790:	fcf42023          	sw	a5,-64(s0)
            if(fc3_dst[i]>0)
30002794:	3000f7b7          	lui	a5,0x3000f
30002798:	c6478713          	addi	a4,a5,-924 # 3000ec64 <fc3_dst>
3000279c:	fc442783          	lw	a5,-60(s0)
300027a0:	00279793          	slli	a5,a5,0x2
300027a4:	00f707b3          	add	a5,a4,a5
300027a8:	0007a783          	lw	a5,0(a5)
300027ac:	00000593          	li	a1,0
300027b0:	00078513          	mv	a0,a5
300027b4:	04c010ef          	jal	ra,30003800 <__gesf2>
300027b8:	00050793          	mv	a5,a0
300027bc:	02f05863          	blez	a5,300027ec <forward+0x530>
                p = fc3_dst[i]/acc_sum;
300027c0:	3000f7b7          	lui	a5,0x3000f
300027c4:	c6478713          	addi	a4,a5,-924 # 3000ec64 <fc3_dst>
300027c8:	fc442783          	lw	a5,-60(s0)
300027cc:	00279793          	slli	a5,a5,0x2
300027d0:	00f707b3          	add	a5,a4,a5
300027d4:	0007a783          	lw	a5,0(a5)
300027d8:	fcc42583          	lw	a1,-52(s0)
300027dc:	00078513          	mv	a0,a5
300027e0:	4f1000ef          	jal	ra,300034d0 <__divsf3>
300027e4:	00050793          	mv	a5,a0
300027e8:	fcf42023          	sw	a5,-64(s0)
            printf("probability of number %d is %.2f%\n",i,p*100);
300027ec:	300077b7          	lui	a5,0x30007
300027f0:	0c07a583          	lw	a1,192(a5) # 300070c0 <_data+0xc0>
300027f4:	fc042503          	lw	a0,-64(s0)
300027f8:	0e4010ef          	jal	ra,300038dc <__mulsf3>
300027fc:	00050793          	mv	a5,a0
30002800:	00078513          	mv	a0,a5
30002804:	564010ef          	jal	ra,30003d68 <__extendsfdf2>
30002808:	00050713          	mv	a4,a0
3000280c:	00058793          	mv	a5,a1
30002810:	00070613          	mv	a2,a4
30002814:	00078693          	mv	a3,a5
30002818:	fc442583          	lw	a1,-60(s0)
3000281c:	300077b7          	lui	a5,0x30007
30002820:	07878513          	addi	a0,a5,120 # 30007078 <_data+0x78>
30002824:	a3cff0ef          	jal	ra,30001a60 <printf>
            printf("probability of number ");
30002828:	300077b7          	lui	a5,0x30007
3000282c:	09c78513          	addi	a0,a5,156 # 3000709c <_data+0x9c>
30002830:	a30ff0ef          	jal	ra,30001a60 <printf>
            uart_putc(i);
30002834:	fc442503          	lw	a0,-60(s0)
30002838:	b41fe0ef          	jal	ra,30001378 <uart_putc>
            printf(" is ");
3000283c:	300077b7          	lui	a5,0x30007
30002840:	0b478513          	addi	a0,a5,180 # 300070b4 <_data+0xb4>
30002844:	a1cff0ef          	jal	ra,30001a60 <printf>
            uart_putc((int)(p*100));
30002848:	300077b7          	lui	a5,0x30007
3000284c:	0c07a583          	lw	a1,192(a5) # 300070c0 <_data+0xc0>
30002850:	fc042503          	lw	a0,-64(s0)
30002854:	088010ef          	jal	ra,300038dc <__mulsf3>
30002858:	00050793          	mv	a5,a0
3000285c:	00078513          	mv	a0,a5
30002860:	3b0010ef          	jal	ra,30003c10 <__fixsfsi>
30002864:	00050793          	mv	a5,a0
30002868:	00078513          	mv	a0,a5
3000286c:	b0dfe0ef          	jal	ra,30001378 <uart_putc>
            printf("%%\n");
30002870:	300077b7          	lui	a5,0x30007
30002874:	0bc78513          	addi	a0,a5,188 # 300070bc <_data+0xbc>
30002878:	9e8ff0ef          	jal	ra,30001a60 <printf>
            delay(MAIN_D_TIME);
3000287c:	0c800513          	li	a0,200
30002880:	41c000ef          	jal	ra,30002c9c <delay>
        for(int i=0;i<10;i++){
30002884:	fc442783          	lw	a5,-60(s0)
30002888:	00178793          	addi	a5,a5,1
3000288c:	fcf42223          	sw	a5,-60(s0)
30002890:	fc442703          	lw	a4,-60(s0)
30002894:	00900793          	li	a5,9
30002898:	eee7dae3          	bge	a5,a4,3000278c <forward+0x4d0>
    for(int i=0;i<number_of_images;i++){
3000289c:	fe042783          	lw	a5,-32(s0)
300028a0:	00178793          	addi	a5,a5,1
300028a4:	fef42023          	sw	a5,-32(s0)
300028a8:	fe042703          	lw	a4,-32(s0)
300028ac:	fb842783          	lw	a5,-72(s0)
300028b0:	c4f744e3          	blt	a4,a5,300024f8 <forward+0x23c>
        }
    }
300028b4:	00000013          	nop
300028b8:	00000013          	nop
300028bc:	06c12083          	lw	ra,108(sp)
300028c0:	06812403          	lw	s0,104(sp)
300028c4:	07010113          	addi	sp,sp,112
300028c8:	00008067          	ret

300028cc <w_mscratch>:
	return x;
}

/* Machine Scratch register, for early trap handler */
static inline void w_mscratch(reg_t x)
{
300028cc:	fe010113          	addi	sp,sp,-32
300028d0:	00812e23          	sw	s0,28(sp)
300028d4:	02010413          	addi	s0,sp,32
300028d8:	fea42623          	sw	a0,-20(s0)
	asm volatile("csrw mscratch, %0" : : "r" (x));
300028dc:	fec42783          	lw	a5,-20(s0)
300028e0:	34079073          	csrw	mscratch,a5
}
300028e4:	00000013          	nop
300028e8:	01c12403          	lw	s0,28(sp)
300028ec:	02010113          	addi	sp,sp,32
300028f0:	00008067          	ret

300028f4 <r_mscratch>:

static inline reg_t r_mscratch()
{
300028f4:	fe010113          	addi	sp,sp,-32
300028f8:	00812e23          	sw	s0,28(sp)
300028fc:	02010413          	addi	s0,sp,32
	reg_t x;
	asm volatile("csrr %0, mscratch" : "=r" (x) );
30002900:	340027f3          	csrr	a5,mscratch
30002904:	fef42623          	sw	a5,-20(s0)
	return x;
30002908:	fec42783          	lw	a5,-20(s0)
}
3000290c:	00078513          	mv	a0,a5
30002910:	01c12403          	lw	s0,28(sp)
30002914:	02010113          	addi	sp,sp,32
30002918:	00008067          	ret

3000291c <thread_init>:

struct TCB * head, *tail;
struct TCB _head,_tail;


void thread_init(){
3000291c:	ff010113          	addi	sp,sp,-16
30002920:	00112623          	sw	ra,12(sp)
30002924:	00812423          	sw	s0,8(sp)
30002928:	01010413          	addi	s0,sp,16
    thread_tcb[cur_thread_num].sp=(reg_t)&thread_stack[cur_thread_num][stack_size-1];
3000292c:	8141a783          	lw	a5,-2028(gp) # 30007b3c <cur_thread_num>
30002930:	00b79793          	slli	a5,a5,0xb
30002934:	7ff78713          	addi	a4,a5,2047
30002938:	300107b7          	lui	a5,0x30010
3000293c:	f0c78793          	addi	a5,a5,-244 # 3000ff0c <thread_stack>
30002940:	00f70733          	add	a4,a4,a5
30002944:	8141a683          	lw	a3,-2028(gp) # 30007b3c <cur_thread_num>
30002948:	00070613          	mv	a2,a4
3000294c:	3000f7b7          	lui	a5,0x3000f
30002950:	c8c78713          	addi	a4,a5,-884 # 3000ec8c <thread_tcb>
30002954:	12800793          	li	a5,296
30002958:	02f687b3          	mul	a5,a3,a5
3000295c:	00f707b3          	add	a5,a4,a5
30002960:	00c7a223          	sw	a2,4(a5)
    w_mscratch((reg_t)&thread_tcb[cur_thread_num]);
30002964:	8141a703          	lw	a4,-2028(gp) # 30007b3c <cur_thread_num>
30002968:	12800793          	li	a5,296
3000296c:	02f70733          	mul	a4,a4,a5
30002970:	3000f7b7          	lui	a5,0x3000f
30002974:	c8c78793          	addi	a5,a5,-884 # 3000ec8c <thread_tcb>
30002978:	00f707b3          	add	a5,a4,a5
3000297c:	00078513          	mv	a0,a5
30002980:	f4dff0ef          	jal	ra,300028cc <w_mscratch>
    thread_tcb[cur_thread_num].thread_id = cur_thread_num;
30002984:	8141a603          	lw	a2,-2028(gp) # 30007b3c <cur_thread_num>
30002988:	8141a703          	lw	a4,-2028(gp) # 30007b3c <cur_thread_num>
3000298c:	3000f7b7          	lui	a5,0x3000f
30002990:	c8c78693          	addi	a3,a5,-884 # 3000ec8c <thread_tcb>
30002994:	12800793          	li	a5,296
30002998:	02f607b3          	mul	a5,a2,a5
3000299c:	00f687b3          	add	a5,a3,a5
300029a0:	12e7a023          	sw	a4,288(a5)
    thread_tcb[cur_thread_num].count=1;
300029a4:	8141a683          	lw	a3,-2028(gp) # 30007b3c <cur_thread_num>
300029a8:	3000f7b7          	lui	a5,0x3000f
300029ac:	c8c78713          	addi	a4,a5,-884 # 3000ec8c <thread_tcb>
300029b0:	12800793          	li	a5,296
300029b4:	02f687b3          	mul	a5,a3,a5
300029b8:	00f707b3          	add	a5,a4,a5
300029bc:	00100713          	li	a4,1
300029c0:	12e7a223          	sw	a4,292(a5)
        #ifdef QEMU
            uart_puts("main tcb's addr is ");
            uart_put_reg((reg_t)&thread_tcb[cur_thread_num]);
        #endif
    #endif
    cur_thread_num++;
300029c4:	8141a783          	lw	a5,-2028(gp) # 30007b3c <cur_thread_num>
300029c8:	00178713          	addi	a4,a5,1
300029cc:	80e1aa23          	sw	a4,-2028(gp) # 30007b3c <cur_thread_num>
    head = &_head;
300029d0:	30018737          	lui	a4,0x30018
300029d4:	f0c70713          	addi	a4,a4,-244 # 30017f0c <_head>
300029d8:	80e1ac23          	sw	a4,-2024(gp) # 30007b40 <head>
    tail = &_tail;
300029dc:	30018737          	lui	a4,0x30018
300029e0:	03470713          	addi	a4,a4,52 # 30018034 <_tail>
300029e4:	80e1ae23          	sw	a4,-2020(gp) # 30007b44 <tail>
    head->next = tail;
300029e8:	8181a783          	lw	a5,-2024(gp) # 30007b40 <head>
300029ec:	81c1a703          	lw	a4,-2020(gp) # 30007b44 <tail>
300029f0:	10e7ae23          	sw	a4,284(a5)
    tail->pre = head;
300029f4:	81c1a783          	lw	a5,-2020(gp) # 30007b44 <tail>
300029f8:	8181a703          	lw	a4,-2024(gp) # 30007b40 <head>
300029fc:	10e7ac23          	sw	a4,280(a5)
    
    return;
30002a00:	00000013          	nop
}
30002a04:	00c12083          	lw	ra,12(sp)
30002a08:	00812403          	lw	s0,8(sp)
30002a0c:	01010113          	addi	sp,sp,16
30002a10:	00008067          	ret

30002a14 <queue_push>:

void queue_push(struct TCB * head,struct TCB * p){
30002a14:	fe010113          	addi	sp,sp,-32
30002a18:	00812e23          	sw	s0,28(sp)
30002a1c:	02010413          	addi	s0,sp,32
30002a20:	fea42623          	sw	a0,-20(s0)
30002a24:	feb42423          	sw	a1,-24(s0)
    p->next = head->next;
30002a28:	fec42783          	lw	a5,-20(s0)
30002a2c:	11c7a703          	lw	a4,284(a5)
30002a30:	fe842783          	lw	a5,-24(s0)
30002a34:	10e7ae23          	sw	a4,284(a5)
    head->next->pre = p;
30002a38:	fec42783          	lw	a5,-20(s0)
30002a3c:	11c7a783          	lw	a5,284(a5)
30002a40:	fe842703          	lw	a4,-24(s0)
30002a44:	10e7ac23          	sw	a4,280(a5)
    head->next = p;
30002a48:	fec42783          	lw	a5,-20(s0)
30002a4c:	fe842703          	lw	a4,-24(s0)
30002a50:	10e7ae23          	sw	a4,284(a5)
    p->pre = head;
30002a54:	fe842783          	lw	a5,-24(s0)
30002a58:	fec42703          	lw	a4,-20(s0)
30002a5c:	10e7ac23          	sw	a4,280(a5)
    return;
30002a60:	00000013          	nop
}
30002a64:	01c12403          	lw	s0,28(sp)
30002a68:	02010113          	addi	sp,sp,32
30002a6c:	00008067          	ret

30002a70 <thread_create>:


int thread_create(void (*func)(void)){
30002a70:	fe010113          	addi	sp,sp,-32
30002a74:	00112e23          	sw	ra,28(sp)
30002a78:	00812c23          	sw	s0,24(sp)
30002a7c:	02010413          	addi	s0,sp,32
30002a80:	fea42623          	sw	a0,-20(s0)
    thread_tcb[cur_thread_num].sp=(reg_t)&thread_stack[cur_thread_num][stack_size-1];
30002a84:	8141a783          	lw	a5,-2028(gp) # 30007b3c <cur_thread_num>
30002a88:	00b79793          	slli	a5,a5,0xb
30002a8c:	7ff78713          	addi	a4,a5,2047
30002a90:	300107b7          	lui	a5,0x30010
30002a94:	f0c78793          	addi	a5,a5,-244 # 3000ff0c <thread_stack>
30002a98:	00f70733          	add	a4,a4,a5
30002a9c:	8141a683          	lw	a3,-2028(gp) # 30007b3c <cur_thread_num>
30002aa0:	00070613          	mv	a2,a4
30002aa4:	3000f7b7          	lui	a5,0x3000f
30002aa8:	c8c78713          	addi	a4,a5,-884 # 3000ec8c <thread_tcb>
30002aac:	12800793          	li	a5,296
30002ab0:	02f687b3          	mul	a5,a3,a5
30002ab4:	00f707b3          	add	a5,a4,a5
30002ab8:	00c7a223          	sw	a2,4(a5)
    thread_tcb[cur_thread_num].ra=(reg_t)func;
30002abc:	8141a603          	lw	a2,-2028(gp) # 30007b3c <cur_thread_num>
30002ac0:	fec42703          	lw	a4,-20(s0)
30002ac4:	3000f7b7          	lui	a5,0x3000f
30002ac8:	c8c78693          	addi	a3,a5,-884 # 3000ec8c <thread_tcb>
30002acc:	12800793          	li	a5,296
30002ad0:	02f607b3          	mul	a5,a2,a5
30002ad4:	00f687b3          	add	a5,a3,a5
30002ad8:	00e7a023          	sw	a4,0(a5)
    thread_tcb[cur_thread_num].mstatus=(reg_t)0x00000008;
30002adc:	8141a683          	lw	a3,-2028(gp) # 30007b3c <cur_thread_num>
30002ae0:	3000f7b7          	lui	a5,0x3000f
30002ae4:	c8c78713          	addi	a4,a5,-884 # 3000ec8c <thread_tcb>
30002ae8:	12800793          	li	a5,296
30002aec:	02f687b3          	mul	a5,a3,a5
30002af0:	00f707b3          	add	a5,a4,a5
30002af4:	00800713          	li	a4,8
30002af8:	06e7a623          	sw	a4,108(a5)
    thread_tcb[cur_thread_num].mtvec = (reg_t)int_vector;
30002afc:	8141a603          	lw	a2,-2028(gp) # 30007b3c <cur_thread_num>
30002b00:	300017b7          	lui	a5,0x30001
30002b04:	22078713          	addi	a4,a5,544 # 30001220 <int_vector>
30002b08:	3000f7b7          	lui	a5,0x3000f
30002b0c:	c8c78693          	addi	a3,a5,-884 # 3000ec8c <thread_tcb>
30002b10:	12800793          	li	a5,296
30002b14:	02f607b3          	mul	a5,a2,a5
30002b18:	00f687b3          	add	a5,a3,a5
30002b1c:	06e7a823          	sw	a4,112(a5)
    thread_tcb[cur_thread_num].thread_id = cur_thread_num;
30002b20:	8141a603          	lw	a2,-2028(gp) # 30007b3c <cur_thread_num>
30002b24:	8141a703          	lw	a4,-2028(gp) # 30007b3c <cur_thread_num>
30002b28:	3000f7b7          	lui	a5,0x3000f
30002b2c:	c8c78693          	addi	a3,a5,-884 # 3000ec8c <thread_tcb>
30002b30:	12800793          	li	a5,296
30002b34:	02f607b3          	mul	a5,a2,a5
30002b38:	00f687b3          	add	a5,a3,a5
30002b3c:	12e7a023          	sw	a4,288(a5)
    thread_tcb[cur_thread_num].count = 0;
30002b40:	8141a683          	lw	a3,-2028(gp) # 30007b3c <cur_thread_num>
30002b44:	3000f7b7          	lui	a5,0x3000f
30002b48:	c8c78713          	addi	a4,a5,-884 # 3000ec8c <thread_tcb>
30002b4c:	12800793          	li	a5,296
30002b50:	02f687b3          	mul	a5,a3,a5
30002b54:	00f707b3          	add	a5,a4,a5
30002b58:	1207a223          	sw	zero,292(a5)
            uart_puts("created tcb's addr is ");
            uart_put_reg((reg_t)&thread_tcb[cur_thread_num]);
        #endif
        printf("created func's addr is 0x%x\n",func);
    #endif
    queue_push(head,&thread_tcb[cur_thread_num]);
30002b5c:	8181a683          	lw	a3,-2024(gp) # 30007b40 <head>
30002b60:	8141a703          	lw	a4,-2028(gp) # 30007b3c <cur_thread_num>
30002b64:	12800793          	li	a5,296
30002b68:	02f70733          	mul	a4,a4,a5
30002b6c:	3000f7b7          	lui	a5,0x3000f
30002b70:	c8c78793          	addi	a5,a5,-884 # 3000ec8c <thread_tcb>
30002b74:	00f707b3          	add	a5,a4,a5
30002b78:	00078593          	mv	a1,a5
30002b7c:	00068513          	mv	a0,a3
30002b80:	e95ff0ef          	jal	ra,30002a14 <queue_push>
    cur_thread_num++;
30002b84:	8141a783          	lw	a5,-2028(gp) # 30007b3c <cur_thread_num>
30002b88:	00178713          	addi	a4,a5,1
30002b8c:	80e1aa23          	sw	a4,-2028(gp) # 30007b3c <cur_thread_num>
    return 0;
30002b90:	00000793          	li	a5,0
}
30002b94:	00078513          	mv	a0,a5
30002b98:	01c12083          	lw	ra,28(sp)
30002b9c:	01812403          	lw	s0,24(sp)
30002ba0:	02010113          	addi	sp,sp,32
30002ba4:	00008067          	ret

30002ba8 <sche_thread>:

TCB_addr用于进行抢占式线程调用
-1：不进行抢占
>=0: 作为TCB地址，并抢占
*/
void sche_thread(int status, int TCB_addr){
30002ba8:	fd010113          	addi	sp,sp,-48
30002bac:	02112623          	sw	ra,44(sp)
30002bb0:	02812423          	sw	s0,40(sp)
30002bb4:	03010413          	addi	s0,sp,48
30002bb8:	fca42e23          	sw	a0,-36(s0)
30002bbc:	fcb42c23          	sw	a1,-40(s0)
    printf("------------------------------------\n ");
30002bc0:	300077b7          	lui	a5,0x30007
30002bc4:	0c478513          	addi	a0,a5,196 # 300070c4 <_data+0xc4>
30002bc8:	e99fe0ef          	jal	ra,30001a60 <printf>
    struct TCB * next_TCB = TCB_addr;
30002bcc:	fd842783          	lw	a5,-40(s0)
30002bd0:	fef42623          	sw	a5,-20(s0)
    #ifdef DEBUG
        printf("sche_thread!!\n ");
    #endif
    struct TCB * cur_TCB = r_mscratch();
30002bd4:	d21ff0ef          	jal	ra,300028f4 <r_mscratch>
30002bd8:	00050793          	mv	a5,a0
30002bdc:	fef42423          	sw	a5,-24(s0)
    switch (status)
30002be0:	fdc42783          	lw	a5,-36(s0)
30002be4:	00079c63          	bnez	a5,30002bfc <sche_thread+0x54>
    {
        case 0:
            queue_push(head,cur_TCB);
30002be8:	8181a783          	lw	a5,-2024(gp) # 30007b40 <head>
30002bec:	fe842583          	lw	a1,-24(s0)
30002bf0:	00078513          	mv	a0,a5
30002bf4:	e21ff0ef          	jal	ra,30002a14 <queue_push>
            break;
30002bf8:	0080006f          	j	30002c00 <sche_thread+0x58>
        default:
            break;
30002bfc:	00000013          	nop
    }
    if(TCB_addr == -1){
30002c00:	fd842703          	lw	a4,-40(s0)
30002c04:	fff00793          	li	a5,-1
30002c08:	02f71e63          	bne	a4,a5,30002c44 <sche_thread+0x9c>
        next_TCB = tail->pre;
30002c0c:	81c1a783          	lw	a5,-2020(gp) # 30007b44 <tail>
30002c10:	1187a783          	lw	a5,280(a5)
30002c14:	fef42623          	sw	a5,-20(s0)
        tail->pre->pre->next = tail;
30002c18:	81c1a783          	lw	a5,-2020(gp) # 30007b44 <tail>
30002c1c:	1187a783          	lw	a5,280(a5)
30002c20:	1187a783          	lw	a5,280(a5)
30002c24:	81c1a703          	lw	a4,-2020(gp) # 30007b44 <tail>
30002c28:	10e7ae23          	sw	a4,284(a5)
        tail->pre = tail->pre->pre;
30002c2c:	81c1a783          	lw	a5,-2020(gp) # 30007b44 <tail>
30002c30:	1187a703          	lw	a4,280(a5)
30002c34:	81c1a783          	lw	a5,-2020(gp) # 30007b44 <tail>
30002c38:	11872703          	lw	a4,280(a4)
30002c3c:	10e7ac23          	sw	a4,280(a5)
30002c40:	02c0006f          	j	30002c6c <sche_thread+0xc4>
    }
    else{
        next_TCB->pre->next = next_TCB->next;
30002c44:	fec42783          	lw	a5,-20(s0)
30002c48:	1187a783          	lw	a5,280(a5)
30002c4c:	fec42703          	lw	a4,-20(s0)
30002c50:	11c72703          	lw	a4,284(a4)
30002c54:	10e7ae23          	sw	a4,284(a5)
        next_TCB->next->pre = next_TCB->pre;
30002c58:	fec42783          	lw	a5,-20(s0)
30002c5c:	11c7a783          	lw	a5,284(a5)
30002c60:	fec42703          	lw	a4,-20(s0)
30002c64:	11872703          	lw	a4,280(a4)
30002c68:	10e7ac23          	sw	a4,280(a5)
    }

    #ifdef DEBUG
        printf("value of mie in last TCB is: %u\n ",r_mie());
    #endif
    next_TCB->count++;
30002c6c:	fec42783          	lw	a5,-20(s0)
30002c70:	1247a783          	lw	a5,292(a5)
30002c74:	00178713          	addi	a4,a5,1
30002c78:	fec42783          	lw	a5,-20(s0)
30002c7c:	12e7a223          	sw	a4,292(a5)

    switch_to(next_TCB);
30002c80:	fec42503          	lw	a0,-20(s0)
30002c84:	c5cfe0ef          	jal	ra,300010e0 <switch_to>
    #ifdef DEBUG
        printf("value of mtvec in the end of sche_thread is: 0x%x\n ",(reg_t)r_mtvec);
    #endif
    return;
30002c88:	00000013          	nop
}
30002c8c:	02c12083          	lw	ra,44(sp)
30002c90:	02812403          	lw	s0,40(sp)
30002c94:	03010113          	addi	sp,sp,48
30002c98:	00008067          	ret

30002c9c <delay>:

int delay(int times){
30002c9c:	fd010113          	addi	sp,sp,-48
30002ca0:	02812623          	sw	s0,44(sp)
30002ca4:	03010413          	addi	s0,sp,48
30002ca8:	fca42e23          	sw	a0,-36(s0)
    int weight=100000;
30002cac:	000187b7          	lui	a5,0x18
30002cb0:	6a078793          	addi	a5,a5,1696 # 186a0 <__stack_size+0x176a0>
30002cb4:	fef42623          	sw	a5,-20(s0)
    #ifdef FPGA
        weight = 5000;
30002cb8:	000017b7          	lui	a5,0x1
30002cbc:	38878793          	addi	a5,a5,904 # 1388 <__stack_size+0x388>
30002cc0:	fef42623          	sw	a5,-20(s0)
    #endif
    times *= weight;
30002cc4:	fdc42703          	lw	a4,-36(s0)
30002cc8:	fec42783          	lw	a5,-20(s0)
30002ccc:	02f707b3          	mul	a5,a4,a5
30002cd0:	fcf42e23          	sw	a5,-36(s0)
    while(times--){
30002cd4:	00000013          	nop
30002cd8:	fdc42783          	lw	a5,-36(s0)
30002cdc:	fff78713          	addi	a4,a5,-1
30002ce0:	fce42e23          	sw	a4,-36(s0)
30002ce4:	fe079ae3          	bnez	a5,30002cd8 <delay+0x3c>

    }
    return 0;
30002ce8:	00000793          	li	a5,0
30002cec:	00078513          	mv	a0,a5
30002cf0:	02c12403          	lw	s0,44(sp)
30002cf4:	03010113          	addi	sp,sp,48
30002cf8:	00008067          	ret

30002cfc <w_mstatus>:
{
30002cfc:	fe010113          	addi	sp,sp,-32
30002d00:	00812e23          	sw	s0,28(sp)
30002d04:	02010413          	addi	s0,sp,32
30002d08:	fea42623          	sw	a0,-20(s0)
	asm volatile("csrw mstatus, %0" : : "r" (x));
30002d0c:	fec42783          	lw	a5,-20(s0)
30002d10:	30079073          	csrw	mstatus,a5
}
30002d14:	00000013          	nop
30002d18:	01c12403          	lw	s0,28(sp)
30002d1c:	02010113          	addi	sp,sp,32
30002d20:	00008067          	ret

30002d24 <w_mtvec>:

/* Machine-mode interrupt vector */
static inline void w_mtvec(reg_t x)
{
30002d24:	fe010113          	addi	sp,sp,-32
30002d28:	00812e23          	sw	s0,28(sp)
30002d2c:	02010413          	addi	s0,sp,32
30002d30:	fea42623          	sw	a0,-20(s0)
	asm volatile("csrw mtvec, %0" : : "r" (x));
30002d34:	fec42783          	lw	a5,-20(s0)
30002d38:	30579073          	csrw	mtvec,a5
}
30002d3c:	00000013          	nop
30002d40:	01c12403          	lw	s0,28(sp)
30002d44:	02010113          	addi	sp,sp,32
30002d48:	00008067          	ret

30002d4c <int_init>:

void int_test_8();
void int_test_12();
void int_test_15();

void int_init(){
30002d4c:	ff010113          	addi	sp,sp,-16
30002d50:	00112623          	sw	ra,12(sp)
30002d54:	00812423          	sw	s0,8(sp)
30002d58:	01010413          	addi	s0,sp,16

	//开中断
	w_mstatus(8);
30002d5c:	00800513          	li	a0,8
30002d60:	f9dff0ef          	jal	ra,30002cfc <w_mstatus>
#ifdef DEBUG
	printf("value of int_vector in int_init is: 0x%x\n ",(void*) int_vector);
	printf("int_init\n ");
#endif
    w_mtvec((reg_t)int_vector);
30002d64:	300017b7          	lui	a5,0x30001
30002d68:	22078793          	addi	a5,a5,544 # 30001220 <int_vector>
30002d6c:	00078513          	mv	a0,a5
30002d70:	fb5ff0ef          	jal	ra,30002d24 <w_mtvec>
}
30002d74:	00000013          	nop
30002d78:	00c12083          	lw	ra,12(sp)
30002d7c:	00812403          	lw	s0,8(sp)
30002d80:	01010113          	addi	sp,sp,16
30002d84:	00008067          	ret

30002d88 <external_int>:

void external_int(){
30002d88:	ff010113          	addi	sp,sp,-16
30002d8c:	00812623          	sw	s0,12(sp)
30002d90:	01010413          	addi	s0,sp,16
	}
	else if(status==3){
		int_test_8();
	}
#endif
	return;
30002d94:	00000013          	nop
}
30002d98:	00c12403          	lw	s0,12(sp)
30002d9c:	01010113          	addi	sp,sp,16
30002da0:	00008067          	ret

30002da4 <int_handler>:


reg_t int_handler(reg_t pc,reg_t cause){
30002da4:	fd010113          	addi	sp,sp,-48
30002da8:	02112623          	sw	ra,44(sp)
30002dac:	02812423          	sw	s0,40(sp)
30002db0:	03010413          	addi	s0,sp,48
30002db4:	fca42e23          	sw	a0,-36(s0)
30002db8:	fcb42c23          	sw	a1,-40(s0)
    reg_t return_pc = pc;
30002dbc:	fdc42783          	lw	a5,-36(s0)
30002dc0:	fef42623          	sw	a5,-20(s0)
	reg_t cause_code = cause & 0xfff;
30002dc4:	fd842703          	lw	a4,-40(s0)
30002dc8:	000017b7          	lui	a5,0x1
30002dcc:	fff78793          	addi	a5,a5,-1 # fff <__stack_size-0x1>
30002dd0:	00f777b3          	and	a5,a4,a5
30002dd4:	fef42423          	sw	a5,-24(s0)

    //if interupt not exception
	if (cause & 0x80000000)
30002dd8:	fd842783          	lw	a5,-40(s0)
30002ddc:	0607da63          	bgez	a5,30002e50 <int_handler+0xac>
	{
		/* Asynchronous trap - interrupt */
		switch (cause_code)
30002de0:	fe842783          	lw	a5,-24(s0)
30002de4:	ffd78793          	addi	a5,a5,-3
30002de8:	00c00713          	li	a4,12
30002dec:	04f76a63          	bltu	a4,a5,30002e40 <int_handler+0x9c>
30002df0:	00279713          	slli	a4,a5,0x2
30002df4:	300077b7          	lui	a5,0x30007
30002df8:	13478793          	addi	a5,a5,308 # 30007134 <_data+0x134>
30002dfc:	00f707b3          	add	a5,a4,a5
30002e00:	0007a783          	lw	a5,0(a5)
30002e04:	00078067          	jr	a5
		{
		case 3:
			printf("software interruption!\n ");
30002e08:	300077b7          	lui	a5,0x30007
30002e0c:	0ec78513          	addi	a0,a5,236 # 300070ec <_data+0xec>
30002e10:	c51fe0ef          	jal	ra,30001a60 <printf>
			break;
30002e14:	04c0006f          	j	30002e60 <int_handler+0xbc>
		#ifdef FPGA
		case 4:
			timer_handler();
30002e18:	dd9fe0ef          	jal	ra,30001bf0 <timer_handler>
			break;
30002e1c:	0440006f          	j	30002e60 <int_handler+0xbc>
		case 7:
			timer_handler();
			break;
		#endif
		case 8:
			int_test_8();
30002e20:	058000ef          	jal	ra,30002e78 <int_test_8>
			break;
30002e24:	03c0006f          	j	30002e60 <int_handler+0xbc>
		case 11:
			external_int();
30002e28:	f61ff0ef          	jal	ra,30002d88 <external_int>
			break;
30002e2c:	0340006f          	j	30002e60 <int_handler+0xbc>
		case 12:
			int_test_12();
30002e30:	084000ef          	jal	ra,30002eb4 <int_test_12>
			break;
30002e34:	02c0006f          	j	30002e60 <int_handler+0xbc>
		case 15:
			int_test_15();
30002e38:	0b8000ef          	jal	ra,30002ef0 <int_test_15>
			break;
30002e3c:	0240006f          	j	30002e60 <int_handler+0xbc>
		default:
			printf("unknown async exception!\n ");
30002e40:	300077b7          	lui	a5,0x30007
30002e44:	10878513          	addi	a0,a5,264 # 30007108 <_data+0x108>
30002e48:	c19fe0ef          	jal	ra,30001a60 <printf>
			break;
30002e4c:	0140006f          	j	30002e60 <int_handler+0xbc>
		}
	}
	else
	{
		printf("Exception!!\n ");
30002e50:	300077b7          	lui	a5,0x30007
30002e54:	12478513          	addi	a0,a5,292 # 30007124 <_data+0x124>
30002e58:	c09fe0ef          	jal	ra,30001a60 <printf>
		while(1);
30002e5c:	0000006f          	j	30002e5c <int_handler+0xb8>
		return return_pc;
	}

	return return_pc;
30002e60:	fec42783          	lw	a5,-20(s0)
}
30002e64:	00078513          	mv	a0,a5
30002e68:	02c12083          	lw	ra,44(sp)
30002e6c:	02812403          	lw	s0,40(sp)
30002e70:	03010113          	addi	sp,sp,48
30002e74:	00008067          	ret

30002e78 <int_test_8>:

void int_test_8(){
30002e78:	ff010113          	addi	sp,sp,-16
30002e7c:	00112623          	sw	ra,12(sp)
30002e80:	00812423          	sw	s0,8(sp)
30002e84:	01010413          	addi	s0,sp,16
	timer_reset();
30002e88:	d39fe0ef          	jal	ra,30001bc0 <timer_reset>
	sche_thread(0,&thread_tcb[3]);
30002e8c:	3000f7b7          	lui	a5,0x3000f
30002e90:	00478793          	addi	a5,a5,4 # 3000f004 <thread_tcb+0x378>
30002e94:	00078593          	mv	a1,a5
30002e98:	00000513          	li	a0,0
30002e9c:	d0dff0ef          	jal	ra,30002ba8 <sche_thread>
}
30002ea0:	00000013          	nop
30002ea4:	00c12083          	lw	ra,12(sp)
30002ea8:	00812403          	lw	s0,8(sp)
30002eac:	01010113          	addi	sp,sp,16
30002eb0:	00008067          	ret

30002eb4 <int_test_12>:

void int_test_12(){
30002eb4:	ff010113          	addi	sp,sp,-16
30002eb8:	00112623          	sw	ra,12(sp)
30002ebc:	00812423          	sw	s0,8(sp)
30002ec0:	01010413          	addi	s0,sp,16
	timer_reset();
30002ec4:	cfdfe0ef          	jal	ra,30001bc0 <timer_reset>
	sche_thread(0,&thread_tcb[2]);
30002ec8:	3000f7b7          	lui	a5,0x3000f
30002ecc:	edc78793          	addi	a5,a5,-292 # 3000eedc <thread_tcb+0x250>
30002ed0:	00078593          	mv	a1,a5
30002ed4:	00000513          	li	a0,0
30002ed8:	cd1ff0ef          	jal	ra,30002ba8 <sche_thread>
}
30002edc:	00000013          	nop
30002ee0:	00c12083          	lw	ra,12(sp)
30002ee4:	00812403          	lw	s0,8(sp)
30002ee8:	01010113          	addi	sp,sp,16
30002eec:	00008067          	ret

30002ef0 <int_test_15>:

void int_test_15(){
30002ef0:	ff010113          	addi	sp,sp,-16
30002ef4:	00112623          	sw	ra,12(sp)
30002ef8:	00812423          	sw	s0,8(sp)
30002efc:	01010413          	addi	s0,sp,16
	timer_reset();
30002f00:	cc1fe0ef          	jal	ra,30001bc0 <timer_reset>
	sche_thread(0,&thread_tcb[1]);
30002f04:	3000f7b7          	lui	a5,0x3000f
30002f08:	db478793          	addi	a5,a5,-588 # 3000edb4 <thread_tcb+0x128>
30002f0c:	00078593          	mv	a1,a5
30002f10:	00000513          	li	a0,0
30002f14:	c95ff0ef          	jal	ra,30002ba8 <sche_thread>
30002f18:	00000013          	nop
30002f1c:	00c12083          	lw	ra,12(sp)
30002f20:	00812403          	lw	s0,8(sp)
30002f24:	01010113          	addi	sp,sp,16
30002f28:	00008067          	ret

30002f2c <pre_process>:
#include "stdio.h"
#include "debug.h"
#include "thread.h"
void pre_process(){
30002f2c:	ff010113          	addi	sp,sp,-16
30002f30:	00112623          	sw	ra,12(sp)
30002f34:	00812423          	sw	s0,8(sp)
30002f38:	01010413          	addi	s0,sp,16
    uart_init();
30002f3c:	b95fe0ef          	jal	ra,30001ad0 <uart_init>
    printf("It's bootblock!\n ");
30002f40:	300077b7          	lui	a5,0x30007
30002f44:	16878513          	addi	a0,a5,360 # 30007168 <_data+0x168>
30002f48:	b19fe0ef          	jal	ra,30001a60 <printf>
    delay(MAIN_D_TIME);
30002f4c:	0c800513          	li	a0,200
30002f50:	d4dff0ef          	jal	ra,30002c9c <delay>
30002f54:	00000013          	nop
30002f58:	00c12083          	lw	ra,12(sp)
30002f5c:	00812403          	lw	s0,8(sp)
30002f60:	01010113          	addi	sp,sp,16
30002f64:	00008067          	ret

30002f68 <main>:
// #include "user.h"
#include "timer.h"
#include "os_cnn.h"

void main(void)
{
30002f68:	ff010113          	addi	sp,sp,-16
30002f6c:	00112623          	sw	ra,12(sp)
30002f70:	00812423          	sw	s0,8(sp)
30002f74:	01010413          	addi	s0,sp,16
	printf("Hello, OS!\n ");
30002f78:	300077b7          	lui	a5,0x30007
30002f7c:	17c78513          	addi	a0,a5,380 # 3000717c <_data+0x17c>
30002f80:	ae1fe0ef          	jal	ra,30001a60 <printf>
	delay(MAIN_D_TIME);
30002f84:	0c800513          	li	a0,200
30002f88:	d15ff0ef          	jal	ra,30002c9c <delay>
	printf("- - - - - - - - - - - - - - - - - - - - - -\n ");
30002f8c:	300077b7          	lui	a5,0x30007
30002f90:	18c78513          	addi	a0,a5,396 # 3000718c <_data+0x18c>
30002f94:	acdfe0ef          	jal	ra,30001a60 <printf>
	// dijkstraMain();
	// quickSortMain();
	// commonDivisorMain();

	// timer_init();
	thread_init();
30002f98:	985ff0ef          	jal	ra,3000291c <thread_init>

#ifdef QEMU
	plic_init();
#endif

	int_init();
30002f9c:	db1ff0ef          	jal	ra,30002d4c <int_init>
#endif
	// thread_create((void*)print_task);
	// thread_create((void*)count_task);
	// thread_create((void*)draw_task);

	forward((char *)WEIGHT_ADDR,(char *)IAMGES_ADDR);
30002fa0:	200005b7          	lui	a1,0x20000
30002fa4:	20002537          	lui	a0,0x20002
30002fa8:	b14ff0ef          	jal	ra,300022bc <forward>
	

	while(1){
        // printf("Main Thread!!\n ");
		delay(MAIN_D_TIME);
30002fac:	0c800513          	li	a0,200
30002fb0:	cedff0ef          	jal	ra,30002c9c <delay>
30002fb4:	ff9ff06f          	j	30002fac <main+0x44>

30002fb8 <__floatsidf>:
30002fb8:	ff010113          	addi	sp,sp,-16
30002fbc:	00112623          	sw	ra,12(sp)
30002fc0:	00812423          	sw	s0,8(sp)
30002fc4:	00912223          	sw	s1,4(sp)
30002fc8:	08050663          	beqz	a0,30003054 <__floatsidf+0x9c>
30002fcc:	41f55793          	srai	a5,a0,0x1f
30002fd0:	00a7c433          	xor	s0,a5,a0
30002fd4:	40f40433          	sub	s0,s0,a5
30002fd8:	01f55493          	srli	s1,a0,0x1f
30002fdc:	00040513          	mv	a0,s0
30002fe0:	7f5000ef          	jal	ra,30003fd4 <__clzsi2>
30002fe4:	41e00713          	li	a4,1054
30002fe8:	00a00793          	li	a5,10
30002fec:	40a70733          	sub	a4,a4,a0
30002ff0:	04a7c863          	blt	a5,a0,30003040 <__floatsidf+0x88>
30002ff4:	00b00793          	li	a5,11
30002ff8:	40a787b3          	sub	a5,a5,a0
30002ffc:	01550513          	addi	a0,a0,21 # 20002015 <__stack_size+0x20001015>
30003000:	00f457b3          	srl	a5,s0,a5
30003004:	00a41433          	sll	s0,s0,a0
30003008:	00048513          	mv	a0,s1
3000300c:	00c79793          	slli	a5,a5,0xc
30003010:	00c7d793          	srli	a5,a5,0xc
30003014:	01471713          	slli	a4,a4,0x14
30003018:	01f51513          	slli	a0,a0,0x1f
3000301c:	00f76733          	or	a4,a4,a5
30003020:	00c12083          	lw	ra,12(sp)
30003024:	00a767b3          	or	a5,a4,a0
30003028:	00040513          	mv	a0,s0
3000302c:	00812403          	lw	s0,8(sp)
30003030:	00412483          	lw	s1,4(sp)
30003034:	00078593          	mv	a1,a5
30003038:	01010113          	addi	sp,sp,16
3000303c:	00008067          	ret
30003040:	ff550513          	addi	a0,a0,-11
30003044:	00a417b3          	sll	a5,s0,a0
30003048:	00048513          	mv	a0,s1
3000304c:	00000413          	li	s0,0
30003050:	fbdff06f          	j	3000300c <__floatsidf+0x54>
30003054:	00000713          	li	a4,0
30003058:	00000793          	li	a5,0
3000305c:	ff1ff06f          	j	3000304c <__floatsidf+0x94>

30003060 <__addsf3>:
30003060:	ff010113          	addi	sp,sp,-16
30003064:	00800737          	lui	a4,0x800
30003068:	fff70713          	addi	a4,a4,-1 # 7fffff <__stack_size+0x7fefff>
3000306c:	0175d613          	srli	a2,a1,0x17
30003070:	00812423          	sw	s0,8(sp)
30003074:	01755413          	srli	s0,a0,0x17
30003078:	00a777b3          	and	a5,a4,a0
3000307c:	01212023          	sw	s2,0(sp)
30003080:	00b77733          	and	a4,a4,a1
30003084:	0ff47413          	zext.b	s0,s0
30003088:	0ff67613          	zext.b	a2,a2
3000308c:	00112623          	sw	ra,12(sp)
30003090:	00912223          	sw	s1,4(sp)
30003094:	01f55913          	srli	s2,a0,0x1f
30003098:	01f5d593          	srli	a1,a1,0x1f
3000309c:	00379793          	slli	a5,a5,0x3
300030a0:	00371713          	slli	a4,a4,0x3
300030a4:	40c406b3          	sub	a3,s0,a2
300030a8:	20b91863          	bne	s2,a1,300032b8 <__addsf3+0x258>
300030ac:	12d05863          	blez	a3,300031dc <__addsf3+0x17c>
300030b0:	02061e63          	bnez	a2,300030ec <__addsf3+0x8c>
300030b4:	1e070e63          	beqz	a4,300032b0 <__addsf3+0x250>
300030b8:	fff68613          	addi	a2,a3,-1
300030bc:	02061063          	bnez	a2,300030dc <__addsf3+0x7c>
300030c0:	00e787b3          	add	a5,a5,a4
300030c4:	04000737          	lui	a4,0x4000
300030c8:	00e7f733          	and	a4,a5,a4
300030cc:	00200413          	li	s0,2
300030d0:	0e071863          	bnez	a4,300031c0 <__addsf3+0x160>
300030d4:	00100413          	li	s0,1
300030d8:	0340006f          	j	3000310c <__addsf3+0xac>
300030dc:	0ff00593          	li	a1,255
300030e0:	02b69063          	bne	a3,a1,30003100 <__addsf3+0xa0>
300030e4:	0ff00413          	li	s0,255
300030e8:	0240006f          	j	3000310c <__addsf3+0xac>
300030ec:	0ff00613          	li	a2,255
300030f0:	00c40e63          	beq	s0,a2,3000310c <__addsf3+0xac>
300030f4:	04000637          	lui	a2,0x4000
300030f8:	00c76733          	or	a4,a4,a2
300030fc:	00068613          	mv	a2,a3
30003100:	01b00693          	li	a3,27
30003104:	08c6d263          	bge	a3,a2,30003188 <__addsf3+0x128>
30003108:	00178793          	addi	a5,a5,1
3000310c:	0077f713          	andi	a4,a5,7
30003110:	00070a63          	beqz	a4,30003124 <__addsf3+0xc4>
30003114:	00f7f713          	andi	a4,a5,15
30003118:	00400693          	li	a3,4
3000311c:	00d70463          	beq	a4,a3,30003124 <__addsf3+0xc4>
30003120:	00478793          	addi	a5,a5,4
30003124:	04000737          	lui	a4,0x4000
30003128:	00e7f733          	and	a4,a5,a4
3000312c:	38070063          	beqz	a4,300034ac <__addsf3+0x44c>
30003130:	00140413          	addi	s0,s0,1
30003134:	0ff00713          	li	a4,255
30003138:	00000493          	li	s1,0
3000313c:	00e40a63          	beq	s0,a4,30003150 <__addsf3+0xf0>
30003140:	0037d493          	srli	s1,a5,0x3
30003144:	1f8007b7          	lui	a5,0x1f800
30003148:	fff78793          	addi	a5,a5,-1 # 1f7fffff <__stack_size+0x1f7fefff>
3000314c:	00f4f4b3          	and	s1,s1,a5
30003150:	01741413          	slli	s0,s0,0x17
30003154:	7f8007b7          	lui	a5,0x7f800
30003158:	00949493          	slli	s1,s1,0x9
3000315c:	0094d493          	srli	s1,s1,0x9
30003160:	00f47433          	and	s0,s0,a5
30003164:	00946433          	or	s0,s0,s1
30003168:	01f91513          	slli	a0,s2,0x1f
3000316c:	00c12083          	lw	ra,12(sp)
30003170:	00a46533          	or	a0,s0,a0
30003174:	00812403          	lw	s0,8(sp)
30003178:	00412483          	lw	s1,4(sp)
3000317c:	00012903          	lw	s2,0(sp)
30003180:	01010113          	addi	sp,sp,16
30003184:	00008067          	ret
30003188:	02000693          	li	a3,32
3000318c:	40c686b3          	sub	a3,a3,a2
30003190:	00c755b3          	srl	a1,a4,a2
30003194:	00d71733          	sll	a4,a4,a3
30003198:	00e03733          	snez	a4,a4
3000319c:	00e5e733          	or	a4,a1,a4
300031a0:	00e787b3          	add	a5,a5,a4
300031a4:	04000737          	lui	a4,0x4000
300031a8:	00e7f733          	and	a4,a5,a4
300031ac:	f60700e3          	beqz	a4,3000310c <__addsf3+0xac>
300031b0:	00140413          	addi	s0,s0,1
300031b4:	0ff00713          	li	a4,255
300031b8:	00000493          	li	s1,0
300031bc:	f8e40ae3          	beq	s0,a4,30003150 <__addsf3+0xf0>
300031c0:	7e000737          	lui	a4,0x7e000
300031c4:	0017f693          	andi	a3,a5,1
300031c8:	fff70713          	addi	a4,a4,-1 # 7dffffff <_sp+0x4defffff>
300031cc:	0017d793          	srli	a5,a5,0x1
300031d0:	00e7f7b3          	and	a5,a5,a4
300031d4:	00d7e7b3          	or	a5,a5,a3
300031d8:	f35ff06f          	j	3000310c <__addsf3+0xac>
300031dc:	06068a63          	beqz	a3,30003250 <__addsf3+0x1f0>
300031e0:	408606b3          	sub	a3,a2,s0
300031e4:	02041063          	bnez	s0,30003204 <__addsf3+0x1a4>
300031e8:	2a078263          	beqz	a5,3000348c <__addsf3+0x42c>
300031ec:	fff68593          	addi	a1,a3,-1
300031f0:	ec0588e3          	beqz	a1,300030c0 <__addsf3+0x60>
300031f4:	0ff00513          	li	a0,255
300031f8:	02a69063          	bne	a3,a0,30003218 <__addsf3+0x1b8>
300031fc:	00070793          	mv	a5,a4
30003200:	ee5ff06f          	j	300030e4 <__addsf3+0x84>
30003204:	0ff00593          	li	a1,255
30003208:	feb60ae3          	beq	a2,a1,300031fc <__addsf3+0x19c>
3000320c:	040005b7          	lui	a1,0x4000
30003210:	00b7e7b3          	or	a5,a5,a1
30003214:	00068593          	mv	a1,a3
30003218:	01b00693          	li	a3,27
3000321c:	00b6d863          	bge	a3,a1,3000322c <__addsf3+0x1cc>
30003220:	00170793          	addi	a5,a4,1
30003224:	00060413          	mv	s0,a2
30003228:	ee5ff06f          	j	3000310c <__addsf3+0xac>
3000322c:	02000693          	li	a3,32
30003230:	40b686b3          	sub	a3,a3,a1
30003234:	00b7d533          	srl	a0,a5,a1
30003238:	00d797b3          	sll	a5,a5,a3
3000323c:	00f037b3          	snez	a5,a5
30003240:	00f567b3          	or	a5,a0,a5
30003244:	00e787b3          	add	a5,a5,a4
30003248:	00060413          	mv	s0,a2
3000324c:	f59ff06f          	j	300031a4 <__addsf3+0x144>
30003250:	00140693          	addi	a3,s0,1
30003254:	0fe6f613          	andi	a2,a3,254
30003258:	04061463          	bnez	a2,300032a0 <__addsf3+0x240>
3000325c:	02041663          	bnez	s0,30003288 <__addsf3+0x228>
30003260:	22078a63          	beqz	a5,30003494 <__addsf3+0x434>
30003264:	ea0704e3          	beqz	a4,3000310c <__addsf3+0xac>
30003268:	00e787b3          	add	a5,a5,a4
3000326c:	04000737          	lui	a4,0x4000
30003270:	00e7f733          	and	a4,a5,a4
30003274:	e8070ce3          	beqz	a4,3000310c <__addsf3+0xac>
30003278:	fc000737          	lui	a4,0xfc000
3000327c:	fff70713          	addi	a4,a4,-1 # fbffffff <_sp+0xcbefffff>
30003280:	00e7f7b3          	and	a5,a5,a4
30003284:	e51ff06f          	j	300030d4 <__addsf3+0x74>
30003288:	f6078ae3          	beqz	a5,300031fc <__addsf3+0x19c>
3000328c:	e4070ce3          	beqz	a4,300030e4 <__addsf3+0x84>
30003290:	00000913          	li	s2,0
30003294:	0ff00413          	li	s0,255
30003298:	004004b7          	lui	s1,0x400
3000329c:	eb5ff06f          	j	30003150 <__addsf3+0xf0>
300032a0:	0ff00613          	li	a2,255
300032a4:	22c68063          	beq	a3,a2,300034c4 <__addsf3+0x464>
300032a8:	00e78733          	add	a4,a5,a4
300032ac:	00175793          	srli	a5,a4,0x1
300032b0:	00068413          	mv	s0,a3
300032b4:	e59ff06f          	j	3000310c <__addsf3+0xac>
300032b8:	08d05063          	blez	a3,30003338 <__addsf3+0x2d8>
300032bc:	06061263          	bnez	a2,30003320 <__addsf3+0x2c0>
300032c0:	fe0708e3          	beqz	a4,300032b0 <__addsf3+0x250>
300032c4:	fff68613          	addi	a2,a3,-1
300032c8:	00061863          	bnez	a2,300032d8 <__addsf3+0x278>
300032cc:	40e787b3          	sub	a5,a5,a4
300032d0:	00100413          	li	s0,1
300032d4:	0340006f          	j	30003308 <__addsf3+0x2a8>
300032d8:	0ff00593          	li	a1,255
300032dc:	e0b684e3          	beq	a3,a1,300030e4 <__addsf3+0x84>
300032e0:	01b00593          	li	a1,27
300032e4:	00100693          	li	a3,1
300032e8:	00c5ce63          	blt	a1,a2,30003304 <__addsf3+0x2a4>
300032ec:	02000693          	li	a3,32
300032f0:	40c686b3          	sub	a3,a3,a2
300032f4:	00c755b3          	srl	a1,a4,a2
300032f8:	00d71733          	sll	a4,a4,a3
300032fc:	00e03733          	snez	a4,a4
30003300:	00e5e6b3          	or	a3,a1,a4
30003304:	40d787b3          	sub	a5,a5,a3
30003308:	040004b7          	lui	s1,0x4000
3000330c:	0097f733          	and	a4,a5,s1
30003310:	de070ee3          	beqz	a4,3000310c <__addsf3+0xac>
30003314:	fff48493          	addi	s1,s1,-1 # 3ffffff <__stack_size+0x3ffefff>
30003318:	0097f4b3          	and	s1,a5,s1
3000331c:	1140006f          	j	30003430 <__addsf3+0x3d0>
30003320:	0ff00613          	li	a2,255
30003324:	dec404e3          	beq	s0,a2,3000310c <__addsf3+0xac>
30003328:	04000637          	lui	a2,0x4000
3000332c:	00c76733          	or	a4,a4,a2
30003330:	00068613          	mv	a2,a3
30003334:	fadff06f          	j	300032e0 <__addsf3+0x280>
30003338:	08068063          	beqz	a3,300033b8 <__addsf3+0x358>
3000333c:	408606b3          	sub	a3,a2,s0
30003340:	02041863          	bnez	s0,30003370 <__addsf3+0x310>
30003344:	14078c63          	beqz	a5,3000349c <__addsf3+0x43c>
30003348:	fff68513          	addi	a0,a3,-1
3000334c:	00051863          	bnez	a0,3000335c <__addsf3+0x2fc>
30003350:	40f707b3          	sub	a5,a4,a5
30003354:	00058913          	mv	s2,a1
30003358:	f79ff06f          	j	300032d0 <__addsf3+0x270>
3000335c:	0ff00813          	li	a6,255
30003360:	03069263          	bne	a3,a6,30003384 <__addsf3+0x324>
30003364:	00070793          	mv	a5,a4
30003368:	0ff00413          	li	s0,255
3000336c:	1380006f          	j	300034a4 <__addsf3+0x444>
30003370:	0ff00513          	li	a0,255
30003374:	fea608e3          	beq	a2,a0,30003364 <__addsf3+0x304>
30003378:	04000537          	lui	a0,0x4000
3000337c:	00a7e7b3          	or	a5,a5,a0
30003380:	00068513          	mv	a0,a3
30003384:	01b00813          	li	a6,27
30003388:	00100693          	li	a3,1
3000338c:	00a84e63          	blt	a6,a0,300033a8 <__addsf3+0x348>
30003390:	02000693          	li	a3,32
30003394:	40a686b3          	sub	a3,a3,a0
30003398:	00a7d833          	srl	a6,a5,a0
3000339c:	00d797b3          	sll	a5,a5,a3
300033a0:	00f037b3          	snez	a5,a5
300033a4:	00f866b3          	or	a3,a6,a5
300033a8:	40d707b3          	sub	a5,a4,a3
300033ac:	00060413          	mv	s0,a2
300033b0:	00058913          	mv	s2,a1
300033b4:	f55ff06f          	j	30003308 <__addsf3+0x2a8>
300033b8:	00140693          	addi	a3,s0,1
300033bc:	0fe6f693          	andi	a3,a3,254
300033c0:	04069c63          	bnez	a3,30003418 <__addsf3+0x3b8>
300033c4:	04041063          	bnez	s0,30003404 <__addsf3+0x3a4>
300033c8:	00079a63          	bnez	a5,300033dc <__addsf3+0x37c>
300033cc:	00070793          	mv	a5,a4
300033d0:	0c071a63          	bnez	a4,300034a4 <__addsf3+0x444>
300033d4:	00000493          	li	s1,0
300033d8:	0240006f          	j	300033fc <__addsf3+0x39c>
300033dc:	d20708e3          	beqz	a4,3000310c <__addsf3+0xac>
300033e0:	40e784b3          	sub	s1,a5,a4
300033e4:	040006b7          	lui	a3,0x4000
300033e8:	00d4f6b3          	and	a3,s1,a3
300033ec:	40f707b3          	sub	a5,a4,a5
300033f0:	0a069a63          	bnez	a3,300034a4 <__addsf3+0x444>
300033f4:	00048793          	mv	a5,s1
300033f8:	d0049ae3          	bnez	s1,3000310c <__addsf3+0xac>
300033fc:	00000913          	li	s2,0
30003400:	d51ff06f          	j	30003150 <__addsf3+0xf0>
30003404:	e80794e3          	bnez	a5,3000328c <__addsf3+0x22c>
30003408:	e80704e3          	beqz	a4,30003290 <__addsf3+0x230>
3000340c:	00070793          	mv	a5,a4
30003410:	00058913          	mv	s2,a1
30003414:	cd1ff06f          	j	300030e4 <__addsf3+0x84>
30003418:	40e784b3          	sub	s1,a5,a4
3000341c:	040006b7          	lui	a3,0x4000
30003420:	00d4f6b3          	and	a3,s1,a3
30003424:	04068463          	beqz	a3,3000346c <__addsf3+0x40c>
30003428:	40f704b3          	sub	s1,a4,a5
3000342c:	00058913          	mv	s2,a1
30003430:	00048513          	mv	a0,s1
30003434:	3a1000ef          	jal	ra,30003fd4 <__clzsi2>
30003438:	ffb50513          	addi	a0,a0,-5 # 3fffffb <__stack_size+0x3ffeffb>
3000343c:	00a494b3          	sll	s1,s1,a0
30003440:	02854c63          	blt	a0,s0,30003478 <__addsf3+0x418>
30003444:	40850533          	sub	a0,a0,s0
30003448:	00150513          	addi	a0,a0,1
3000344c:	02000713          	li	a4,32
30003450:	40a70733          	sub	a4,a4,a0
30003454:	00a4d7b3          	srl	a5,s1,a0
30003458:	00e494b3          	sll	s1,s1,a4
3000345c:	009034b3          	snez	s1,s1
30003460:	0097e7b3          	or	a5,a5,s1
30003464:	00000413          	li	s0,0
30003468:	ca5ff06f          	j	3000310c <__addsf3+0xac>
3000346c:	fc0492e3          	bnez	s1,30003430 <__addsf3+0x3d0>
30003470:	00000413          	li	s0,0
30003474:	f89ff06f          	j	300033fc <__addsf3+0x39c>
30003478:	fc0007b7          	lui	a5,0xfc000
3000347c:	fff78793          	addi	a5,a5,-1 # fbffffff <_sp+0xcbefffff>
30003480:	40a40433          	sub	s0,s0,a0
30003484:	00f4f7b3          	and	a5,s1,a5
30003488:	c85ff06f          	j	3000310c <__addsf3+0xac>
3000348c:	00070793          	mv	a5,a4
30003490:	e21ff06f          	j	300032b0 <__addsf3+0x250>
30003494:	00070793          	mv	a5,a4
30003498:	c75ff06f          	j	3000310c <__addsf3+0xac>
3000349c:	00070793          	mv	a5,a4
300034a0:	00068413          	mv	s0,a3
300034a4:	00058913          	mv	s2,a1
300034a8:	c65ff06f          	j	3000310c <__addsf3+0xac>
300034ac:	0037d493          	srli	s1,a5,0x3
300034b0:	0ff00793          	li	a5,255
300034b4:	c8f41ee3          	bne	s0,a5,30003150 <__addsf3+0xf0>
300034b8:	c8048ce3          	beqz	s1,30003150 <__addsf3+0xf0>
300034bc:	004004b7          	lui	s1,0x400
300034c0:	f3dff06f          	j	300033fc <__addsf3+0x39c>
300034c4:	0ff00413          	li	s0,255
300034c8:	00000493          	li	s1,0
300034cc:	c85ff06f          	j	30003150 <__addsf3+0xf0>

300034d0 <__divsf3>:
300034d0:	fe010113          	addi	sp,sp,-32
300034d4:	00912a23          	sw	s1,20(sp)
300034d8:	01755493          	srli	s1,a0,0x17
300034dc:	01212823          	sw	s2,16(sp)
300034e0:	01312623          	sw	s3,12(sp)
300034e4:	01412423          	sw	s4,8(sp)
300034e8:	00951713          	slli	a4,a0,0x9
300034ec:	00112e23          	sw	ra,28(sp)
300034f0:	00812c23          	sw	s0,24(sp)
300034f4:	01512223          	sw	s5,4(sp)
300034f8:	0ff4f493          	zext.b	s1,s1
300034fc:	00058a13          	mv	s4,a1
30003500:	00975993          	srli	s3,a4,0x9
30003504:	01f55913          	srli	s2,a0,0x1f
30003508:	08048463          	beqz	s1,30003590 <__divsf3+0xc0>
3000350c:	0ff00793          	li	a5,255
30003510:	0af48063          	beq	s1,a5,300035b0 <__divsf3+0xe0>
30003514:	00399713          	slli	a4,s3,0x3
30003518:	040007b7          	lui	a5,0x4000
3000351c:	00f769b3          	or	s3,a4,a5
30003520:	f8148493          	addi	s1,s1,-127 # 3fff81 <__stack_size+0x3fef81>
30003524:	00000a93          	li	s5,0
30003528:	017a5793          	srli	a5,s4,0x17
3000352c:	009a1413          	slli	s0,s4,0x9
30003530:	0ff7f793          	zext.b	a5,a5
30003534:	00945413          	srli	s0,s0,0x9
30003538:	01fa5a13          	srli	s4,s4,0x1f
3000353c:	08078a63          	beqz	a5,300035d0 <__divsf3+0x100>
30003540:	0ff00713          	li	a4,255
30003544:	0ae78663          	beq	a5,a4,300035f0 <__divsf3+0x120>
30003548:	00341413          	slli	s0,s0,0x3
3000354c:	04000737          	lui	a4,0x4000
30003550:	00e46433          	or	s0,s0,a4
30003554:	f8178793          	addi	a5,a5,-127 # 3ffff81 <__stack_size+0x3ffef81>
30003558:	00000693          	li	a3,0
3000355c:	40f484b3          	sub	s1,s1,a5
30003560:	002a9793          	slli	a5,s5,0x2
30003564:	00d7e7b3          	or	a5,a5,a3
30003568:	fff78793          	addi	a5,a5,-1
3000356c:	00e00713          	li	a4,14
30003570:	01494633          	xor	a2,s2,s4
30003574:	0cf76663          	bltu	a4,a5,30003640 <__divsf3+0x170>
30003578:	30007737          	lui	a4,0x30007
3000357c:	00279793          	slli	a5,a5,0x2
30003580:	1bc70713          	addi	a4,a4,444 # 300071bc <_data+0x1bc>
30003584:	00e787b3          	add	a5,a5,a4
30003588:	0007a783          	lw	a5,0(a5)
3000358c:	00078067          	jr	a5
30003590:	02098a63          	beqz	s3,300035c4 <__divsf3+0xf4>
30003594:	00098513          	mv	a0,s3
30003598:	23d000ef          	jal	ra,30003fd4 <__clzsi2>
3000359c:	ffb50793          	addi	a5,a0,-5
300035a0:	f8a00493          	li	s1,-118
300035a4:	00f999b3          	sll	s3,s3,a5
300035a8:	40a484b3          	sub	s1,s1,a0
300035ac:	f79ff06f          	j	30003524 <__divsf3+0x54>
300035b0:	0ff00493          	li	s1,255
300035b4:	00300a93          	li	s5,3
300035b8:	f60998e3          	bnez	s3,30003528 <__divsf3+0x58>
300035bc:	00200a93          	li	s5,2
300035c0:	f69ff06f          	j	30003528 <__divsf3+0x58>
300035c4:	00000493          	li	s1,0
300035c8:	00100a93          	li	s5,1
300035cc:	f5dff06f          	j	30003528 <__divsf3+0x58>
300035d0:	02040a63          	beqz	s0,30003604 <__divsf3+0x134>
300035d4:	00040513          	mv	a0,s0
300035d8:	1fd000ef          	jal	ra,30003fd4 <__clzsi2>
300035dc:	ffb50793          	addi	a5,a0,-5
300035e0:	00f41433          	sll	s0,s0,a5
300035e4:	f8a00793          	li	a5,-118
300035e8:	40a787b3          	sub	a5,a5,a0
300035ec:	f6dff06f          	j	30003558 <__divsf3+0x88>
300035f0:	0ff00793          	li	a5,255
300035f4:	00300693          	li	a3,3
300035f8:	f60412e3          	bnez	s0,3000355c <__divsf3+0x8c>
300035fc:	00200693          	li	a3,2
30003600:	f5dff06f          	j	3000355c <__divsf3+0x8c>
30003604:	00000793          	li	a5,0
30003608:	00100693          	li	a3,1
3000360c:	f51ff06f          	j	3000355c <__divsf3+0x8c>
30003610:	00090613          	mv	a2,s2
30003614:	00098413          	mv	s0,s3
30003618:	000a8693          	mv	a3,s5
3000361c:	00200793          	li	a5,2
30003620:	1cf68a63          	beq	a3,a5,300037f4 <__divsf3+0x324>
30003624:	00300793          	li	a5,3
30003628:	1af68e63          	beq	a3,a5,300037e4 <__divsf3+0x314>
3000362c:	00100793          	li	a5,1
30003630:	0af69c63          	bne	a3,a5,300036e8 <__divsf3+0x218>
30003634:	00000793          	li	a5,0
30003638:	00000713          	li	a4,0
3000363c:	0f40006f          	j	30003730 <__divsf3+0x260>
30003640:	00541593          	slli	a1,s0,0x5
30003644:	1289f463          	bgeu	s3,s0,3000376c <__divsf3+0x29c>
30003648:	fff48493          	addi	s1,s1,-1
3000364c:	00000793          	li	a5,0
30003650:	0105d513          	srli	a0,a1,0x10
30003654:	02a9d8b3          	divu	a7,s3,a0
30003658:	000106b7          	lui	a3,0x10
3000365c:	fff68693          	addi	a3,a3,-1 # ffff <__stack_size+0xefff>
30003660:	00d5f6b3          	and	a3,a1,a3
30003664:	0107d793          	srli	a5,a5,0x10
30003668:	02a9f733          	remu	a4,s3,a0
3000366c:	00088413          	mv	s0,a7
30003670:	03168833          	mul	a6,a3,a7
30003674:	01071713          	slli	a4,a4,0x10
30003678:	00e7e7b3          	or	a5,a5,a4
3000367c:	0107fe63          	bgeu	a5,a6,30003698 <__divsf3+0x1c8>
30003680:	00f587b3          	add	a5,a1,a5
30003684:	fff88413          	addi	s0,a7,-1
30003688:	00b7e863          	bltu	a5,a1,30003698 <__divsf3+0x1c8>
3000368c:	0107f663          	bgeu	a5,a6,30003698 <__divsf3+0x1c8>
30003690:	ffe88413          	addi	s0,a7,-2
30003694:	00b787b3          	add	a5,a5,a1
30003698:	410787b3          	sub	a5,a5,a6
3000369c:	02a7d833          	divu	a6,a5,a0
300036a0:	02a7f7b3          	remu	a5,a5,a0
300036a4:	03068733          	mul	a4,a3,a6
300036a8:	01079793          	slli	a5,a5,0x10
300036ac:	00080693          	mv	a3,a6
300036b0:	02e7f263          	bgeu	a5,a4,300036d4 <__divsf3+0x204>
300036b4:	00b78533          	add	a0,a5,a1
300036b8:	00f538b3          	sltu	a7,a0,a5
300036bc:	fff80693          	addi	a3,a6,-1
300036c0:	00050793          	mv	a5,a0
300036c4:	00089863          	bnez	a7,300036d4 <__divsf3+0x204>
300036c8:	00e57663          	bgeu	a0,a4,300036d4 <__divsf3+0x204>
300036cc:	ffe80693          	addi	a3,a6,-2
300036d0:	00b507b3          	add	a5,a0,a1
300036d4:	01041413          	slli	s0,s0,0x10
300036d8:	40e787b3          	sub	a5,a5,a4
300036dc:	00d46433          	or	s0,s0,a3
300036e0:	00f037b3          	snez	a5,a5
300036e4:	00f46433          	or	s0,s0,a5
300036e8:	07f48713          	addi	a4,s1,127
300036ec:	08e05a63          	blez	a4,30003780 <__divsf3+0x2b0>
300036f0:	00747793          	andi	a5,s0,7
300036f4:	00078a63          	beqz	a5,30003708 <__divsf3+0x238>
300036f8:	00f47793          	andi	a5,s0,15
300036fc:	00400693          	li	a3,4
30003700:	00d78463          	beq	a5,a3,30003708 <__divsf3+0x238>
30003704:	00440413          	addi	s0,s0,4
30003708:	080007b7          	lui	a5,0x8000
3000370c:	00f477b3          	and	a5,s0,a5
30003710:	00078a63          	beqz	a5,30003724 <__divsf3+0x254>
30003714:	f80007b7          	lui	a5,0xf8000
30003718:	fff78793          	addi	a5,a5,-1 # f7ffffff <_sp+0xc7efffff>
3000371c:	00f47433          	and	s0,s0,a5
30003720:	08048713          	addi	a4,s1,128
30003724:	0fe00793          	li	a5,254
30003728:	0ce7c663          	blt	a5,a4,300037f4 <__divsf3+0x324>
3000372c:	00345793          	srli	a5,s0,0x3
30003730:	01c12083          	lw	ra,28(sp)
30003734:	01812403          	lw	s0,24(sp)
30003738:	00979793          	slli	a5,a5,0x9
3000373c:	01771713          	slli	a4,a4,0x17
30003740:	0097d793          	srli	a5,a5,0x9
30003744:	00f76733          	or	a4,a4,a5
30003748:	01f61513          	slli	a0,a2,0x1f
3000374c:	01412483          	lw	s1,20(sp)
30003750:	01012903          	lw	s2,16(sp)
30003754:	00c12983          	lw	s3,12(sp)
30003758:	00812a03          	lw	s4,8(sp)
3000375c:	00412a83          	lw	s5,4(sp)
30003760:	00a76533          	or	a0,a4,a0
30003764:	02010113          	addi	sp,sp,32
30003768:	00008067          	ret
3000376c:	01f99793          	slli	a5,s3,0x1f
30003770:	0019d993          	srli	s3,s3,0x1
30003774:	eddff06f          	j	30003650 <__divsf3+0x180>
30003778:	000a0613          	mv	a2,s4
3000377c:	ea1ff06f          	j	3000361c <__divsf3+0x14c>
30003780:	00100693          	li	a3,1
30003784:	00070c63          	beqz	a4,3000379c <__divsf3+0x2cc>
30003788:	40e686b3          	sub	a3,a3,a4
3000378c:	01b00593          	li	a1,27
30003790:	00000793          	li	a5,0
30003794:	00000713          	li	a4,0
30003798:	f8d5cce3          	blt	a1,a3,30003730 <__divsf3+0x260>
3000379c:	09e48493          	addi	s1,s1,158
300037a0:	00d456b3          	srl	a3,s0,a3
300037a4:	00941433          	sll	s0,s0,s1
300037a8:	00803433          	snez	s0,s0
300037ac:	0086e7b3          	or	a5,a3,s0
300037b0:	0077f713          	andi	a4,a5,7
300037b4:	00070a63          	beqz	a4,300037c8 <__divsf3+0x2f8>
300037b8:	00f7f713          	andi	a4,a5,15
300037bc:	00400693          	li	a3,4
300037c0:	00d70463          	beq	a4,a3,300037c8 <__divsf3+0x2f8>
300037c4:	00478793          	addi	a5,a5,4
300037c8:	04000737          	lui	a4,0x4000
300037cc:	00e7f733          	and	a4,a5,a4
300037d0:	0037d793          	srli	a5,a5,0x3
300037d4:	f4070ee3          	beqz	a4,30003730 <__divsf3+0x260>
300037d8:	00000793          	li	a5,0
300037dc:	00100713          	li	a4,1
300037e0:	f51ff06f          	j	30003730 <__divsf3+0x260>
300037e4:	004007b7          	lui	a5,0x400
300037e8:	0ff00713          	li	a4,255
300037ec:	00000613          	li	a2,0
300037f0:	f41ff06f          	j	30003730 <__divsf3+0x260>
300037f4:	00000793          	li	a5,0
300037f8:	0ff00713          	li	a4,255
300037fc:	f35ff06f          	j	30003730 <__divsf3+0x260>

30003800 <__gesf2>:
30003800:	00800737          	lui	a4,0x800
30003804:	fff70713          	addi	a4,a4,-1 # 7fffff <__stack_size+0x7fefff>
30003808:	01755693          	srli	a3,a0,0x17
3000380c:	00a77633          	and	a2,a4,a0
30003810:	01f55793          	srli	a5,a0,0x1f
30003814:	0ff6f693          	zext.b	a3,a3
30003818:	0175d513          	srli	a0,a1,0x17
3000381c:	0ff00813          	li	a6,255
30003820:	00b77733          	and	a4,a4,a1
30003824:	0ff57513          	zext.b	a0,a0
30003828:	01f5d593          	srli	a1,a1,0x1f
3000382c:	03069863          	bne	a3,a6,3000385c <__gesf2+0x5c>
30003830:	08061e63          	bnez	a2,300038cc <__gesf2+0xcc>
30003834:	00d50a63          	beq	a0,a3,30003848 <__gesf2+0x48>
30003838:	00100513          	li	a0,1
3000383c:	06078c63          	beqz	a5,300038b4 <__gesf2+0xb4>
30003840:	fff00513          	li	a0,-1
30003844:	00008067          	ret
30003848:	ffe00513          	li	a0,-2
3000384c:	06071463          	bnez	a4,300038b4 <__gesf2+0xb4>
30003850:	feb794e3          	bne	a5,a1,30003838 <__gesf2+0x38>
30003854:	00000513          	li	a0,0
30003858:	00008067          	ret
3000385c:	03051463          	bne	a0,a6,30003884 <__gesf2+0x84>
30003860:	ffe00513          	li	a0,-2
30003864:	04071863          	bnez	a4,300038b4 <__gesf2+0xb4>
30003868:	00069463          	bnez	a3,30003870 <__gesf2+0x70>
3000386c:	04060863          	beqz	a2,300038bc <__gesf2+0xbc>
30003870:	fcb794e3          	bne	a5,a1,30003838 <__gesf2+0x38>
30003874:	fff00513          	li	a0,-1
30003878:	02078e63          	beqz	a5,300038b4 <__gesf2+0xb4>
3000387c:	00078513          	mv	a0,a5
30003880:	00008067          	ret
30003884:	02068263          	beqz	a3,300038a8 <__gesf2+0xa8>
30003888:	fa0508e3          	beqz	a0,30003838 <__gesf2+0x38>
3000388c:	fab796e3          	bne	a5,a1,30003838 <__gesf2+0x38>
30003890:	fad544e3          	blt	a0,a3,30003838 <__gesf2+0x38>
30003894:	fea6c0e3          	blt	a3,a0,30003874 <__gesf2+0x74>
30003898:	fac760e3          	bltu	a4,a2,30003838 <__gesf2+0x38>
3000389c:	00000513          	li	a0,0
300038a0:	00e67a63          	bgeu	a2,a4,300038b4 <__gesf2+0xb4>
300038a4:	fd1ff06f          	j	30003874 <__gesf2+0x74>
300038a8:	fc0512e3          	bnez	a0,3000386c <__gesf2+0x6c>
300038ac:	00071663          	bnez	a4,300038b8 <__gesf2+0xb8>
300038b0:	f80614e3          	bnez	a2,30003838 <__gesf2+0x38>
300038b4:	00008067          	ret
300038b8:	00061e63          	bnez	a2,300038d4 <__gesf2+0xd4>
300038bc:	fff00513          	li	a0,-1
300038c0:	fe058ae3          	beqz	a1,300038b4 <__gesf2+0xb4>
300038c4:	00058513          	mv	a0,a1
300038c8:	00008067          	ret
300038cc:	ffe00513          	li	a0,-2
300038d0:	00008067          	ret
300038d4:	fcb782e3          	beq	a5,a1,30003898 <__gesf2+0x98>
300038d8:	f61ff06f          	j	30003838 <__gesf2+0x38>

300038dc <__mulsf3>:
300038dc:	fe010113          	addi	sp,sp,-32
300038e0:	01212823          	sw	s2,16(sp)
300038e4:	01755913          	srli	s2,a0,0x17
300038e8:	00912a23          	sw	s1,20(sp)
300038ec:	01312623          	sw	s3,12(sp)
300038f0:	01512223          	sw	s5,4(sp)
300038f4:	00951493          	slli	s1,a0,0x9
300038f8:	00112e23          	sw	ra,28(sp)
300038fc:	00812c23          	sw	s0,24(sp)
30003900:	01412423          	sw	s4,8(sp)
30003904:	0ff97913          	zext.b	s2,s2
30003908:	00058a93          	mv	s5,a1
3000390c:	0094d493          	srli	s1,s1,0x9
30003910:	01f55993          	srli	s3,a0,0x1f
30003914:	18090663          	beqz	s2,30003aa0 <__mulsf3+0x1c4>
30003918:	0ff00793          	li	a5,255
3000391c:	1af90263          	beq	s2,a5,30003ac0 <__mulsf3+0x1e4>
30003920:	00349493          	slli	s1,s1,0x3
30003924:	040007b7          	lui	a5,0x4000
30003928:	00f4e4b3          	or	s1,s1,a5
3000392c:	f8190913          	addi	s2,s2,-127
30003930:	00000a13          	li	s4,0
30003934:	017ad793          	srli	a5,s5,0x17
30003938:	009a9413          	slli	s0,s5,0x9
3000393c:	0ff7f793          	zext.b	a5,a5
30003940:	00945413          	srli	s0,s0,0x9
30003944:	01fada93          	srli	s5,s5,0x1f
30003948:	18078c63          	beqz	a5,30003ae0 <__mulsf3+0x204>
3000394c:	0ff00713          	li	a4,255
30003950:	1ae78863          	beq	a5,a4,30003b00 <__mulsf3+0x224>
30003954:	00341413          	slli	s0,s0,0x3
30003958:	04000737          	lui	a4,0x4000
3000395c:	00e46433          	or	s0,s0,a4
30003960:	f8178793          	addi	a5,a5,-127 # 3ffff81 <__stack_size+0x3ffef81>
30003964:	00000713          	li	a4,0
30003968:	00f90933          	add	s2,s2,a5
3000396c:	002a1793          	slli	a5,s4,0x2
30003970:	00e7e7b3          	or	a5,a5,a4
30003974:	00a00693          	li	a3,10
30003978:	0159c533          	xor	a0,s3,s5
3000397c:	00190613          	addi	a2,s2,1
30003980:	1ef6c463          	blt	a3,a5,30003b68 <__mulsf3+0x28c>
30003984:	00200693          	li	a3,2
30003988:	18f6cc63          	blt	a3,a5,30003b20 <__mulsf3+0x244>
3000398c:	fff78793          	addi	a5,a5,-1
30003990:	00100693          	li	a3,1
30003994:	1af6f863          	bgeu	a3,a5,30003b44 <__mulsf3+0x268>
30003998:	000108b7          	lui	a7,0x10
3000399c:	fff88813          	addi	a6,a7,-1 # ffff <__stack_size+0xefff>
300039a0:	0104d713          	srli	a4,s1,0x10
300039a4:	01045793          	srli	a5,s0,0x10
300039a8:	010476b3          	and	a3,s0,a6
300039ac:	0104f4b3          	and	s1,s1,a6
300039b0:	029685b3          	mul	a1,a3,s1
300039b4:	02d706b3          	mul	a3,a4,a3
300039b8:	0105d413          	srli	s0,a1,0x10
300039bc:	02f70733          	mul	a4,a4,a5
300039c0:	029787b3          	mul	a5,a5,s1
300039c4:	00d787b3          	add	a5,a5,a3
300039c8:	00f40433          	add	s0,s0,a5
300039cc:	00d47463          	bgeu	s0,a3,300039d4 <__mulsf3+0xf8>
300039d0:	01170733          	add	a4,a4,a7
300039d4:	010477b3          	and	a5,s0,a6
300039d8:	01079793          	slli	a5,a5,0x10
300039dc:	0105f5b3          	and	a1,a1,a6
300039e0:	00b787b3          	add	a5,a5,a1
300039e4:	00679693          	slli	a3,a5,0x6
300039e8:	01045413          	srli	s0,s0,0x10
300039ec:	00d036b3          	snez	a3,a3
300039f0:	01a7d793          	srli	a5,a5,0x1a
300039f4:	00e40433          	add	s0,s0,a4
300039f8:	00f6e7b3          	or	a5,a3,a5
300039fc:	00641413          	slli	s0,s0,0x6
30003a00:	00f46433          	or	s0,s0,a5
30003a04:	080007b7          	lui	a5,0x8000
30003a08:	00f477b3          	and	a5,s0,a5
30003a0c:	16078e63          	beqz	a5,30003b88 <__mulsf3+0x2ac>
30003a10:	00145793          	srli	a5,s0,0x1
30003a14:	00147413          	andi	s0,s0,1
30003a18:	0087e433          	or	s0,a5,s0
30003a1c:	07f60713          	addi	a4,a2,127 # 400007f <__stack_size+0x3fff07f>
30003a20:	16e05863          	blez	a4,30003b90 <__mulsf3+0x2b4>
30003a24:	00747793          	andi	a5,s0,7
30003a28:	00078a63          	beqz	a5,30003a3c <__mulsf3+0x160>
30003a2c:	00f47793          	andi	a5,s0,15
30003a30:	00400693          	li	a3,4
30003a34:	00d78463          	beq	a5,a3,30003a3c <__mulsf3+0x160>
30003a38:	00440413          	addi	s0,s0,4
30003a3c:	080007b7          	lui	a5,0x8000
30003a40:	00f477b3          	and	a5,s0,a5
30003a44:	00078a63          	beqz	a5,30003a58 <__mulsf3+0x17c>
30003a48:	f80007b7          	lui	a5,0xf8000
30003a4c:	fff78793          	addi	a5,a5,-1 # f7ffffff <_sp+0xc7efffff>
30003a50:	00f47433          	and	s0,s0,a5
30003a54:	08060713          	addi	a4,a2,128
30003a58:	0fe00793          	li	a5,254
30003a5c:	1ae7c463          	blt	a5,a4,30003c04 <__mulsf3+0x328>
30003a60:	00345793          	srli	a5,s0,0x3
30003a64:	01c12083          	lw	ra,28(sp)
30003a68:	01812403          	lw	s0,24(sp)
30003a6c:	00979793          	slli	a5,a5,0x9
30003a70:	01771713          	slli	a4,a4,0x17
30003a74:	0097d793          	srli	a5,a5,0x9
30003a78:	00f76733          	or	a4,a4,a5
30003a7c:	01f51513          	slli	a0,a0,0x1f
30003a80:	01412483          	lw	s1,20(sp)
30003a84:	01012903          	lw	s2,16(sp)
30003a88:	00c12983          	lw	s3,12(sp)
30003a8c:	00812a03          	lw	s4,8(sp)
30003a90:	00412a83          	lw	s5,4(sp)
30003a94:	00a76533          	or	a0,a4,a0
30003a98:	02010113          	addi	sp,sp,32
30003a9c:	00008067          	ret
30003aa0:	02048a63          	beqz	s1,30003ad4 <__mulsf3+0x1f8>
30003aa4:	00048513          	mv	a0,s1
30003aa8:	52c000ef          	jal	ra,30003fd4 <__clzsi2>
30003aac:	ffb50793          	addi	a5,a0,-5
30003ab0:	f8a00913          	li	s2,-118
30003ab4:	00f494b3          	sll	s1,s1,a5
30003ab8:	40a90933          	sub	s2,s2,a0
30003abc:	e75ff06f          	j	30003930 <__mulsf3+0x54>
30003ac0:	0ff00913          	li	s2,255
30003ac4:	00300a13          	li	s4,3
30003ac8:	e60496e3          	bnez	s1,30003934 <__mulsf3+0x58>
30003acc:	00200a13          	li	s4,2
30003ad0:	e65ff06f          	j	30003934 <__mulsf3+0x58>
30003ad4:	00000913          	li	s2,0
30003ad8:	00100a13          	li	s4,1
30003adc:	e59ff06f          	j	30003934 <__mulsf3+0x58>
30003ae0:	02040a63          	beqz	s0,30003b14 <__mulsf3+0x238>
30003ae4:	00040513          	mv	a0,s0
30003ae8:	4ec000ef          	jal	ra,30003fd4 <__clzsi2>
30003aec:	ffb50793          	addi	a5,a0,-5
30003af0:	00f41433          	sll	s0,s0,a5
30003af4:	f8a00793          	li	a5,-118
30003af8:	40a787b3          	sub	a5,a5,a0
30003afc:	e69ff06f          	j	30003964 <__mulsf3+0x88>
30003b00:	0ff00793          	li	a5,255
30003b04:	00300713          	li	a4,3
30003b08:	e60410e3          	bnez	s0,30003968 <__mulsf3+0x8c>
30003b0c:	00200713          	li	a4,2
30003b10:	e59ff06f          	j	30003968 <__mulsf3+0x8c>
30003b14:	00000793          	li	a5,0
30003b18:	00100713          	li	a4,1
30003b1c:	e4dff06f          	j	30003968 <__mulsf3+0x8c>
30003b20:	00100693          	li	a3,1
30003b24:	00f697b3          	sll	a5,a3,a5
30003b28:	5307f693          	andi	a3,a5,1328
30003b2c:	04069863          	bnez	a3,30003b7c <__mulsf3+0x2a0>
30003b30:	2407f693          	andi	a3,a5,576
30003b34:	0c069063          	bnez	a3,30003bf4 <__mulsf3+0x318>
30003b38:	0887f793          	andi	a5,a5,136
30003b3c:	e4078ee3          	beqz	a5,30003998 <__mulsf3+0xbc>
30003b40:	000a8513          	mv	a0,s5
30003b44:	00200793          	li	a5,2
30003b48:	0af70e63          	beq	a4,a5,30003c04 <__mulsf3+0x328>
30003b4c:	00300793          	li	a5,3
30003b50:	0af70263          	beq	a4,a5,30003bf4 <__mulsf3+0x318>
30003b54:	00100793          	li	a5,1
30003b58:	ecf712e3          	bne	a4,a5,30003a1c <__mulsf3+0x140>
30003b5c:	00000793          	li	a5,0
30003b60:	00000713          	li	a4,0
30003b64:	f01ff06f          	j	30003a64 <__mulsf3+0x188>
30003b68:	00f00693          	li	a3,15
30003b6c:	08d78463          	beq	a5,a3,30003bf4 <__mulsf3+0x318>
30003b70:	00b00693          	li	a3,11
30003b74:	00098513          	mv	a0,s3
30003b78:	fcd784e3          	beq	a5,a3,30003b40 <__mulsf3+0x264>
30003b7c:	00048413          	mv	s0,s1
30003b80:	000a0713          	mv	a4,s4
30003b84:	fc1ff06f          	j	30003b44 <__mulsf3+0x268>
30003b88:	00090613          	mv	a2,s2
30003b8c:	e91ff06f          	j	30003a1c <__mulsf3+0x140>
30003b90:	00100693          	li	a3,1
30003b94:	00070c63          	beqz	a4,30003bac <__mulsf3+0x2d0>
30003b98:	40e686b3          	sub	a3,a3,a4
30003b9c:	01b00593          	li	a1,27
30003ba0:	00000793          	li	a5,0
30003ba4:	00000713          	li	a4,0
30003ba8:	ead5cee3          	blt	a1,a3,30003a64 <__mulsf3+0x188>
30003bac:	09e60613          	addi	a2,a2,158
30003bb0:	00d456b3          	srl	a3,s0,a3
30003bb4:	00c41433          	sll	s0,s0,a2
30003bb8:	00803433          	snez	s0,s0
30003bbc:	0086e7b3          	or	a5,a3,s0
30003bc0:	0077f713          	andi	a4,a5,7
30003bc4:	00070a63          	beqz	a4,30003bd8 <__mulsf3+0x2fc>
30003bc8:	00f7f713          	andi	a4,a5,15
30003bcc:	00400693          	li	a3,4
30003bd0:	00d70463          	beq	a4,a3,30003bd8 <__mulsf3+0x2fc>
30003bd4:	00478793          	addi	a5,a5,4
30003bd8:	04000737          	lui	a4,0x4000
30003bdc:	00e7f733          	and	a4,a5,a4
30003be0:	0037d793          	srli	a5,a5,0x3
30003be4:	e80700e3          	beqz	a4,30003a64 <__mulsf3+0x188>
30003be8:	00000793          	li	a5,0
30003bec:	00100713          	li	a4,1
30003bf0:	e75ff06f          	j	30003a64 <__mulsf3+0x188>
30003bf4:	004007b7          	lui	a5,0x400
30003bf8:	0ff00713          	li	a4,255
30003bfc:	00000513          	li	a0,0
30003c00:	e65ff06f          	j	30003a64 <__mulsf3+0x188>
30003c04:	00000793          	li	a5,0
30003c08:	0ff00713          	li	a4,255
30003c0c:	e59ff06f          	j	30003a64 <__mulsf3+0x188>

30003c10 <__fixsfsi>:
30003c10:	00800637          	lui	a2,0x800
30003c14:	01755713          	srli	a4,a0,0x17
30003c18:	fff60793          	addi	a5,a2,-1 # 7fffff <__stack_size+0x7fefff>
30003c1c:	0ff77713          	zext.b	a4,a4
30003c20:	07e00593          	li	a1,126
30003c24:	00a7f7b3          	and	a5,a5,a0
30003c28:	01f55693          	srli	a3,a0,0x1f
30003c2c:	04e5d663          	bge	a1,a4,30003c78 <__fixsfsi+0x68>
30003c30:	09d00593          	li	a1,157
30003c34:	00e5da63          	bge	a1,a4,30003c48 <__fixsfsi+0x38>
30003c38:	80000537          	lui	a0,0x80000
30003c3c:	fff54513          	not	a0,a0
30003c40:	00a68533          	add	a0,a3,a0
30003c44:	00008067          	ret
30003c48:	00c7e533          	or	a0,a5,a2
30003c4c:	09500793          	li	a5,149
30003c50:	00e7dc63          	bge	a5,a4,30003c68 <__fixsfsi+0x58>
30003c54:	f6a70713          	addi	a4,a4,-150 # 3ffff6a <__stack_size+0x3ffef6a>
30003c58:	00e51533          	sll	a0,a0,a4
30003c5c:	02068063          	beqz	a3,30003c7c <__fixsfsi+0x6c>
30003c60:	40a00533          	neg	a0,a0
30003c64:	00008067          	ret
30003c68:	09600793          	li	a5,150
30003c6c:	40e787b3          	sub	a5,a5,a4
30003c70:	00f55533          	srl	a0,a0,a5
30003c74:	fe9ff06f          	j	30003c5c <__fixsfsi+0x4c>
30003c78:	00000513          	li	a0,0
30003c7c:	00008067          	ret

30003c80 <__floatunsisf>:
30003c80:	ff010113          	addi	sp,sp,-16
30003c84:	00812423          	sw	s0,8(sp)
30003c88:	00112623          	sw	ra,12(sp)
30003c8c:	00050413          	mv	s0,a0
30003c90:	00000793          	li	a5,0
30003c94:	02050463          	beqz	a0,30003cbc <__floatunsisf+0x3c>
30003c98:	33c000ef          	jal	ra,30003fd4 <__clzsi2>
30003c9c:	09e00793          	li	a5,158
30003ca0:	40a787b3          	sub	a5,a5,a0
30003ca4:	09600713          	li	a4,150
30003ca8:	02f74a63          	blt	a4,a5,30003cdc <__floatunsisf+0x5c>
30003cac:	00800713          	li	a4,8
30003cb0:	0ae50863          	beq	a0,a4,30003d60 <__floatunsisf+0xe0>
30003cb4:	ff850513          	addi	a0,a0,-8 # 7ffffff8 <_sp+0x4feffff8>
30003cb8:	00a41433          	sll	s0,s0,a0
30003cbc:	00941413          	slli	s0,s0,0x9
30003cc0:	00945413          	srli	s0,s0,0x9
30003cc4:	01779513          	slli	a0,a5,0x17
30003cc8:	00c12083          	lw	ra,12(sp)
30003ccc:	00856533          	or	a0,a0,s0
30003cd0:	00812403          	lw	s0,8(sp)
30003cd4:	01010113          	addi	sp,sp,16
30003cd8:	00008067          	ret
30003cdc:	09900713          	li	a4,153
30003ce0:	06f75663          	bge	a4,a5,30003d4c <__floatunsisf+0xcc>
30003ce4:	01b50713          	addi	a4,a0,27
30003ce8:	00500693          	li	a3,5
30003cec:	00e41733          	sll	a4,s0,a4
30003cf0:	40a686b3          	sub	a3,a3,a0
30003cf4:	00e03733          	snez	a4,a4
30003cf8:	00d45433          	srl	s0,s0,a3
30003cfc:	00876433          	or	s0,a4,s0
30003d00:	fc000737          	lui	a4,0xfc000
30003d04:	fff70713          	addi	a4,a4,-1 # fbffffff <_sp+0xcbefffff>
30003d08:	00747693          	andi	a3,s0,7
30003d0c:	00e47733          	and	a4,s0,a4
30003d10:	00068a63          	beqz	a3,30003d24 <__floatunsisf+0xa4>
30003d14:	00f47413          	andi	s0,s0,15
30003d18:	00400693          	li	a3,4
30003d1c:	00d40463          	beq	s0,a3,30003d24 <__floatunsisf+0xa4>
30003d20:	00470713          	addi	a4,a4,4
30003d24:	040006b7          	lui	a3,0x4000
30003d28:	00d776b3          	and	a3,a4,a3
30003d2c:	00068c63          	beqz	a3,30003d44 <__floatunsisf+0xc4>
30003d30:	fc0007b7          	lui	a5,0xfc000
30003d34:	fff78793          	addi	a5,a5,-1 # fbffffff <_sp+0xcbefffff>
30003d38:	00f77733          	and	a4,a4,a5
30003d3c:	09f00793          	li	a5,159
30003d40:	40a787b3          	sub	a5,a5,a0
30003d44:	00375413          	srli	s0,a4,0x3
30003d48:	f75ff06f          	j	30003cbc <__floatunsisf+0x3c>
30003d4c:	00500693          	li	a3,5
30003d50:	ffb50713          	addi	a4,a0,-5
30003d54:	fad506e3          	beq	a0,a3,30003d00 <__floatunsisf+0x80>
30003d58:	00e41433          	sll	s0,s0,a4
30003d5c:	fa5ff06f          	j	30003d00 <__floatunsisf+0x80>
30003d60:	09600793          	li	a5,150
30003d64:	f59ff06f          	j	30003cbc <__floatunsisf+0x3c>

30003d68 <__extendsfdf2>:
30003d68:	01755713          	srli	a4,a0,0x17
30003d6c:	0ff77713          	zext.b	a4,a4
30003d70:	ff010113          	addi	sp,sp,-16
30003d74:	00170793          	addi	a5,a4,1
30003d78:	00812423          	sw	s0,8(sp)
30003d7c:	00912223          	sw	s1,4(sp)
30003d80:	00951413          	slli	s0,a0,0x9
30003d84:	00112623          	sw	ra,12(sp)
30003d88:	0fe7f793          	andi	a5,a5,254
30003d8c:	00945413          	srli	s0,s0,0x9
30003d90:	01f55493          	srli	s1,a0,0x1f
30003d94:	04078263          	beqz	a5,30003dd8 <__extendsfdf2+0x70>
30003d98:	00345793          	srli	a5,s0,0x3
30003d9c:	38070713          	addi	a4,a4,896
30003da0:	01d41413          	slli	s0,s0,0x1d
30003da4:	00c79793          	slli	a5,a5,0xc
30003da8:	00c7d793          	srli	a5,a5,0xc
30003dac:	01471713          	slli	a4,a4,0x14
30003db0:	01f49513          	slli	a0,s1,0x1f
30003db4:	00f76733          	or	a4,a4,a5
30003db8:	00c12083          	lw	ra,12(sp)
30003dbc:	00a767b3          	or	a5,a4,a0
30003dc0:	00040513          	mv	a0,s0
30003dc4:	00812403          	lw	s0,8(sp)
30003dc8:	00412483          	lw	s1,4(sp)
30003dcc:	00078593          	mv	a1,a5
30003dd0:	01010113          	addi	sp,sp,16
30003dd4:	00008067          	ret
30003dd8:	04071663          	bnez	a4,30003e24 <__extendsfdf2+0xbc>
30003ddc:	00000793          	li	a5,0
30003de0:	fc0402e3          	beqz	s0,30003da4 <__extendsfdf2+0x3c>
30003de4:	00040513          	mv	a0,s0
30003de8:	1ec000ef          	jal	ra,30003fd4 <__clzsi2>
30003dec:	00a00793          	li	a5,10
30003df0:	02a7c263          	blt	a5,a0,30003e14 <__extendsfdf2+0xac>
30003df4:	00b00793          	li	a5,11
30003df8:	40a787b3          	sub	a5,a5,a0
30003dfc:	01550713          	addi	a4,a0,21
30003e00:	00f457b3          	srl	a5,s0,a5
30003e04:	00e41433          	sll	s0,s0,a4
30003e08:	38900713          	li	a4,905
30003e0c:	40a70733          	sub	a4,a4,a0
30003e10:	f95ff06f          	j	30003da4 <__extendsfdf2+0x3c>
30003e14:	ff550793          	addi	a5,a0,-11
30003e18:	00f417b3          	sll	a5,s0,a5
30003e1c:	00000413          	li	s0,0
30003e20:	fe9ff06f          	j	30003e08 <__extendsfdf2+0xa0>
30003e24:	00000793          	li	a5,0
30003e28:	00040a63          	beqz	s0,30003e3c <__extendsfdf2+0xd4>
30003e2c:	00345793          	srli	a5,s0,0x3
30003e30:	00080737          	lui	a4,0x80
30003e34:	01d41413          	slli	s0,s0,0x1d
30003e38:	00e7e7b3          	or	a5,a5,a4
30003e3c:	7ff00713          	li	a4,2047
30003e40:	f65ff06f          	j	30003da4 <__extendsfdf2+0x3c>

30003e44 <__truncdfsf2>:
30003e44:	00c59713          	slli	a4,a1,0xc
30003e48:	0145d813          	srli	a6,a1,0x14
30003e4c:	00975713          	srli	a4,a4,0x9
30003e50:	7ff87813          	andi	a6,a6,2047
30003e54:	01d55793          	srli	a5,a0,0x1d
30003e58:	00e7e7b3          	or	a5,a5,a4
30003e5c:	00180713          	addi	a4,a6,1
30003e60:	7fe77713          	andi	a4,a4,2046
30003e64:	01f5d593          	srli	a1,a1,0x1f
30003e68:	00351613          	slli	a2,a0,0x3
30003e6c:	0e070063          	beqz	a4,30003f4c <__truncdfsf2+0x108>
30003e70:	c8080693          	addi	a3,a6,-896
30003e74:	0fe00713          	li	a4,254
30003e78:	14d74663          	blt	a4,a3,30003fc4 <__truncdfsf2+0x180>
30003e7c:	0ad04463          	bgtz	a3,30003f24 <__truncdfsf2+0xe0>
30003e80:	fe900713          	li	a4,-23
30003e84:	14e6c463          	blt	a3,a4,30003fcc <__truncdfsf2+0x188>
30003e88:	00800537          	lui	a0,0x800
30003e8c:	01e00713          	li	a4,30
30003e90:	00a7e533          	or	a0,a5,a0
30003e94:	40d70733          	sub	a4,a4,a3
30003e98:	01f00793          	li	a5,31
30003e9c:	04e7c663          	blt	a5,a4,30003ee8 <__truncdfsf2+0xa4>
30003ea0:	c8280813          	addi	a6,a6,-894
30003ea4:	00e65733          	srl	a4,a2,a4
30003ea8:	01061633          	sll	a2,a2,a6
30003eac:	00c03633          	snez	a2,a2
30003eb0:	01051533          	sll	a0,a0,a6
30003eb4:	00a66633          	or	a2,a2,a0
30003eb8:	00c76733          	or	a4,a4,a2
30003ebc:	00777793          	andi	a5,a4,7
30003ec0:	0a079663          	bnez	a5,30003f6c <__truncdfsf2+0x128>
30003ec4:	00375793          	srli	a5,a4,0x3
30003ec8:	00000693          	li	a3,0
30003ecc:	00979793          	slli	a5,a5,0x9
30003ed0:	0097d793          	srli	a5,a5,0x9
30003ed4:	01769693          	slli	a3,a3,0x17
30003ed8:	00f6e6b3          	or	a3,a3,a5
30003edc:	01f59513          	slli	a0,a1,0x1f
30003ee0:	00a6e533          	or	a0,a3,a0
30003ee4:	00008067          	ret
30003ee8:	ffe00793          	li	a5,-2
30003eec:	40d787b3          	sub	a5,a5,a3
30003ef0:	02000893          	li	a7,32
30003ef4:	00f557b3          	srl	a5,a0,a5
30003ef8:	00000693          	li	a3,0
30003efc:	01170663          	beq	a4,a7,30003f08 <__truncdfsf2+0xc4>
30003f00:	ca280813          	addi	a6,a6,-862
30003f04:	010516b3          	sll	a3,a0,a6
30003f08:	00c6e6b3          	or	a3,a3,a2
30003f0c:	00d036b3          	snez	a3,a3
30003f10:	00d7e7b3          	or	a5,a5,a3
30003f14:	0077f713          	andi	a4,a5,7
30003f18:	06071463          	bnez	a4,30003f80 <__truncdfsf2+0x13c>
30003f1c:	0037d793          	srli	a5,a5,0x3
30003f20:	fa9ff06f          	j	30003ec8 <__truncdfsf2+0x84>
30003f24:	00651713          	slli	a4,a0,0x6
30003f28:	00379793          	slli	a5,a5,0x3
30003f2c:	00e03733          	snez	a4,a4
30003f30:	00f76733          	or	a4,a4,a5
30003f34:	01d65613          	srli	a2,a2,0x1d
30003f38:	00c76733          	or	a4,a4,a2
30003f3c:	00777793          	andi	a5,a4,7
30003f40:	04079a63          	bnez	a5,30003f94 <__truncdfsf2+0x150>
30003f44:	00375793          	srli	a5,a4,0x3
30003f48:	f85ff06f          	j	30003ecc <__truncdfsf2+0x88>
30003f4c:	08080063          	beqz	a6,30003fcc <__truncdfsf2+0x188>
30003f50:	00c7e7b3          	or	a5,a5,a2
30003f54:	0ff00693          	li	a3,255
30003f58:	f6078ae3          	beqz	a5,30003ecc <__truncdfsf2+0x88>
30003f5c:	00000593          	li	a1,0
30003f60:	0ff00693          	li	a3,255
30003f64:	004007b7          	lui	a5,0x400
30003f68:	f65ff06f          	j	30003ecc <__truncdfsf2+0x88>
30003f6c:	00f77793          	andi	a5,a4,15
30003f70:	00400693          	li	a3,4
30003f74:	f4d788e3          	beq	a5,a3,30003ec4 <__truncdfsf2+0x80>
30003f78:	00000693          	li	a3,0
30003f7c:	0280006f          	j	30003fa4 <__truncdfsf2+0x160>
30003f80:	00f7f713          	andi	a4,a5,15
30003f84:	00400693          	li	a3,4
30003f88:	f8d70ae3          	beq	a4,a3,30003f1c <__truncdfsf2+0xd8>
30003f8c:	00478793          	addi	a5,a5,4 # 400004 <__stack_size+0x3ff004>
30003f90:	f8dff06f          	j	30003f1c <__truncdfsf2+0xd8>
30003f94:	00f77613          	andi	a2,a4,15
30003f98:	00400513          	li	a0,4
30003f9c:	00375793          	srli	a5,a4,0x3
30003fa0:	f2a606e3          	beq	a2,a0,30003ecc <__truncdfsf2+0x88>
30003fa4:	00470713          	addi	a4,a4,4 # 80004 <__stack_size+0x7f004>
30003fa8:	04000637          	lui	a2,0x4000
30003fac:	00c77633          	and	a2,a4,a2
30003fb0:	00375793          	srli	a5,a4,0x3
30003fb4:	f0060ce3          	beqz	a2,30003ecc <__truncdfsf2+0x88>
30003fb8:	00168693          	addi	a3,a3,1 # 4000001 <__stack_size+0x3fff001>
30003fbc:	00000793          	li	a5,0
30003fc0:	f0dff06f          	j	30003ecc <__truncdfsf2+0x88>
30003fc4:	0ff00693          	li	a3,255
30003fc8:	ff5ff06f          	j	30003fbc <__truncdfsf2+0x178>
30003fcc:	00000693          	li	a3,0
30003fd0:	fedff06f          	j	30003fbc <__truncdfsf2+0x178>

30003fd4 <__clzsi2>:
30003fd4:	000107b7          	lui	a5,0x10
30003fd8:	02f57a63          	bgeu	a0,a5,3000400c <__clzsi2+0x38>
30003fdc:	10053793          	sltiu	a5,a0,256
30003fe0:	0017c793          	xori	a5,a5,1
30003fe4:	00379793          	slli	a5,a5,0x3
30003fe8:	30007737          	lui	a4,0x30007
30003fec:	02000693          	li	a3,32
30003ff0:	40f686b3          	sub	a3,a3,a5
30003ff4:	00f55533          	srl	a0,a0,a5
30003ff8:	1f870793          	addi	a5,a4,504 # 300071f8 <__clz_tab>
30003ffc:	00a787b3          	add	a5,a5,a0
30004000:	0007c503          	lbu	a0,0(a5) # 10000 <__stack_size+0xf000>
30004004:	40a68533          	sub	a0,a3,a0
30004008:	00008067          	ret
3000400c:	01000737          	lui	a4,0x1000
30004010:	01000793          	li	a5,16
30004014:	fce56ae3          	bltu	a0,a4,30003fe8 <__clzsi2+0x14>
30004018:	01800793          	li	a5,24
3000401c:	fcdff06f          	j	30003fe8 <__clzsi2+0x14>

30004020 <atexit>:
30004020:	00050593          	mv	a1,a0
30004024:	00000693          	li	a3,0
30004028:	00000613          	li	a2,0
3000402c:	00000513          	li	a0,0
30004030:	55c0006f          	j	3000458c <__register_exitproc>

30004034 <exit>:
30004034:	ff010113          	addi	sp,sp,-16
30004038:	00000593          	li	a1,0
3000403c:	00812423          	sw	s0,8(sp)
30004040:	00112623          	sw	ra,12(sp)
30004044:	00050413          	mv	s0,a0
30004048:	5dc000ef          	jal	ra,30004624 <__call_exitprocs>
3000404c:	8101a503          	lw	a0,-2032(gp) # 30007b38 <_global_impure_ptr>
30004050:	03c52783          	lw	a5,60(a0) # 80003c <__stack_size+0x7ff03c>
30004054:	00078463          	beqz	a5,3000405c <exit+0x28>
30004058:	000780e7          	jalr	a5
3000405c:	00040513          	mv	a0,s0
30004060:	548020ef          	jal	ra,300065a8 <_exit>

30004064 <__libc_fini_array>:
30004064:	ff010113          	addi	sp,sp,-16
30004068:	00812423          	sw	s0,8(sp)
3000406c:	300077b7          	lui	a5,0x30007
30004070:	30007437          	lui	s0,0x30007
30004074:	87478793          	addi	a5,a5,-1932 # 30006874 <__fini_array_end>
30004078:	87440413          	addi	s0,s0,-1932 # 30006874 <__fini_array_end>
3000407c:	40f40433          	sub	s0,s0,a5
30004080:	00912223          	sw	s1,4(sp)
30004084:	00112623          	sw	ra,12(sp)
30004088:	40245493          	srai	s1,s0,0x2
3000408c:	02048063          	beqz	s1,300040ac <__libc_fini_array+0x48>
30004090:	ffc40413          	addi	s0,s0,-4
30004094:	00f40433          	add	s0,s0,a5
30004098:	00042783          	lw	a5,0(s0)
3000409c:	fff48493          	addi	s1,s1,-1
300040a0:	ffc40413          	addi	s0,s0,-4
300040a4:	000780e7          	jalr	a5
300040a8:	fe0498e3          	bnez	s1,30004098 <__libc_fini_array+0x34>
300040ac:	00c12083          	lw	ra,12(sp)
300040b0:	00812403          	lw	s0,8(sp)
300040b4:	00412483          	lw	s1,4(sp)
300040b8:	01010113          	addi	sp,sp,16
300040bc:	00008067          	ret

300040c0 <__libc_init_array>:
300040c0:	ff010113          	addi	sp,sp,-16
300040c4:	00812423          	sw	s0,8(sp)
300040c8:	300077b7          	lui	a5,0x30007
300040cc:	30007437          	lui	s0,0x30007
300040d0:	01212023          	sw	s2,0(sp)
300040d4:	87078793          	addi	a5,a5,-1936 # 30006870 <_eitcm>
300040d8:	87040713          	addi	a4,s0,-1936 # 30006870 <_eitcm>
300040dc:	00112623          	sw	ra,12(sp)
300040e0:	00912223          	sw	s1,4(sp)
300040e4:	40e78933          	sub	s2,a5,a4
300040e8:	02e78263          	beq	a5,a4,3000410c <__libc_init_array+0x4c>
300040ec:	40295913          	srai	s2,s2,0x2
300040f0:	87040413          	addi	s0,s0,-1936
300040f4:	00000493          	li	s1,0
300040f8:	00042783          	lw	a5,0(s0)
300040fc:	00148493          	addi	s1,s1,1
30004100:	00440413          	addi	s0,s0,4
30004104:	000780e7          	jalr	a5
30004108:	ff24e8e3          	bltu	s1,s2,300040f8 <__libc_init_array+0x38>
3000410c:	30007437          	lui	s0,0x30007
30004110:	300077b7          	lui	a5,0x30007
30004114:	87478793          	addi	a5,a5,-1932 # 30006874 <__fini_array_end>
30004118:	87040713          	addi	a4,s0,-1936 # 30006870 <_eitcm>
3000411c:	40e78933          	sub	s2,a5,a4
30004120:	40295913          	srai	s2,s2,0x2
30004124:	02e78063          	beq	a5,a4,30004144 <__libc_init_array+0x84>
30004128:	87040413          	addi	s0,s0,-1936
3000412c:	00000493          	li	s1,0
30004130:	00042783          	lw	a5,0(s0)
30004134:	00148493          	addi	s1,s1,1
30004138:	00440413          	addi	s0,s0,4
3000413c:	000780e7          	jalr	a5
30004140:	ff24e8e3          	bltu	s1,s2,30004130 <__libc_init_array+0x70>
30004144:	00c12083          	lw	ra,12(sp)
30004148:	00812403          	lw	s0,8(sp)
3000414c:	00412483          	lw	s1,4(sp)
30004150:	00012903          	lw	s2,0(sp)
30004154:	01010113          	addi	sp,sp,16
30004158:	00008067          	ret

3000415c <_putchar_r>:
3000415c:	00852603          	lw	a2,8(a0)
30004160:	01c0006f          	j	3000417c <_putc_r>

30004164 <putchar>:
30004164:	300087b7          	lui	a5,0x30008
30004168:	b2c7a783          	lw	a5,-1236(a5) # 30007b2c <_impure_ptr>
3000416c:	00050593          	mv	a1,a0
30004170:	0087a603          	lw	a2,8(a5)
30004174:	00078513          	mv	a0,a5
30004178:	0040006f          	j	3000417c <_putc_r>

3000417c <_putc_r>:
3000417c:	fe010113          	addi	sp,sp,-32
30004180:	01212c23          	sw	s2,24(sp)
30004184:	00112e23          	sw	ra,28(sp)
30004188:	00050913          	mv	s2,a0
3000418c:	00050663          	beqz	a0,30004198 <_putc_r+0x1c>
30004190:	03852783          	lw	a5,56(a0)
30004194:	04078663          	beqz	a5,300041e0 <_putc_r+0x64>
30004198:	00862783          	lw	a5,8(a2) # 4000008 <__stack_size+0x3fff008>
3000419c:	fff78793          	addi	a5,a5,-1
300041a0:	00f62423          	sw	a5,8(a2)
300041a4:	0007dc63          	bgez	a5,300041bc <_putc_r+0x40>
300041a8:	01862703          	lw	a4,24(a2)
300041ac:	04e7c663          	blt	a5,a4,300041f8 <_putc_r+0x7c>
300041b0:	0ff5f793          	zext.b	a5,a1
300041b4:	00a00713          	li	a4,10
300041b8:	04e78063          	beq	a5,a4,300041f8 <_putc_r+0x7c>
300041bc:	00062783          	lw	a5,0(a2)
300041c0:	0ff5f513          	zext.b	a0,a1
300041c4:	00178713          	addi	a4,a5,1
300041c8:	00e62023          	sw	a4,0(a2)
300041cc:	00b78023          	sb	a1,0(a5)
300041d0:	01c12083          	lw	ra,28(sp)
300041d4:	01812903          	lw	s2,24(sp)
300041d8:	02010113          	addi	sp,sp,32
300041dc:	00008067          	ret
300041e0:	00c12623          	sw	a2,12(sp)
300041e4:	00b12423          	sw	a1,8(sp)
300041e8:	3d1000ef          	jal	ra,30004db8 <__sinit>
300041ec:	00c12603          	lw	a2,12(sp)
300041f0:	00812583          	lw	a1,8(sp)
300041f4:	fa5ff06f          	j	30004198 <_putc_r+0x1c>
300041f8:	01c12083          	lw	ra,28(sp)
300041fc:	00090513          	mv	a0,s2
30004200:	01812903          	lw	s2,24(sp)
30004204:	02010113          	addi	sp,sp,32
30004208:	0b40006f          	j	300042bc <__swbuf_r>

3000420c <putc>:
3000420c:	ff010113          	addi	sp,sp,-16
30004210:	300087b7          	lui	a5,0x30008
30004214:	01212023          	sw	s2,0(sp)
30004218:	b2c7a903          	lw	s2,-1236(a5) # 30007b2c <_impure_ptr>
3000421c:	00812423          	sw	s0,8(sp)
30004220:	00912223          	sw	s1,4(sp)
30004224:	00112623          	sw	ra,12(sp)
30004228:	00050493          	mv	s1,a0
3000422c:	00058413          	mv	s0,a1
30004230:	00090663          	beqz	s2,3000423c <putc+0x30>
30004234:	03892783          	lw	a5,56(s2)
30004238:	04078a63          	beqz	a5,3000428c <putc+0x80>
3000423c:	00842783          	lw	a5,8(s0)
30004240:	fff78793          	addi	a5,a5,-1
30004244:	00f42423          	sw	a5,8(s0)
30004248:	0007dc63          	bgez	a5,30004260 <putc+0x54>
3000424c:	01842703          	lw	a4,24(s0)
30004250:	04e7c463          	blt	a5,a4,30004298 <putc+0x8c>
30004254:	0ff4f793          	zext.b	a5,s1
30004258:	00a00713          	li	a4,10
3000425c:	02e78e63          	beq	a5,a4,30004298 <putc+0x8c>
30004260:	00042783          	lw	a5,0(s0)
30004264:	0ff4f513          	zext.b	a0,s1
30004268:	00178713          	addi	a4,a5,1
3000426c:	00e42023          	sw	a4,0(s0)
30004270:	00978023          	sb	s1,0(a5)
30004274:	00c12083          	lw	ra,12(sp)
30004278:	00812403          	lw	s0,8(sp)
3000427c:	00412483          	lw	s1,4(sp)
30004280:	00012903          	lw	s2,0(sp)
30004284:	01010113          	addi	sp,sp,16
30004288:	00008067          	ret
3000428c:	00090513          	mv	a0,s2
30004290:	329000ef          	jal	ra,30004db8 <__sinit>
30004294:	fa9ff06f          	j	3000423c <putc+0x30>
30004298:	00040613          	mv	a2,s0
3000429c:	00812403          	lw	s0,8(sp)
300042a0:	00c12083          	lw	ra,12(sp)
300042a4:	00048593          	mv	a1,s1
300042a8:	00090513          	mv	a0,s2
300042ac:	00412483          	lw	s1,4(sp)
300042b0:	00012903          	lw	s2,0(sp)
300042b4:	01010113          	addi	sp,sp,16
300042b8:	0040006f          	j	300042bc <__swbuf_r>

300042bc <__swbuf_r>:
300042bc:	fe010113          	addi	sp,sp,-32
300042c0:	00812c23          	sw	s0,24(sp)
300042c4:	00912a23          	sw	s1,20(sp)
300042c8:	01212823          	sw	s2,16(sp)
300042cc:	00112e23          	sw	ra,28(sp)
300042d0:	01312623          	sw	s3,12(sp)
300042d4:	00050913          	mv	s2,a0
300042d8:	00058493          	mv	s1,a1
300042dc:	00060413          	mv	s0,a2
300042e0:	00050663          	beqz	a0,300042ec <__swbuf_r+0x30>
300042e4:	03852783          	lw	a5,56(a0)
300042e8:	14078063          	beqz	a5,30004428 <__swbuf_r+0x16c>
300042ec:	01842783          	lw	a5,24(s0)
300042f0:	00c41703          	lh	a4,12(s0)
300042f4:	00f42423          	sw	a5,8(s0)
300042f8:	00877793          	andi	a5,a4,8
300042fc:	08078263          	beqz	a5,30004380 <__swbuf_r+0xc4>
30004300:	01042783          	lw	a5,16(s0)
30004304:	06078e63          	beqz	a5,30004380 <__swbuf_r+0xc4>
30004308:	01271693          	slli	a3,a4,0x12
3000430c:	0ff4f993          	zext.b	s3,s1
30004310:	0ff4f493          	zext.b	s1,s1
30004314:	0806da63          	bgez	a3,300043a8 <__swbuf_r+0xec>
30004318:	00042703          	lw	a4,0(s0)
3000431c:	01442683          	lw	a3,20(s0)
30004320:	40f707b3          	sub	a5,a4,a5
30004324:	0ad7da63          	bge	a5,a3,300043d8 <__swbuf_r+0x11c>
30004328:	00842683          	lw	a3,8(s0)
3000432c:	00170613          	addi	a2,a4,1 # 1000001 <__stack_size+0xfff001>
30004330:	00c42023          	sw	a2,0(s0)
30004334:	fff68693          	addi	a3,a3,-1
30004338:	00d42423          	sw	a3,8(s0)
3000433c:	01370023          	sb	s3,0(a4)
30004340:	01442703          	lw	a4,20(s0)
30004344:	00178793          	addi	a5,a5,1
30004348:	0cf70463          	beq	a4,a5,30004410 <__swbuf_r+0x154>
3000434c:	00c45783          	lhu	a5,12(s0)
30004350:	0017f793          	andi	a5,a5,1
30004354:	00078663          	beqz	a5,30004360 <__swbuf_r+0xa4>
30004358:	00a00793          	li	a5,10
3000435c:	0af48a63          	beq	s1,a5,30004410 <__swbuf_r+0x154>
30004360:	01c12083          	lw	ra,28(sp)
30004364:	01812403          	lw	s0,24(sp)
30004368:	01012903          	lw	s2,16(sp)
3000436c:	00c12983          	lw	s3,12(sp)
30004370:	00048513          	mv	a0,s1
30004374:	01412483          	lw	s1,20(sp)
30004378:	02010113          	addi	sp,sp,32
3000437c:	00008067          	ret
30004380:	00040593          	mv	a1,s0
30004384:	00090513          	mv	a0,s2
30004388:	0c0000ef          	jal	ra,30004448 <__swsetup_r>
3000438c:	08051a63          	bnez	a0,30004420 <__swbuf_r+0x164>
30004390:	00c41703          	lh	a4,12(s0)
30004394:	0ff4f993          	zext.b	s3,s1
30004398:	01042783          	lw	a5,16(s0)
3000439c:	01271693          	slli	a3,a4,0x12
300043a0:	0ff4f493          	zext.b	s1,s1
300043a4:	f606cae3          	bltz	a3,30004318 <__swbuf_r+0x5c>
300043a8:	06442683          	lw	a3,100(s0)
300043ac:	00002637          	lui	a2,0x2
300043b0:	00c76733          	or	a4,a4,a2
300043b4:	ffffe637          	lui	a2,0xffffe
300043b8:	fff60613          	addi	a2,a2,-1 # ffffdfff <_sp+0xcfefdfff>
300043bc:	00c6f6b3          	and	a3,a3,a2
300043c0:	00e41623          	sh	a4,12(s0)
300043c4:	00042703          	lw	a4,0(s0)
300043c8:	06d42223          	sw	a3,100(s0)
300043cc:	01442683          	lw	a3,20(s0)
300043d0:	40f707b3          	sub	a5,a4,a5
300043d4:	f4d7cae3          	blt	a5,a3,30004328 <__swbuf_r+0x6c>
300043d8:	00040593          	mv	a1,s0
300043dc:	00090513          	mv	a0,s2
300043e0:	5b0000ef          	jal	ra,30004990 <_fflush_r>
300043e4:	02051e63          	bnez	a0,30004420 <__swbuf_r+0x164>
300043e8:	00042703          	lw	a4,0(s0)
300043ec:	00842683          	lw	a3,8(s0)
300043f0:	00100793          	li	a5,1
300043f4:	00170613          	addi	a2,a4,1
300043f8:	fff68693          	addi	a3,a3,-1
300043fc:	00c42023          	sw	a2,0(s0)
30004400:	00d42423          	sw	a3,8(s0)
30004404:	01370023          	sb	s3,0(a4)
30004408:	01442703          	lw	a4,20(s0)
3000440c:	f4f710e3          	bne	a4,a5,3000434c <__swbuf_r+0x90>
30004410:	00040593          	mv	a1,s0
30004414:	00090513          	mv	a0,s2
30004418:	578000ef          	jal	ra,30004990 <_fflush_r>
3000441c:	f40502e3          	beqz	a0,30004360 <__swbuf_r+0xa4>
30004420:	fff00493          	li	s1,-1
30004424:	f3dff06f          	j	30004360 <__swbuf_r+0xa4>
30004428:	191000ef          	jal	ra,30004db8 <__sinit>
3000442c:	ec1ff06f          	j	300042ec <__swbuf_r+0x30>

30004430 <__swbuf>:
30004430:	30008737          	lui	a4,0x30008
30004434:	00050793          	mv	a5,a0
30004438:	b2c72503          	lw	a0,-1236(a4) # 30007b2c <_impure_ptr>
3000443c:	00058613          	mv	a2,a1
30004440:	00078593          	mv	a1,a5
30004444:	e79ff06f          	j	300042bc <__swbuf_r>

30004448 <__swsetup_r>:
30004448:	300087b7          	lui	a5,0x30008
3000444c:	b2c7a783          	lw	a5,-1236(a5) # 30007b2c <_impure_ptr>
30004450:	ff010113          	addi	sp,sp,-16
30004454:	00812423          	sw	s0,8(sp)
30004458:	00912223          	sw	s1,4(sp)
3000445c:	00112623          	sw	ra,12(sp)
30004460:	00050493          	mv	s1,a0
30004464:	00058413          	mv	s0,a1
30004468:	00078663          	beqz	a5,30004474 <__swsetup_r+0x2c>
3000446c:	0387a703          	lw	a4,56(a5)
30004470:	08070063          	beqz	a4,300044f0 <__swsetup_r+0xa8>
30004474:	00c41783          	lh	a5,12(s0)
30004478:	0087f713          	andi	a4,a5,8
3000447c:	08070463          	beqz	a4,30004504 <__swsetup_r+0xbc>
30004480:	01042703          	lw	a4,16(s0)
30004484:	0a070063          	beqz	a4,30004524 <__swsetup_r+0xdc>
30004488:	0017f693          	andi	a3,a5,1
3000448c:	02068863          	beqz	a3,300044bc <__swsetup_r+0x74>
30004490:	01442683          	lw	a3,20(s0)
30004494:	00042423          	sw	zero,8(s0)
30004498:	00000513          	li	a0,0
3000449c:	40d006b3          	neg	a3,a3
300044a0:	00d42c23          	sw	a3,24(s0)
300044a4:	02070a63          	beqz	a4,300044d8 <__swsetup_r+0x90>
300044a8:	00c12083          	lw	ra,12(sp)
300044ac:	00812403          	lw	s0,8(sp)
300044b0:	00412483          	lw	s1,4(sp)
300044b4:	01010113          	addi	sp,sp,16
300044b8:	00008067          	ret
300044bc:	0027f693          	andi	a3,a5,2
300044c0:	00000613          	li	a2,0
300044c4:	00069463          	bnez	a3,300044cc <__swsetup_r+0x84>
300044c8:	01442603          	lw	a2,20(s0)
300044cc:	00c42423          	sw	a2,8(s0)
300044d0:	00000513          	li	a0,0
300044d4:	fc071ae3          	bnez	a4,300044a8 <__swsetup_r+0x60>
300044d8:	0807f713          	andi	a4,a5,128
300044dc:	fc0706e3          	beqz	a4,300044a8 <__swsetup_r+0x60>
300044e0:	0407e793          	ori	a5,a5,64
300044e4:	00f41623          	sh	a5,12(s0)
300044e8:	fff00513          	li	a0,-1
300044ec:	fbdff06f          	j	300044a8 <__swsetup_r+0x60>
300044f0:	00078513          	mv	a0,a5
300044f4:	0c5000ef          	jal	ra,30004db8 <__sinit>
300044f8:	00c41783          	lh	a5,12(s0)
300044fc:	0087f713          	andi	a4,a5,8
30004500:	f80710e3          	bnez	a4,30004480 <__swsetup_r+0x38>
30004504:	0107f713          	andi	a4,a5,16
30004508:	06070a63          	beqz	a4,3000457c <__swsetup_r+0x134>
3000450c:	0047f713          	andi	a4,a5,4
30004510:	02071c63          	bnez	a4,30004548 <__swsetup_r+0x100>
30004514:	01042703          	lw	a4,16(s0)
30004518:	0087e793          	ori	a5,a5,8
3000451c:	00f41623          	sh	a5,12(s0)
30004520:	f60714e3          	bnez	a4,30004488 <__swsetup_r+0x40>
30004524:	2807f693          	andi	a3,a5,640
30004528:	20000613          	li	a2,512
3000452c:	f4c68ee3          	beq	a3,a2,30004488 <__swsetup_r+0x40>
30004530:	00040593          	mv	a1,s0
30004534:	00048513          	mv	a0,s1
30004538:	665000ef          	jal	ra,3000539c <__smakebuf_r>
3000453c:	00c41783          	lh	a5,12(s0)
30004540:	01042703          	lw	a4,16(s0)
30004544:	f45ff06f          	j	30004488 <__swsetup_r+0x40>
30004548:	03042583          	lw	a1,48(s0)
3000454c:	00058e63          	beqz	a1,30004568 <__swsetup_r+0x120>
30004550:	04040713          	addi	a4,s0,64
30004554:	00e58863          	beq	a1,a4,30004564 <__swsetup_r+0x11c>
30004558:	00048513          	mv	a0,s1
3000455c:	1e5000ef          	jal	ra,30004f40 <_free_r>
30004560:	00c41783          	lh	a5,12(s0)
30004564:	02042823          	sw	zero,48(s0)
30004568:	01042703          	lw	a4,16(s0)
3000456c:	fdb7f793          	andi	a5,a5,-37
30004570:	00042223          	sw	zero,4(s0)
30004574:	00e42023          	sw	a4,0(s0)
30004578:	fa1ff06f          	j	30004518 <__swsetup_r+0xd0>
3000457c:	00900713          	li	a4,9
30004580:	00e4a023          	sw	a4,0(s1)
30004584:	0407e793          	ori	a5,a5,64
30004588:	f5dff06f          	j	300044e4 <__swsetup_r+0x9c>

3000458c <__register_exitproc>:
3000458c:	8101a703          	lw	a4,-2032(gp) # 30007b38 <_global_impure_ptr>
30004590:	14872783          	lw	a5,328(a4)
30004594:	04078c63          	beqz	a5,300045ec <__register_exitproc+0x60>
30004598:	0047a703          	lw	a4,4(a5)
3000459c:	01f00813          	li	a6,31
300045a0:	06e84e63          	blt	a6,a4,3000461c <__register_exitproc+0x90>
300045a4:	00271813          	slli	a6,a4,0x2
300045a8:	02050663          	beqz	a0,300045d4 <__register_exitproc+0x48>
300045ac:	01078333          	add	t1,a5,a6
300045b0:	08c32423          	sw	a2,136(t1)
300045b4:	1887a883          	lw	a7,392(a5)
300045b8:	00100613          	li	a2,1
300045bc:	00e61633          	sll	a2,a2,a4
300045c0:	00c8e8b3          	or	a7,a7,a2
300045c4:	1917a423          	sw	a7,392(a5)
300045c8:	10d32423          	sw	a3,264(t1)
300045cc:	00200693          	li	a3,2
300045d0:	02d50463          	beq	a0,a3,300045f8 <__register_exitproc+0x6c>
300045d4:	00170713          	addi	a4,a4,1
300045d8:	00e7a223          	sw	a4,4(a5)
300045dc:	010787b3          	add	a5,a5,a6
300045e0:	00b7a423          	sw	a1,8(a5)
300045e4:	00000513          	li	a0,0
300045e8:	00008067          	ret
300045ec:	14c70793          	addi	a5,a4,332
300045f0:	14f72423          	sw	a5,328(a4)
300045f4:	fa5ff06f          	j	30004598 <__register_exitproc+0xc>
300045f8:	18c7a683          	lw	a3,396(a5)
300045fc:	00170713          	addi	a4,a4,1
30004600:	00e7a223          	sw	a4,4(a5)
30004604:	00c6e6b3          	or	a3,a3,a2
30004608:	18d7a623          	sw	a3,396(a5)
3000460c:	010787b3          	add	a5,a5,a6
30004610:	00b7a423          	sw	a1,8(a5)
30004614:	00000513          	li	a0,0
30004618:	00008067          	ret
3000461c:	fff00513          	li	a0,-1
30004620:	00008067          	ret

30004624 <__call_exitprocs>:
30004624:	fd010113          	addi	sp,sp,-48
30004628:	01412c23          	sw	s4,24(sp)
3000462c:	8101aa03          	lw	s4,-2032(gp) # 30007b38 <_global_impure_ptr>
30004630:	03212023          	sw	s2,32(sp)
30004634:	02112623          	sw	ra,44(sp)
30004638:	148a2903          	lw	s2,328(s4)
3000463c:	02812423          	sw	s0,40(sp)
30004640:	02912223          	sw	s1,36(sp)
30004644:	01312e23          	sw	s3,28(sp)
30004648:	01512a23          	sw	s5,20(sp)
3000464c:	01612823          	sw	s6,16(sp)
30004650:	01712623          	sw	s7,12(sp)
30004654:	01812423          	sw	s8,8(sp)
30004658:	04090063          	beqz	s2,30004698 <__call_exitprocs+0x74>
3000465c:	00050b13          	mv	s6,a0
30004660:	00058b93          	mv	s7,a1
30004664:	00100a93          	li	s5,1
30004668:	fff00993          	li	s3,-1
3000466c:	00492483          	lw	s1,4(s2)
30004670:	fff48413          	addi	s0,s1,-1
30004674:	02044263          	bltz	s0,30004698 <__call_exitprocs+0x74>
30004678:	00249493          	slli	s1,s1,0x2
3000467c:	009904b3          	add	s1,s2,s1
30004680:	040b8463          	beqz	s7,300046c8 <__call_exitprocs+0xa4>
30004684:	1044a783          	lw	a5,260(s1)
30004688:	05778063          	beq	a5,s7,300046c8 <__call_exitprocs+0xa4>
3000468c:	fff40413          	addi	s0,s0,-1
30004690:	ffc48493          	addi	s1,s1,-4
30004694:	ff3416e3          	bne	s0,s3,30004680 <__call_exitprocs+0x5c>
30004698:	02c12083          	lw	ra,44(sp)
3000469c:	02812403          	lw	s0,40(sp)
300046a0:	02412483          	lw	s1,36(sp)
300046a4:	02012903          	lw	s2,32(sp)
300046a8:	01c12983          	lw	s3,28(sp)
300046ac:	01812a03          	lw	s4,24(sp)
300046b0:	01412a83          	lw	s5,20(sp)
300046b4:	01012b03          	lw	s6,16(sp)
300046b8:	00c12b83          	lw	s7,12(sp)
300046bc:	00812c03          	lw	s8,8(sp)
300046c0:	03010113          	addi	sp,sp,48
300046c4:	00008067          	ret
300046c8:	00492783          	lw	a5,4(s2)
300046cc:	0044a683          	lw	a3,4(s1)
300046d0:	fff78793          	addi	a5,a5,-1
300046d4:	04878e63          	beq	a5,s0,30004730 <__call_exitprocs+0x10c>
300046d8:	0004a223          	sw	zero,4(s1)
300046dc:	fa0688e3          	beqz	a3,3000468c <__call_exitprocs+0x68>
300046e0:	18892783          	lw	a5,392(s2)
300046e4:	008a9733          	sll	a4,s5,s0
300046e8:	00492c03          	lw	s8,4(s2)
300046ec:	00f777b3          	and	a5,a4,a5
300046f0:	02079263          	bnez	a5,30004714 <__call_exitprocs+0xf0>
300046f4:	000680e7          	jalr	a3
300046f8:	00492703          	lw	a4,4(s2)
300046fc:	148a2783          	lw	a5,328(s4)
30004700:	01871463          	bne	a4,s8,30004708 <__call_exitprocs+0xe4>
30004704:	f92784e3          	beq	a5,s2,3000468c <__call_exitprocs+0x68>
30004708:	f80788e3          	beqz	a5,30004698 <__call_exitprocs+0x74>
3000470c:	00078913          	mv	s2,a5
30004710:	f5dff06f          	j	3000466c <__call_exitprocs+0x48>
30004714:	18c92783          	lw	a5,396(s2)
30004718:	0844a583          	lw	a1,132(s1)
3000471c:	00f77733          	and	a4,a4,a5
30004720:	00071c63          	bnez	a4,30004738 <__call_exitprocs+0x114>
30004724:	000b0513          	mv	a0,s6
30004728:	000680e7          	jalr	a3
3000472c:	fcdff06f          	j	300046f8 <__call_exitprocs+0xd4>
30004730:	00892223          	sw	s0,4(s2)
30004734:	fa9ff06f          	j	300046dc <__call_exitprocs+0xb8>
30004738:	00058513          	mv	a0,a1
3000473c:	000680e7          	jalr	a3
30004740:	fb9ff06f          	j	300046f8 <__call_exitprocs+0xd4>

30004744 <__sflush_r>:
30004744:	00c59783          	lh	a5,12(a1) # 400000c <__stack_size+0x3fff00c>
30004748:	fe010113          	addi	sp,sp,-32
3000474c:	00812c23          	sw	s0,24(sp)
30004750:	01312623          	sw	s3,12(sp)
30004754:	00112e23          	sw	ra,28(sp)
30004758:	00912a23          	sw	s1,20(sp)
3000475c:	01212823          	sw	s2,16(sp)
30004760:	0087f713          	andi	a4,a5,8
30004764:	00058413          	mv	s0,a1
30004768:	00050993          	mv	s3,a0
3000476c:	12071263          	bnez	a4,30004890 <__sflush_r+0x14c>
30004770:	00001737          	lui	a4,0x1
30004774:	80070713          	addi	a4,a4,-2048 # 800 <__stack_size-0x800>
30004778:	0045a683          	lw	a3,4(a1)
3000477c:	00e7e733          	or	a4,a5,a4
30004780:	00e59623          	sh	a4,12(a1)
30004784:	18d05863          	blez	a3,30004914 <__sflush_r+0x1d0>
30004788:	02842803          	lw	a6,40(s0)
3000478c:	0e080263          	beqz	a6,30004870 <__sflush_r+0x12c>
30004790:	00c7d793          	srli	a5,a5,0xc
30004794:	0009a483          	lw	s1,0(s3)
30004798:	0017f793          	andi	a5,a5,1
3000479c:	0009a023          	sw	zero,0(s3)
300047a0:	01c42583          	lw	a1,28(s0)
300047a4:	18079063          	bnez	a5,30004924 <__sflush_r+0x1e0>
300047a8:	00000613          	li	a2,0
300047ac:	00100693          	li	a3,1
300047b0:	00098513          	mv	a0,s3
300047b4:	000800e7          	jalr	a6
300047b8:	fff00793          	li	a5,-1
300047bc:	00050613          	mv	a2,a0
300047c0:	1af50063          	beq	a0,a5,30004960 <__sflush_r+0x21c>
300047c4:	00c41703          	lh	a4,12(s0)
300047c8:	02842803          	lw	a6,40(s0)
300047cc:	01c42583          	lw	a1,28(s0)
300047d0:	00477713          	andi	a4,a4,4
300047d4:	00070e63          	beqz	a4,300047f0 <__sflush_r+0xac>
300047d8:	00442703          	lw	a4,4(s0)
300047dc:	03042783          	lw	a5,48(s0)
300047e0:	40e60633          	sub	a2,a2,a4
300047e4:	00078663          	beqz	a5,300047f0 <__sflush_r+0xac>
300047e8:	03c42783          	lw	a5,60(s0)
300047ec:	40f60633          	sub	a2,a2,a5
300047f0:	00000693          	li	a3,0
300047f4:	00098513          	mv	a0,s3
300047f8:	000800e7          	jalr	a6
300047fc:	fff00793          	li	a5,-1
30004800:	12f51663          	bne	a0,a5,3000492c <__sflush_r+0x1e8>
30004804:	0009a683          	lw	a3,0(s3)
30004808:	01d00793          	li	a5,29
3000480c:	0cd7ee63          	bltu	a5,a3,300048e8 <__sflush_r+0x1a4>
30004810:	dfc00737          	lui	a4,0xdfc00
30004814:	ffe70713          	addi	a4,a4,-2 # dfbffffe <_sp+0xafaffffe>
30004818:	40d75733          	sra	a4,a4,a3
3000481c:	00177713          	andi	a4,a4,1
30004820:	00c41783          	lh	a5,12(s0)
30004824:	0c071463          	bnez	a4,300048ec <__sflush_r+0x1a8>
30004828:	01042603          	lw	a2,16(s0)
3000482c:	fffff737          	lui	a4,0xfffff
30004830:	7ff70713          	addi	a4,a4,2047 # fffff7ff <_sp+0xcfeff7ff>
30004834:	00e7f733          	and	a4,a5,a4
30004838:	00c7d793          	srli	a5,a5,0xc
3000483c:	00e41623          	sh	a4,12(s0)
30004840:	00042223          	sw	zero,4(s0)
30004844:	00c42023          	sw	a2,0(s0)
30004848:	0017f793          	andi	a5,a5,1
3000484c:	12079c63          	bnez	a5,30004984 <__sflush_r+0x240>
30004850:	03042583          	lw	a1,48(s0)
30004854:	0099a023          	sw	s1,0(s3)
30004858:	00058c63          	beqz	a1,30004870 <__sflush_r+0x12c>
3000485c:	04040793          	addi	a5,s0,64
30004860:	00f58663          	beq	a1,a5,3000486c <__sflush_r+0x128>
30004864:	00098513          	mv	a0,s3
30004868:	6d8000ef          	jal	ra,30004f40 <_free_r>
3000486c:	02042823          	sw	zero,48(s0)
30004870:	00000513          	li	a0,0
30004874:	01c12083          	lw	ra,28(sp)
30004878:	01812403          	lw	s0,24(sp)
3000487c:	01412483          	lw	s1,20(sp)
30004880:	01012903          	lw	s2,16(sp)
30004884:	00c12983          	lw	s3,12(sp)
30004888:	02010113          	addi	sp,sp,32
3000488c:	00008067          	ret
30004890:	0105a903          	lw	s2,16(a1)
30004894:	fc090ee3          	beqz	s2,30004870 <__sflush_r+0x12c>
30004898:	0005a483          	lw	s1,0(a1)
3000489c:	0037f793          	andi	a5,a5,3
300048a0:	0125a023          	sw	s2,0(a1)
300048a4:	412484b3          	sub	s1,s1,s2
300048a8:	00000713          	li	a4,0
300048ac:	00079463          	bnez	a5,300048b4 <__sflush_r+0x170>
300048b0:	0145a703          	lw	a4,20(a1)
300048b4:	00e42423          	sw	a4,8(s0)
300048b8:	00904863          	bgtz	s1,300048c8 <__sflush_r+0x184>
300048bc:	fb5ff06f          	j	30004870 <__sflush_r+0x12c>
300048c0:	00a90933          	add	s2,s2,a0
300048c4:	fa9056e3          	blez	s1,30004870 <__sflush_r+0x12c>
300048c8:	02442783          	lw	a5,36(s0)
300048cc:	01c42583          	lw	a1,28(s0)
300048d0:	00048693          	mv	a3,s1
300048d4:	00090613          	mv	a2,s2
300048d8:	00098513          	mv	a0,s3
300048dc:	000780e7          	jalr	a5
300048e0:	40a484b3          	sub	s1,s1,a0
300048e4:	fca04ee3          	bgtz	a0,300048c0 <__sflush_r+0x17c>
300048e8:	00c41783          	lh	a5,12(s0)
300048ec:	0407e793          	ori	a5,a5,64
300048f0:	01c12083          	lw	ra,28(sp)
300048f4:	00f41623          	sh	a5,12(s0)
300048f8:	01812403          	lw	s0,24(sp)
300048fc:	01412483          	lw	s1,20(sp)
30004900:	01012903          	lw	s2,16(sp)
30004904:	00c12983          	lw	s3,12(sp)
30004908:	fff00513          	li	a0,-1
3000490c:	02010113          	addi	sp,sp,32
30004910:	00008067          	ret
30004914:	03c5a683          	lw	a3,60(a1)
30004918:	e6d048e3          	bgtz	a3,30004788 <__sflush_r+0x44>
3000491c:	00000513          	li	a0,0
30004920:	f55ff06f          	j	30004874 <__sflush_r+0x130>
30004924:	05042603          	lw	a2,80(s0)
30004928:	ea9ff06f          	j	300047d0 <__sflush_r+0x8c>
3000492c:	00c41783          	lh	a5,12(s0)
30004930:	01042683          	lw	a3,16(s0)
30004934:	fffff737          	lui	a4,0xfffff
30004938:	7ff70713          	addi	a4,a4,2047 # fffff7ff <_sp+0xcfeff7ff>
3000493c:	00e7f733          	and	a4,a5,a4
30004940:	00c7d793          	srli	a5,a5,0xc
30004944:	00e41623          	sh	a4,12(s0)
30004948:	00042223          	sw	zero,4(s0)
3000494c:	00d42023          	sw	a3,0(s0)
30004950:	0017f793          	andi	a5,a5,1
30004954:	ee078ee3          	beqz	a5,30004850 <__sflush_r+0x10c>
30004958:	04a42823          	sw	a0,80(s0)
3000495c:	ef5ff06f          	j	30004850 <__sflush_r+0x10c>
30004960:	0009a783          	lw	a5,0(s3)
30004964:	e60780e3          	beqz	a5,300047c4 <__sflush_r+0x80>
30004968:	01d00713          	li	a4,29
3000496c:	00e78663          	beq	a5,a4,30004978 <__sflush_r+0x234>
30004970:	01600713          	li	a4,22
30004974:	f6e79ae3          	bne	a5,a4,300048e8 <__sflush_r+0x1a4>
30004978:	0099a023          	sw	s1,0(s3)
3000497c:	00000513          	li	a0,0
30004980:	ef5ff06f          	j	30004874 <__sflush_r+0x130>
30004984:	ec0696e3          	bnez	a3,30004850 <__sflush_r+0x10c>
30004988:	04a42823          	sw	a0,80(s0)
3000498c:	ec5ff06f          	j	30004850 <__sflush_r+0x10c>

30004990 <_fflush_r>:
30004990:	fe010113          	addi	sp,sp,-32
30004994:	00812c23          	sw	s0,24(sp)
30004998:	00112e23          	sw	ra,28(sp)
3000499c:	00050413          	mv	s0,a0
300049a0:	00050663          	beqz	a0,300049ac <_fflush_r+0x1c>
300049a4:	03852783          	lw	a5,56(a0)
300049a8:	02078063          	beqz	a5,300049c8 <_fflush_r+0x38>
300049ac:	00c59783          	lh	a5,12(a1)
300049b0:	02079663          	bnez	a5,300049dc <_fflush_r+0x4c>
300049b4:	01c12083          	lw	ra,28(sp)
300049b8:	01812403          	lw	s0,24(sp)
300049bc:	00000513          	li	a0,0
300049c0:	02010113          	addi	sp,sp,32
300049c4:	00008067          	ret
300049c8:	00b12623          	sw	a1,12(sp)
300049cc:	3ec000ef          	jal	ra,30004db8 <__sinit>
300049d0:	00c12583          	lw	a1,12(sp)
300049d4:	00c59783          	lh	a5,12(a1)
300049d8:	fc078ee3          	beqz	a5,300049b4 <_fflush_r+0x24>
300049dc:	00040513          	mv	a0,s0
300049e0:	01812403          	lw	s0,24(sp)
300049e4:	01c12083          	lw	ra,28(sp)
300049e8:	02010113          	addi	sp,sp,32
300049ec:	d59ff06f          	j	30004744 <__sflush_r>

300049f0 <fflush>:
300049f0:	06050863          	beqz	a0,30004a60 <fflush+0x70>
300049f4:	fe010113          	addi	sp,sp,-32
300049f8:	300087b7          	lui	a5,0x30008
300049fc:	00812c23          	sw	s0,24(sp)
30004a00:	00050413          	mv	s0,a0
30004a04:	b2c7a503          	lw	a0,-1236(a5) # 30007b2c <_impure_ptr>
30004a08:	00112e23          	sw	ra,28(sp)
30004a0c:	00050663          	beqz	a0,30004a18 <fflush+0x28>
30004a10:	03852783          	lw	a5,56(a0)
30004a14:	02078a63          	beqz	a5,30004a48 <fflush+0x58>
30004a18:	00c41783          	lh	a5,12(s0)
30004a1c:	00079c63          	bnez	a5,30004a34 <fflush+0x44>
30004a20:	01c12083          	lw	ra,28(sp)
30004a24:	01812403          	lw	s0,24(sp)
30004a28:	00000513          	li	a0,0
30004a2c:	02010113          	addi	sp,sp,32
30004a30:	00008067          	ret
30004a34:	00040593          	mv	a1,s0
30004a38:	01812403          	lw	s0,24(sp)
30004a3c:	01c12083          	lw	ra,28(sp)
30004a40:	02010113          	addi	sp,sp,32
30004a44:	d01ff06f          	j	30004744 <__sflush_r>
30004a48:	00a12623          	sw	a0,12(sp)
30004a4c:	36c000ef          	jal	ra,30004db8 <__sinit>
30004a50:	00c41783          	lh	a5,12(s0)
30004a54:	00c12503          	lw	a0,12(sp)
30004a58:	fc0784e3          	beqz	a5,30004a20 <fflush+0x30>
30004a5c:	fd9ff06f          	j	30004a34 <fflush+0x44>
30004a60:	8101a503          	lw	a0,-2032(gp) # 30007b38 <_global_impure_ptr>
30004a64:	300055b7          	lui	a1,0x30005
30004a68:	99058593          	addi	a1,a1,-1648 # 30004990 <_fflush_r>
30004a6c:	07d0006f          	j	300052e8 <_fwalk_reent>

30004a70 <__fp_lock>:
30004a70:	00000513          	li	a0,0
30004a74:	00008067          	ret

30004a78 <_cleanup_r>:
30004a78:	300065b7          	lui	a1,0x30006
30004a7c:	10058593          	addi	a1,a1,256 # 30006100 <_fclose_r>
30004a80:	0690006f          	j	300052e8 <_fwalk_reent>

30004a84 <__fp_unlock>:
30004a84:	00000513          	li	a0,0
30004a88:	00008067          	ret

30004a8c <__sinit.part.0>:
30004a8c:	fe010113          	addi	sp,sp,-32
30004a90:	300057b7          	lui	a5,0x30005
30004a94:	00112e23          	sw	ra,28(sp)
30004a98:	00812c23          	sw	s0,24(sp)
30004a9c:	00912a23          	sw	s1,20(sp)
30004aa0:	01212823          	sw	s2,16(sp)
30004aa4:	01312623          	sw	s3,12(sp)
30004aa8:	01412423          	sw	s4,8(sp)
30004aac:	01512223          	sw	s5,4(sp)
30004ab0:	01612023          	sw	s6,0(sp)
30004ab4:	00452403          	lw	s0,4(a0)
30004ab8:	a7878793          	addi	a5,a5,-1416 # 30004a78 <_cleanup_r>
30004abc:	02f52e23          	sw	a5,60(a0)
30004ac0:	2ec50713          	addi	a4,a0,748
30004ac4:	00300793          	li	a5,3
30004ac8:	2ee52423          	sw	a4,744(a0)
30004acc:	2ef52223          	sw	a5,740(a0)
30004ad0:	2e052023          	sw	zero,736(a0)
30004ad4:	00400793          	li	a5,4
30004ad8:	00050913          	mv	s2,a0
30004adc:	00f42623          	sw	a5,12(s0)
30004ae0:	00800613          	li	a2,8
30004ae4:	00000593          	li	a1,0
30004ae8:	00042023          	sw	zero,0(s0)
30004aec:	00042223          	sw	zero,4(s0)
30004af0:	00042423          	sw	zero,8(s0)
30004af4:	06042223          	sw	zero,100(s0)
30004af8:	00042823          	sw	zero,16(s0)
30004afc:	00042a23          	sw	zero,20(s0)
30004b00:	00042c23          	sw	zero,24(s0)
30004b04:	05c40513          	addi	a0,s0,92
30004b08:	288010ef          	jal	ra,30005d90 <memset>
30004b0c:	30006b37          	lui	s6,0x30006
30004b10:	00892483          	lw	s1,8(s2)
30004b14:	30006ab7          	lui	s5,0x30006
30004b18:	30006a37          	lui	s4,0x30006
30004b1c:	300069b7          	lui	s3,0x30006
30004b20:	ed0b0b13          	addi	s6,s6,-304 # 30005ed0 <__sread>
30004b24:	f34a8a93          	addi	s5,s5,-204 # 30005f34 <__swrite>
30004b28:	fbca0a13          	addi	s4,s4,-68 # 30005fbc <__sseek>
30004b2c:	03498993          	addi	s3,s3,52 # 30006034 <__sclose>
30004b30:	000107b7          	lui	a5,0x10
30004b34:	03642023          	sw	s6,32(s0)
30004b38:	03542223          	sw	s5,36(s0)
30004b3c:	03442423          	sw	s4,40(s0)
30004b40:	03342623          	sw	s3,44(s0)
30004b44:	00842e23          	sw	s0,28(s0)
30004b48:	00978793          	addi	a5,a5,9 # 10009 <__stack_size+0xf009>
30004b4c:	00f4a623          	sw	a5,12(s1)
30004b50:	00800613          	li	a2,8
30004b54:	00000593          	li	a1,0
30004b58:	0004a023          	sw	zero,0(s1)
30004b5c:	0004a223          	sw	zero,4(s1)
30004b60:	0004a423          	sw	zero,8(s1)
30004b64:	0604a223          	sw	zero,100(s1)
30004b68:	0004a823          	sw	zero,16(s1)
30004b6c:	0004aa23          	sw	zero,20(s1)
30004b70:	0004ac23          	sw	zero,24(s1)
30004b74:	05c48513          	addi	a0,s1,92
30004b78:	218010ef          	jal	ra,30005d90 <memset>
30004b7c:	00c92403          	lw	s0,12(s2)
30004b80:	000207b7          	lui	a5,0x20
30004b84:	0364a023          	sw	s6,32(s1)
30004b88:	0354a223          	sw	s5,36(s1)
30004b8c:	0344a423          	sw	s4,40(s1)
30004b90:	0334a623          	sw	s3,44(s1)
30004b94:	0094ae23          	sw	s1,28(s1)
30004b98:	01278793          	addi	a5,a5,18 # 20012 <__stack_size+0x1f012>
30004b9c:	00f42623          	sw	a5,12(s0)
30004ba0:	00042023          	sw	zero,0(s0)
30004ba4:	00042223          	sw	zero,4(s0)
30004ba8:	00042423          	sw	zero,8(s0)
30004bac:	06042223          	sw	zero,100(s0)
30004bb0:	00042823          	sw	zero,16(s0)
30004bb4:	00042a23          	sw	zero,20(s0)
30004bb8:	00042c23          	sw	zero,24(s0)
30004bbc:	05c40513          	addi	a0,s0,92
30004bc0:	00800613          	li	a2,8
30004bc4:	00000593          	li	a1,0
30004bc8:	1c8010ef          	jal	ra,30005d90 <memset>
30004bcc:	01c12083          	lw	ra,28(sp)
30004bd0:	03642023          	sw	s6,32(s0)
30004bd4:	03542223          	sw	s5,36(s0)
30004bd8:	03442423          	sw	s4,40(s0)
30004bdc:	03342623          	sw	s3,44(s0)
30004be0:	00842e23          	sw	s0,28(s0)
30004be4:	01812403          	lw	s0,24(sp)
30004be8:	00100793          	li	a5,1
30004bec:	02f92c23          	sw	a5,56(s2)
30004bf0:	01412483          	lw	s1,20(sp)
30004bf4:	01012903          	lw	s2,16(sp)
30004bf8:	00c12983          	lw	s3,12(sp)
30004bfc:	00812a03          	lw	s4,8(sp)
30004c00:	00412a83          	lw	s5,4(sp)
30004c04:	00012b03          	lw	s6,0(sp)
30004c08:	02010113          	addi	sp,sp,32
30004c0c:	00008067          	ret

30004c10 <__sfmoreglue>:
30004c10:	ff010113          	addi	sp,sp,-16
30004c14:	00912223          	sw	s1,4(sp)
30004c18:	06800793          	li	a5,104
30004c1c:	fff58493          	addi	s1,a1,-1
30004c20:	02f484b3          	mul	s1,s1,a5
30004c24:	01212023          	sw	s2,0(sp)
30004c28:	00058913          	mv	s2,a1
30004c2c:	00812423          	sw	s0,8(sp)
30004c30:	00112623          	sw	ra,12(sp)
30004c34:	07448593          	addi	a1,s1,116
30004c38:	1cd000ef          	jal	ra,30005604 <_malloc_r>
30004c3c:	00050413          	mv	s0,a0
30004c40:	02050063          	beqz	a0,30004c60 <__sfmoreglue+0x50>
30004c44:	00c50513          	addi	a0,a0,12
30004c48:	00042023          	sw	zero,0(s0)
30004c4c:	01242223          	sw	s2,4(s0)
30004c50:	00a42423          	sw	a0,8(s0)
30004c54:	06848613          	addi	a2,s1,104
30004c58:	00000593          	li	a1,0
30004c5c:	134010ef          	jal	ra,30005d90 <memset>
30004c60:	00c12083          	lw	ra,12(sp)
30004c64:	00040513          	mv	a0,s0
30004c68:	00812403          	lw	s0,8(sp)
30004c6c:	00412483          	lw	s1,4(sp)
30004c70:	00012903          	lw	s2,0(sp)
30004c74:	01010113          	addi	sp,sp,16
30004c78:	00008067          	ret

30004c7c <__sfp>:
30004c7c:	fe010113          	addi	sp,sp,-32
30004c80:	01212823          	sw	s2,16(sp)
30004c84:	8101a903          	lw	s2,-2032(gp) # 30007b38 <_global_impure_ptr>
30004c88:	01312623          	sw	s3,12(sp)
30004c8c:	00112e23          	sw	ra,28(sp)
30004c90:	03892783          	lw	a5,56(s2)
30004c94:	00812c23          	sw	s0,24(sp)
30004c98:	00912a23          	sw	s1,20(sp)
30004c9c:	00050993          	mv	s3,a0
30004ca0:	0a078663          	beqz	a5,30004d4c <__sfp+0xd0>
30004ca4:	2e090913          	addi	s2,s2,736
30004ca8:	fff00493          	li	s1,-1
30004cac:	00492783          	lw	a5,4(s2)
30004cb0:	00892403          	lw	s0,8(s2)
30004cb4:	fff78793          	addi	a5,a5,-1
30004cb8:	0007d863          	bgez	a5,30004cc8 <__sfp+0x4c>
30004cbc:	0800006f          	j	30004d3c <__sfp+0xc0>
30004cc0:	06840413          	addi	s0,s0,104
30004cc4:	06978c63          	beq	a5,s1,30004d3c <__sfp+0xc0>
30004cc8:	00c41703          	lh	a4,12(s0)
30004ccc:	fff78793          	addi	a5,a5,-1
30004cd0:	fe0718e3          	bnez	a4,30004cc0 <__sfp+0x44>
30004cd4:	ffff07b7          	lui	a5,0xffff0
30004cd8:	00178793          	addi	a5,a5,1 # ffff0001 <_sp+0xcfef0001>
30004cdc:	00f42623          	sw	a5,12(s0)
30004ce0:	06042223          	sw	zero,100(s0)
30004ce4:	00042023          	sw	zero,0(s0)
30004ce8:	00042423          	sw	zero,8(s0)
30004cec:	00042223          	sw	zero,4(s0)
30004cf0:	00042823          	sw	zero,16(s0)
30004cf4:	00042a23          	sw	zero,20(s0)
30004cf8:	00042c23          	sw	zero,24(s0)
30004cfc:	00800613          	li	a2,8
30004d00:	00000593          	li	a1,0
30004d04:	05c40513          	addi	a0,s0,92
30004d08:	088010ef          	jal	ra,30005d90 <memset>
30004d0c:	02042823          	sw	zero,48(s0)
30004d10:	02042a23          	sw	zero,52(s0)
30004d14:	04042223          	sw	zero,68(s0)
30004d18:	04042423          	sw	zero,72(s0)
30004d1c:	01c12083          	lw	ra,28(sp)
30004d20:	00040513          	mv	a0,s0
30004d24:	01812403          	lw	s0,24(sp)
30004d28:	01412483          	lw	s1,20(sp)
30004d2c:	01012903          	lw	s2,16(sp)
30004d30:	00c12983          	lw	s3,12(sp)
30004d34:	02010113          	addi	sp,sp,32
30004d38:	00008067          	ret
30004d3c:	00092403          	lw	s0,0(s2)
30004d40:	00040c63          	beqz	s0,30004d58 <__sfp+0xdc>
30004d44:	00040913          	mv	s2,s0
30004d48:	f65ff06f          	j	30004cac <__sfp+0x30>
30004d4c:	00090513          	mv	a0,s2
30004d50:	d3dff0ef          	jal	ra,30004a8c <__sinit.part.0>
30004d54:	f51ff06f          	j	30004ca4 <__sfp+0x28>
30004d58:	1ac00593          	li	a1,428
30004d5c:	00098513          	mv	a0,s3
30004d60:	0a5000ef          	jal	ra,30005604 <_malloc_r>
30004d64:	00050413          	mv	s0,a0
30004d68:	02050863          	beqz	a0,30004d98 <__sfp+0x11c>
30004d6c:	00c50513          	addi	a0,a0,12
30004d70:	00400793          	li	a5,4
30004d74:	00042023          	sw	zero,0(s0)
30004d78:	00f42223          	sw	a5,4(s0)
30004d7c:	00a42423          	sw	a0,8(s0)
30004d80:	1a000613          	li	a2,416
30004d84:	00000593          	li	a1,0
30004d88:	008010ef          	jal	ra,30005d90 <memset>
30004d8c:	00892023          	sw	s0,0(s2)
30004d90:	00040913          	mv	s2,s0
30004d94:	f19ff06f          	j	30004cac <__sfp+0x30>
30004d98:	00092023          	sw	zero,0(s2)
30004d9c:	00c00793          	li	a5,12
30004da0:	00f9a023          	sw	a5,0(s3)
30004da4:	f79ff06f          	j	30004d1c <__sfp+0xa0>

30004da8 <_cleanup>:
30004da8:	8101a503          	lw	a0,-2032(gp) # 30007b38 <_global_impure_ptr>
30004dac:	300065b7          	lui	a1,0x30006
30004db0:	10058593          	addi	a1,a1,256 # 30006100 <_fclose_r>
30004db4:	5340006f          	j	300052e8 <_fwalk_reent>

30004db8 <__sinit>:
30004db8:	03852783          	lw	a5,56(a0)
30004dbc:	00078463          	beqz	a5,30004dc4 <__sinit+0xc>
30004dc0:	00008067          	ret
30004dc4:	cc9ff06f          	j	30004a8c <__sinit.part.0>

30004dc8 <__sfp_lock_acquire>:
30004dc8:	00008067          	ret

30004dcc <__sfp_lock_release>:
30004dcc:	00008067          	ret

30004dd0 <__sinit_lock_acquire>:
30004dd0:	00008067          	ret

30004dd4 <__sinit_lock_release>:
30004dd4:	00008067          	ret

30004dd8 <__fp_lock_all>:
30004dd8:	300087b7          	lui	a5,0x30008
30004ddc:	b2c7a503          	lw	a0,-1236(a5) # 30007b2c <_impure_ptr>
30004de0:	300055b7          	lui	a1,0x30005
30004de4:	a7058593          	addi	a1,a1,-1424 # 30004a70 <__fp_lock>
30004de8:	45c0006f          	j	30005244 <_fwalk>

30004dec <__fp_unlock_all>:
30004dec:	300087b7          	lui	a5,0x30008
30004df0:	b2c7a503          	lw	a0,-1236(a5) # 30007b2c <_impure_ptr>
30004df4:	300055b7          	lui	a1,0x30005
30004df8:	a8458593          	addi	a1,a1,-1404 # 30004a84 <__fp_unlock>
30004dfc:	4480006f          	j	30005244 <_fwalk>

30004e00 <_malloc_trim_r>:
30004e00:	fe010113          	addi	sp,sp,-32
30004e04:	01312623          	sw	s3,12(sp)
30004e08:	300079b7          	lui	s3,0x30007
30004e0c:	00812c23          	sw	s0,24(sp)
30004e10:	00912a23          	sw	s1,20(sp)
30004e14:	01212823          	sw	s2,16(sp)
30004e18:	01412423          	sw	s4,8(sp)
30004e1c:	00112e23          	sw	ra,28(sp)
30004e20:	00058a13          	mv	s4,a1
30004e24:	00050913          	mv	s2,a0
30004e28:	72098993          	addi	s3,s3,1824 # 30007720 <__malloc_av_>
30004e2c:	040010ef          	jal	ra,30005e6c <__malloc_lock>
30004e30:	0089a703          	lw	a4,8(s3)
30004e34:	000017b7          	lui	a5,0x1
30004e38:	fef78413          	addi	s0,a5,-17 # fef <__stack_size-0x11>
30004e3c:	00472483          	lw	s1,4(a4)
30004e40:	ffc4f493          	andi	s1,s1,-4
30004e44:	00848433          	add	s0,s1,s0
30004e48:	41440433          	sub	s0,s0,s4
30004e4c:	00c45413          	srli	s0,s0,0xc
30004e50:	fff40413          	addi	s0,s0,-1
30004e54:	00c41413          	slli	s0,s0,0xc
30004e58:	00f44e63          	blt	s0,a5,30004e74 <_malloc_trim_r+0x74>
30004e5c:	00000593          	li	a1,0
30004e60:	00090513          	mv	a0,s2
30004e64:	010010ef          	jal	ra,30005e74 <_sbrk_r>
30004e68:	0089a783          	lw	a5,8(s3)
30004e6c:	009787b3          	add	a5,a5,s1
30004e70:	02f50863          	beq	a0,a5,30004ea0 <_malloc_trim_r+0xa0>
30004e74:	00090513          	mv	a0,s2
30004e78:	7f9000ef          	jal	ra,30005e70 <__malloc_unlock>
30004e7c:	01c12083          	lw	ra,28(sp)
30004e80:	01812403          	lw	s0,24(sp)
30004e84:	01412483          	lw	s1,20(sp)
30004e88:	01012903          	lw	s2,16(sp)
30004e8c:	00c12983          	lw	s3,12(sp)
30004e90:	00812a03          	lw	s4,8(sp)
30004e94:	00000513          	li	a0,0
30004e98:	02010113          	addi	sp,sp,32
30004e9c:	00008067          	ret
30004ea0:	408005b3          	neg	a1,s0
30004ea4:	00090513          	mv	a0,s2
30004ea8:	7cd000ef          	jal	ra,30005e74 <_sbrk_r>
30004eac:	fff00793          	li	a5,-1
30004eb0:	04f50a63          	beq	a0,a5,30004f04 <_malloc_trim_r+0x104>
30004eb4:	300187b7          	lui	a5,0x30018
30004eb8:	15c78793          	addi	a5,a5,348 # 3001815c <__malloc_current_mallinfo>
30004ebc:	0007a703          	lw	a4,0(a5)
30004ec0:	0089a683          	lw	a3,8(s3)
30004ec4:	408484b3          	sub	s1,s1,s0
30004ec8:	0014e493          	ori	s1,s1,1
30004ecc:	40870733          	sub	a4,a4,s0
30004ed0:	00090513          	mv	a0,s2
30004ed4:	0096a223          	sw	s1,4(a3)
30004ed8:	00e7a023          	sw	a4,0(a5)
30004edc:	795000ef          	jal	ra,30005e70 <__malloc_unlock>
30004ee0:	01c12083          	lw	ra,28(sp)
30004ee4:	01812403          	lw	s0,24(sp)
30004ee8:	01412483          	lw	s1,20(sp)
30004eec:	01012903          	lw	s2,16(sp)
30004ef0:	00c12983          	lw	s3,12(sp)
30004ef4:	00812a03          	lw	s4,8(sp)
30004ef8:	00100513          	li	a0,1
30004efc:	02010113          	addi	sp,sp,32
30004f00:	00008067          	ret
30004f04:	00000593          	li	a1,0
30004f08:	00090513          	mv	a0,s2
30004f0c:	769000ef          	jal	ra,30005e74 <_sbrk_r>
30004f10:	0089a703          	lw	a4,8(s3)
30004f14:	00f00693          	li	a3,15
30004f18:	40e507b3          	sub	a5,a0,a4
30004f1c:	f4f6dce3          	bge	a3,a5,30004e74 <_malloc_trim_r+0x74>
30004f20:	300086b7          	lui	a3,0x30008
30004f24:	b306a683          	lw	a3,-1232(a3) # 30007b30 <__malloc_sbrk_base>
30004f28:	0017e793          	ori	a5,a5,1
30004f2c:	00f72223          	sw	a5,4(a4)
30004f30:	40d50533          	sub	a0,a0,a3
30004f34:	300186b7          	lui	a3,0x30018
30004f38:	14a6ae23          	sw	a0,348(a3) # 3001815c <__malloc_current_mallinfo>
30004f3c:	f39ff06f          	j	30004e74 <_malloc_trim_r+0x74>

30004f40 <_free_r>:
30004f40:	18058263          	beqz	a1,300050c4 <_free_r+0x184>
30004f44:	ff010113          	addi	sp,sp,-16
30004f48:	00812423          	sw	s0,8(sp)
30004f4c:	00912223          	sw	s1,4(sp)
30004f50:	00058413          	mv	s0,a1
30004f54:	00050493          	mv	s1,a0
30004f58:	00112623          	sw	ra,12(sp)
30004f5c:	711000ef          	jal	ra,30005e6c <__malloc_lock>
30004f60:	ffc42503          	lw	a0,-4(s0)
30004f64:	ff840713          	addi	a4,s0,-8
30004f68:	300075b7          	lui	a1,0x30007
30004f6c:	ffe57793          	andi	a5,a0,-2
30004f70:	00f70633          	add	a2,a4,a5
30004f74:	72058593          	addi	a1,a1,1824 # 30007720 <__malloc_av_>
30004f78:	00462683          	lw	a3,4(a2)
30004f7c:	0085a803          	lw	a6,8(a1)
30004f80:	ffc6f693          	andi	a3,a3,-4
30004f84:	1ac80263          	beq	a6,a2,30005128 <_free_r+0x1e8>
30004f88:	00d62223          	sw	a3,4(a2)
30004f8c:	00157513          	andi	a0,a0,1
30004f90:	00d60833          	add	a6,a2,a3
30004f94:	0a051063          	bnez	a0,30005034 <_free_r+0xf4>
30004f98:	ff842303          	lw	t1,-8(s0)
30004f9c:	00482803          	lw	a6,4(a6)
30004fa0:	30007537          	lui	a0,0x30007
30004fa4:	40670733          	sub	a4,a4,t1
30004fa8:	00872883          	lw	a7,8(a4)
30004fac:	72850513          	addi	a0,a0,1832 # 30007728 <__malloc_av_+0x8>
30004fb0:	006787b3          	add	a5,a5,t1
30004fb4:	00187813          	andi	a6,a6,1
30004fb8:	14a88263          	beq	a7,a0,300050fc <_free_r+0x1bc>
30004fbc:	00c72303          	lw	t1,12(a4)
30004fc0:	0068a623          	sw	t1,12(a7)
30004fc4:	01132423          	sw	a7,8(t1)
30004fc8:	1a080663          	beqz	a6,30005174 <_free_r+0x234>
30004fcc:	0017e693          	ori	a3,a5,1
30004fd0:	00d72223          	sw	a3,4(a4)
30004fd4:	00f62023          	sw	a5,0(a2)
30004fd8:	1ff00693          	li	a3,511
30004fdc:	06f6ec63          	bltu	a3,a5,30005054 <_free_r+0x114>
30004fe0:	ff87f693          	andi	a3,a5,-8
30004fe4:	00868693          	addi	a3,a3,8
30004fe8:	0045a503          	lw	a0,4(a1)
30004fec:	00d586b3          	add	a3,a1,a3
30004ff0:	0006a603          	lw	a2,0(a3)
30004ff4:	0057d813          	srli	a6,a5,0x5
30004ff8:	00100793          	li	a5,1
30004ffc:	010797b3          	sll	a5,a5,a6
30005000:	00a7e7b3          	or	a5,a5,a0
30005004:	ff868513          	addi	a0,a3,-8
30005008:	00a72623          	sw	a0,12(a4)
3000500c:	00c72423          	sw	a2,8(a4)
30005010:	00f5a223          	sw	a5,4(a1)
30005014:	00e6a023          	sw	a4,0(a3)
30005018:	00e62623          	sw	a4,12(a2)
3000501c:	00812403          	lw	s0,8(sp)
30005020:	00c12083          	lw	ra,12(sp)
30005024:	00048513          	mv	a0,s1
30005028:	00412483          	lw	s1,4(sp)
3000502c:	01010113          	addi	sp,sp,16
30005030:	6410006f          	j	30005e70 <__malloc_unlock>
30005034:	00482503          	lw	a0,4(a6)
30005038:	00157513          	andi	a0,a0,1
3000503c:	08050663          	beqz	a0,300050c8 <_free_r+0x188>
30005040:	0017e693          	ori	a3,a5,1
30005044:	fed42e23          	sw	a3,-4(s0)
30005048:	00f62023          	sw	a5,0(a2)
3000504c:	1ff00693          	li	a3,511
30005050:	f8f6f8e3          	bgeu	a3,a5,30004fe0 <_free_r+0xa0>
30005054:	0097d693          	srli	a3,a5,0x9
30005058:	00400613          	li	a2,4
3000505c:	12d66063          	bltu	a2,a3,3000517c <_free_r+0x23c>
30005060:	0067d693          	srli	a3,a5,0x6
30005064:	03968513          	addi	a0,a3,57
30005068:	03868613          	addi	a2,a3,56
3000506c:	00351513          	slli	a0,a0,0x3
30005070:	00a58533          	add	a0,a1,a0
30005074:	00052683          	lw	a3,0(a0)
30005078:	ff850513          	addi	a0,a0,-8
3000507c:	00d51863          	bne	a0,a3,3000508c <_free_r+0x14c>
30005080:	1540006f          	j	300051d4 <_free_r+0x294>
30005084:	0086a683          	lw	a3,8(a3)
30005088:	00d50863          	beq	a0,a3,30005098 <_free_r+0x158>
3000508c:	0046a603          	lw	a2,4(a3)
30005090:	ffc67613          	andi	a2,a2,-4
30005094:	fec7e8e3          	bltu	a5,a2,30005084 <_free_r+0x144>
30005098:	00c6a503          	lw	a0,12(a3)
3000509c:	00a72623          	sw	a0,12(a4)
300050a0:	00d72423          	sw	a3,8(a4)
300050a4:	00812403          	lw	s0,8(sp)
300050a8:	00e52423          	sw	a4,8(a0)
300050ac:	00c12083          	lw	ra,12(sp)
300050b0:	00048513          	mv	a0,s1
300050b4:	00412483          	lw	s1,4(sp)
300050b8:	00e6a623          	sw	a4,12(a3)
300050bc:	01010113          	addi	sp,sp,16
300050c0:	5b10006f          	j	30005e70 <__malloc_unlock>
300050c4:	00008067          	ret
300050c8:	30007537          	lui	a0,0x30007
300050cc:	00d787b3          	add	a5,a5,a3
300050d0:	72850513          	addi	a0,a0,1832 # 30007728 <__malloc_av_+0x8>
300050d4:	00862683          	lw	a3,8(a2)
300050d8:	0ca68c63          	beq	a3,a0,300051b0 <_free_r+0x270>
300050dc:	00c62803          	lw	a6,12(a2)
300050e0:	0017e513          	ori	a0,a5,1
300050e4:	00f70633          	add	a2,a4,a5
300050e8:	0106a623          	sw	a6,12(a3)
300050ec:	00d82423          	sw	a3,8(a6)
300050f0:	00a72223          	sw	a0,4(a4)
300050f4:	00f62023          	sw	a5,0(a2)
300050f8:	ee1ff06f          	j	30004fd8 <_free_r+0x98>
300050fc:	12081c63          	bnez	a6,30005234 <_free_r+0x2f4>
30005100:	00862583          	lw	a1,8(a2)
30005104:	00c62603          	lw	a2,12(a2)
30005108:	00f686b3          	add	a3,a3,a5
3000510c:	0016e793          	ori	a5,a3,1
30005110:	00c5a623          	sw	a2,12(a1)
30005114:	00b62423          	sw	a1,8(a2)
30005118:	00f72223          	sw	a5,4(a4)
3000511c:	00d70733          	add	a4,a4,a3
30005120:	00d72023          	sw	a3,0(a4)
30005124:	ef9ff06f          	j	3000501c <_free_r+0xdc>
30005128:	00157513          	andi	a0,a0,1
3000512c:	00d786b3          	add	a3,a5,a3
30005130:	02051063          	bnez	a0,30005150 <_free_r+0x210>
30005134:	ff842503          	lw	a0,-8(s0)
30005138:	40a70733          	sub	a4,a4,a0
3000513c:	00c72783          	lw	a5,12(a4)
30005140:	00872603          	lw	a2,8(a4)
30005144:	00a686b3          	add	a3,a3,a0
30005148:	00f62623          	sw	a5,12(a2)
3000514c:	00c7a423          	sw	a2,8(a5)
30005150:	0016e613          	ori	a2,a3,1
30005154:	80c1a783          	lw	a5,-2036(gp) # 30007b34 <__malloc_trim_threshold>
30005158:	00c72223          	sw	a2,4(a4)
3000515c:	00e5a423          	sw	a4,8(a1)
30005160:	eaf6eee3          	bltu	a3,a5,3000501c <_free_r+0xdc>
30005164:	8281a583          	lw	a1,-2008(gp) # 30007b50 <__malloc_top_pad>
30005168:	00048513          	mv	a0,s1
3000516c:	c95ff0ef          	jal	ra,30004e00 <_malloc_trim_r>
30005170:	eadff06f          	j	3000501c <_free_r+0xdc>
30005174:	00d787b3          	add	a5,a5,a3
30005178:	f5dff06f          	j	300050d4 <_free_r+0x194>
3000517c:	01400613          	li	a2,20
30005180:	02d67063          	bgeu	a2,a3,300051a0 <_free_r+0x260>
30005184:	05400613          	li	a2,84
30005188:	06d66463          	bltu	a2,a3,300051f0 <_free_r+0x2b0>
3000518c:	00c7d693          	srli	a3,a5,0xc
30005190:	06f68513          	addi	a0,a3,111
30005194:	06e68613          	addi	a2,a3,110
30005198:	00351513          	slli	a0,a0,0x3
3000519c:	ed5ff06f          	j	30005070 <_free_r+0x130>
300051a0:	05c68513          	addi	a0,a3,92
300051a4:	05b68613          	addi	a2,a3,91
300051a8:	00351513          	slli	a0,a0,0x3
300051ac:	ec5ff06f          	j	30005070 <_free_r+0x130>
300051b0:	00e5aa23          	sw	a4,20(a1)
300051b4:	00e5a823          	sw	a4,16(a1)
300051b8:	0017e693          	ori	a3,a5,1
300051bc:	00a72623          	sw	a0,12(a4)
300051c0:	00a72423          	sw	a0,8(a4)
300051c4:	00d72223          	sw	a3,4(a4)
300051c8:	00f70733          	add	a4,a4,a5
300051cc:	00f72023          	sw	a5,0(a4)
300051d0:	e4dff06f          	j	3000501c <_free_r+0xdc>
300051d4:	0045a803          	lw	a6,4(a1)
300051d8:	40265613          	srai	a2,a2,0x2
300051dc:	00100793          	li	a5,1
300051e0:	00c797b3          	sll	a5,a5,a2
300051e4:	0107e7b3          	or	a5,a5,a6
300051e8:	00f5a223          	sw	a5,4(a1)
300051ec:	eb1ff06f          	j	3000509c <_free_r+0x15c>
300051f0:	15400613          	li	a2,340
300051f4:	00d66c63          	bltu	a2,a3,3000520c <_free_r+0x2cc>
300051f8:	00f7d693          	srli	a3,a5,0xf
300051fc:	07868513          	addi	a0,a3,120
30005200:	07768613          	addi	a2,a3,119
30005204:	00351513          	slli	a0,a0,0x3
30005208:	e69ff06f          	j	30005070 <_free_r+0x130>
3000520c:	55400613          	li	a2,1364
30005210:	00d66c63          	bltu	a2,a3,30005228 <_free_r+0x2e8>
30005214:	0127d693          	srli	a3,a5,0x12
30005218:	07d68513          	addi	a0,a3,125
3000521c:	07c68613          	addi	a2,a3,124
30005220:	00351513          	slli	a0,a0,0x3
30005224:	e4dff06f          	j	30005070 <_free_r+0x130>
30005228:	3f800513          	li	a0,1016
3000522c:	07e00613          	li	a2,126
30005230:	e41ff06f          	j	30005070 <_free_r+0x130>
30005234:	0017e693          	ori	a3,a5,1
30005238:	00d72223          	sw	a3,4(a4)
3000523c:	00f62023          	sw	a5,0(a2)
30005240:	dddff06f          	j	3000501c <_free_r+0xdc>

30005244 <_fwalk>:
30005244:	fe010113          	addi	sp,sp,-32
30005248:	01212823          	sw	s2,16(sp)
3000524c:	01312623          	sw	s3,12(sp)
30005250:	01412423          	sw	s4,8(sp)
30005254:	01512223          	sw	s5,4(sp)
30005258:	01612023          	sw	s6,0(sp)
3000525c:	00112e23          	sw	ra,28(sp)
30005260:	00812c23          	sw	s0,24(sp)
30005264:	00912a23          	sw	s1,20(sp)
30005268:	00058b13          	mv	s6,a1
3000526c:	2e050a93          	addi	s5,a0,736
30005270:	00000a13          	li	s4,0
30005274:	00100993          	li	s3,1
30005278:	fff00913          	li	s2,-1
3000527c:	004aa483          	lw	s1,4(s5)
30005280:	008aa403          	lw	s0,8(s5)
30005284:	fff48493          	addi	s1,s1,-1
30005288:	0204c663          	bltz	s1,300052b4 <_fwalk+0x70>
3000528c:	00c45783          	lhu	a5,12(s0)
30005290:	fff48493          	addi	s1,s1,-1
30005294:	00f9fc63          	bgeu	s3,a5,300052ac <_fwalk+0x68>
30005298:	00e41783          	lh	a5,14(s0)
3000529c:	00040513          	mv	a0,s0
300052a0:	01278663          	beq	a5,s2,300052ac <_fwalk+0x68>
300052a4:	000b00e7          	jalr	s6
300052a8:	00aa6a33          	or	s4,s4,a0
300052ac:	06840413          	addi	s0,s0,104
300052b0:	fd249ee3          	bne	s1,s2,3000528c <_fwalk+0x48>
300052b4:	000aaa83          	lw	s5,0(s5)
300052b8:	fc0a92e3          	bnez	s5,3000527c <_fwalk+0x38>
300052bc:	01c12083          	lw	ra,28(sp)
300052c0:	01812403          	lw	s0,24(sp)
300052c4:	01412483          	lw	s1,20(sp)
300052c8:	01012903          	lw	s2,16(sp)
300052cc:	00c12983          	lw	s3,12(sp)
300052d0:	00412a83          	lw	s5,4(sp)
300052d4:	00012b03          	lw	s6,0(sp)
300052d8:	000a0513          	mv	a0,s4
300052dc:	00812a03          	lw	s4,8(sp)
300052e0:	02010113          	addi	sp,sp,32
300052e4:	00008067          	ret

300052e8 <_fwalk_reent>:
300052e8:	fd010113          	addi	sp,sp,-48
300052ec:	03212023          	sw	s2,32(sp)
300052f0:	01312e23          	sw	s3,28(sp)
300052f4:	01412c23          	sw	s4,24(sp)
300052f8:	01512a23          	sw	s5,20(sp)
300052fc:	01612823          	sw	s6,16(sp)
30005300:	01712623          	sw	s7,12(sp)
30005304:	02112623          	sw	ra,44(sp)
30005308:	02812423          	sw	s0,40(sp)
3000530c:	02912223          	sw	s1,36(sp)
30005310:	00050a93          	mv	s5,a0
30005314:	00058b93          	mv	s7,a1
30005318:	2e050b13          	addi	s6,a0,736
3000531c:	00000a13          	li	s4,0
30005320:	00100993          	li	s3,1
30005324:	fff00913          	li	s2,-1
30005328:	004b2483          	lw	s1,4(s6)
3000532c:	008b2403          	lw	s0,8(s6)
30005330:	fff48493          	addi	s1,s1,-1
30005334:	0204c863          	bltz	s1,30005364 <_fwalk_reent+0x7c>
30005338:	00c45783          	lhu	a5,12(s0)
3000533c:	fff48493          	addi	s1,s1,-1
30005340:	00f9fe63          	bgeu	s3,a5,3000535c <_fwalk_reent+0x74>
30005344:	00e41783          	lh	a5,14(s0)
30005348:	00040593          	mv	a1,s0
3000534c:	000a8513          	mv	a0,s5
30005350:	01278663          	beq	a5,s2,3000535c <_fwalk_reent+0x74>
30005354:	000b80e7          	jalr	s7
30005358:	00aa6a33          	or	s4,s4,a0
3000535c:	06840413          	addi	s0,s0,104
30005360:	fd249ce3          	bne	s1,s2,30005338 <_fwalk_reent+0x50>
30005364:	000b2b03          	lw	s6,0(s6)
30005368:	fc0b10e3          	bnez	s6,30005328 <_fwalk_reent+0x40>
3000536c:	02c12083          	lw	ra,44(sp)
30005370:	02812403          	lw	s0,40(sp)
30005374:	02412483          	lw	s1,36(sp)
30005378:	02012903          	lw	s2,32(sp)
3000537c:	01c12983          	lw	s3,28(sp)
30005380:	01412a83          	lw	s5,20(sp)
30005384:	01012b03          	lw	s6,16(sp)
30005388:	00c12b83          	lw	s7,12(sp)
3000538c:	000a0513          	mv	a0,s4
30005390:	01812a03          	lw	s4,24(sp)
30005394:	03010113          	addi	sp,sp,48
30005398:	00008067          	ret

3000539c <__smakebuf_r>:
3000539c:	00c59783          	lh	a5,12(a1)
300053a0:	f8010113          	addi	sp,sp,-128
300053a4:	06812c23          	sw	s0,120(sp)
300053a8:	06112e23          	sw	ra,124(sp)
300053ac:	06912a23          	sw	s1,116(sp)
300053b0:	07212823          	sw	s2,112(sp)
300053b4:	07312623          	sw	s3,108(sp)
300053b8:	07412423          	sw	s4,104(sp)
300053bc:	0027f713          	andi	a4,a5,2
300053c0:	00058413          	mv	s0,a1
300053c4:	02070c63          	beqz	a4,300053fc <__smakebuf_r+0x60>
300053c8:	04358793          	addi	a5,a1,67
300053cc:	00f5a023          	sw	a5,0(a1)
300053d0:	00f5a823          	sw	a5,16(a1)
300053d4:	00100793          	li	a5,1
300053d8:	00f5aa23          	sw	a5,20(a1)
300053dc:	07c12083          	lw	ra,124(sp)
300053e0:	07812403          	lw	s0,120(sp)
300053e4:	07412483          	lw	s1,116(sp)
300053e8:	07012903          	lw	s2,112(sp)
300053ec:	06c12983          	lw	s3,108(sp)
300053f0:	06812a03          	lw	s4,104(sp)
300053f4:	08010113          	addi	sp,sp,128
300053f8:	00008067          	ret
300053fc:	00e59583          	lh	a1,14(a1)
30005400:	00050493          	mv	s1,a0
30005404:	0805cc63          	bltz	a1,3000549c <__smakebuf_r+0x100>
30005408:	00810613          	addi	a2,sp,8
3000540c:	615000ef          	jal	ra,30006220 <_fstat_r>
30005410:	08054463          	bltz	a0,30005498 <__smakebuf_r+0xfc>
30005414:	00c12783          	lw	a5,12(sp)
30005418:	0000f937          	lui	s2,0xf
3000541c:	000019b7          	lui	s3,0x1
30005420:	00f97933          	and	s2,s2,a5
30005424:	ffffe7b7          	lui	a5,0xffffe
30005428:	00f90933          	add	s2,s2,a5
3000542c:	00193913          	seqz	s2,s2
30005430:	40000a13          	li	s4,1024
30005434:	80098993          	addi	s3,s3,-2048 # 800 <__stack_size-0x800>
30005438:	000a0593          	mv	a1,s4
3000543c:	00048513          	mv	a0,s1
30005440:	1c4000ef          	jal	ra,30005604 <_malloc_r>
30005444:	00c41783          	lh	a5,12(s0)
30005448:	06050e63          	beqz	a0,300054c4 <__smakebuf_r+0x128>
3000544c:	30005737          	lui	a4,0x30005
30005450:	a7870713          	addi	a4,a4,-1416 # 30004a78 <_cleanup_r>
30005454:	02e4ae23          	sw	a4,60(s1)
30005458:	0807e793          	ori	a5,a5,128
3000545c:	00f41623          	sh	a5,12(s0)
30005460:	00a42023          	sw	a0,0(s0)
30005464:	00a42823          	sw	a0,16(s0)
30005468:	01442a23          	sw	s4,20(s0)
3000546c:	08091863          	bnez	s2,300054fc <__smakebuf_r+0x160>
30005470:	0137e7b3          	or	a5,a5,s3
30005474:	07c12083          	lw	ra,124(sp)
30005478:	00f41623          	sh	a5,12(s0)
3000547c:	07812403          	lw	s0,120(sp)
30005480:	07412483          	lw	s1,116(sp)
30005484:	07012903          	lw	s2,112(sp)
30005488:	06c12983          	lw	s3,108(sp)
3000548c:	06812a03          	lw	s4,104(sp)
30005490:	08010113          	addi	sp,sp,128
30005494:	00008067          	ret
30005498:	00c41783          	lh	a5,12(s0)
3000549c:	0807f793          	andi	a5,a5,128
300054a0:	00000913          	li	s2,0
300054a4:	04078663          	beqz	a5,300054f0 <__smakebuf_r+0x154>
300054a8:	04000a13          	li	s4,64
300054ac:	000a0593          	mv	a1,s4
300054b0:	00048513          	mv	a0,s1
300054b4:	150000ef          	jal	ra,30005604 <_malloc_r>
300054b8:	00c41783          	lh	a5,12(s0)
300054bc:	00000993          	li	s3,0
300054c0:	f80516e3          	bnez	a0,3000544c <__smakebuf_r+0xb0>
300054c4:	2007f713          	andi	a4,a5,512
300054c8:	f0071ae3          	bnez	a4,300053dc <__smakebuf_r+0x40>
300054cc:	ffc7f793          	andi	a5,a5,-4
300054d0:	0027e793          	ori	a5,a5,2
300054d4:	04340713          	addi	a4,s0,67
300054d8:	00f41623          	sh	a5,12(s0)
300054dc:	00100793          	li	a5,1
300054e0:	00e42023          	sw	a4,0(s0)
300054e4:	00e42823          	sw	a4,16(s0)
300054e8:	00f42a23          	sw	a5,20(s0)
300054ec:	ef1ff06f          	j	300053dc <__smakebuf_r+0x40>
300054f0:	40000a13          	li	s4,1024
300054f4:	00000993          	li	s3,0
300054f8:	f41ff06f          	j	30005438 <__smakebuf_r+0x9c>
300054fc:	00e41583          	lh	a1,14(s0)
30005500:	00048513          	mv	a0,s1
30005504:	581000ef          	jal	ra,30006284 <_isatty_r>
30005508:	00051663          	bnez	a0,30005514 <__smakebuf_r+0x178>
3000550c:	00c41783          	lh	a5,12(s0)
30005510:	f61ff06f          	j	30005470 <__smakebuf_r+0xd4>
30005514:	00c45783          	lhu	a5,12(s0)
30005518:	ffc7f793          	andi	a5,a5,-4
3000551c:	0017e793          	ori	a5,a5,1
30005520:	01079793          	slli	a5,a5,0x10
30005524:	4107d793          	srai	a5,a5,0x10
30005528:	f49ff06f          	j	30005470 <__smakebuf_r+0xd4>

3000552c <__swhatbuf_r>:
3000552c:	f9010113          	addi	sp,sp,-112
30005530:	06812423          	sw	s0,104(sp)
30005534:	00058413          	mv	s0,a1
30005538:	00e59583          	lh	a1,14(a1)
3000553c:	06912223          	sw	s1,100(sp)
30005540:	07212023          	sw	s2,96(sp)
30005544:	06112623          	sw	ra,108(sp)
30005548:	00060493          	mv	s1,a2
3000554c:	00068913          	mv	s2,a3
30005550:	0405ca63          	bltz	a1,300055a4 <__swhatbuf_r+0x78>
30005554:	00810613          	addi	a2,sp,8
30005558:	4c9000ef          	jal	ra,30006220 <_fstat_r>
3000555c:	04054463          	bltz	a0,300055a4 <__swhatbuf_r+0x78>
30005560:	00c12703          	lw	a4,12(sp)
30005564:	0000f7b7          	lui	a5,0xf
30005568:	06c12083          	lw	ra,108(sp)
3000556c:	00e7f7b3          	and	a5,a5,a4
30005570:	ffffe737          	lui	a4,0xffffe
30005574:	00e787b3          	add	a5,a5,a4
30005578:	06812403          	lw	s0,104(sp)
3000557c:	0017b793          	seqz	a5,a5
30005580:	00f92023          	sw	a5,0(s2) # f000 <__stack_size+0xe000>
30005584:	40000713          	li	a4,1024
30005588:	00e4a023          	sw	a4,0(s1)
3000558c:	00001537          	lui	a0,0x1
30005590:	06412483          	lw	s1,100(sp)
30005594:	06012903          	lw	s2,96(sp)
30005598:	80050513          	addi	a0,a0,-2048 # 800 <__stack_size-0x800>
3000559c:	07010113          	addi	sp,sp,112
300055a0:	00008067          	ret
300055a4:	00c45783          	lhu	a5,12(s0)
300055a8:	0807f793          	andi	a5,a5,128
300055ac:	02078863          	beqz	a5,300055dc <__swhatbuf_r+0xb0>
300055b0:	06c12083          	lw	ra,108(sp)
300055b4:	06812403          	lw	s0,104(sp)
300055b8:	00000793          	li	a5,0
300055bc:	00f92023          	sw	a5,0(s2)
300055c0:	04000713          	li	a4,64
300055c4:	00e4a023          	sw	a4,0(s1)
300055c8:	06012903          	lw	s2,96(sp)
300055cc:	06412483          	lw	s1,100(sp)
300055d0:	00000513          	li	a0,0
300055d4:	07010113          	addi	sp,sp,112
300055d8:	00008067          	ret
300055dc:	06c12083          	lw	ra,108(sp)
300055e0:	06812403          	lw	s0,104(sp)
300055e4:	00f92023          	sw	a5,0(s2)
300055e8:	40000713          	li	a4,1024
300055ec:	00e4a023          	sw	a4,0(s1)
300055f0:	06012903          	lw	s2,96(sp)
300055f4:	06412483          	lw	s1,100(sp)
300055f8:	00000513          	li	a0,0
300055fc:	07010113          	addi	sp,sp,112
30005600:	00008067          	ret

30005604 <_malloc_r>:
30005604:	fd010113          	addi	sp,sp,-48
30005608:	01312e23          	sw	s3,28(sp)
3000560c:	02112623          	sw	ra,44(sp)
30005610:	02812423          	sw	s0,40(sp)
30005614:	02912223          	sw	s1,36(sp)
30005618:	03212023          	sw	s2,32(sp)
3000561c:	01412c23          	sw	s4,24(sp)
30005620:	01512a23          	sw	s5,20(sp)
30005624:	01612823          	sw	s6,16(sp)
30005628:	01712623          	sw	s7,12(sp)
3000562c:	01812423          	sw	s8,8(sp)
30005630:	01912223          	sw	s9,4(sp)
30005634:	00b58793          	addi	a5,a1,11
30005638:	01600713          	li	a4,22
3000563c:	00050993          	mv	s3,a0
30005640:	08f76e63          	bltu	a4,a5,300056dc <_malloc_r+0xd8>
30005644:	01000793          	li	a5,16
30005648:	22b7e063          	bltu	a5,a1,30005868 <_malloc_r+0x264>
3000564c:	021000ef          	jal	ra,30005e6c <__malloc_lock>
30005650:	01000493          	li	s1,16
30005654:	01800793          	li	a5,24
30005658:	00200593          	li	a1,2
3000565c:	30007937          	lui	s2,0x30007
30005660:	72090913          	addi	s2,s2,1824 # 30007720 <__malloc_av_>
30005664:	00f907b3          	add	a5,s2,a5
30005668:	0047a403          	lw	s0,4(a5) # f004 <__stack_size+0xe004>
3000566c:	ff878713          	addi	a4,a5,-8
30005670:	30e40863          	beq	s0,a4,30005980 <_malloc_r+0x37c>
30005674:	00442783          	lw	a5,4(s0)
30005678:	00c42683          	lw	a3,12(s0)
3000567c:	00842603          	lw	a2,8(s0)
30005680:	ffc7f793          	andi	a5,a5,-4
30005684:	00f407b3          	add	a5,s0,a5
30005688:	0047a703          	lw	a4,4(a5)
3000568c:	00d62623          	sw	a3,12(a2)
30005690:	00c6a423          	sw	a2,8(a3)
30005694:	00176713          	ori	a4,a4,1
30005698:	00098513          	mv	a0,s3
3000569c:	00e7a223          	sw	a4,4(a5)
300056a0:	7d0000ef          	jal	ra,30005e70 <__malloc_unlock>
300056a4:	00840513          	addi	a0,s0,8
300056a8:	02c12083          	lw	ra,44(sp)
300056ac:	02812403          	lw	s0,40(sp)
300056b0:	02412483          	lw	s1,36(sp)
300056b4:	02012903          	lw	s2,32(sp)
300056b8:	01c12983          	lw	s3,28(sp)
300056bc:	01812a03          	lw	s4,24(sp)
300056c0:	01412a83          	lw	s5,20(sp)
300056c4:	01012b03          	lw	s6,16(sp)
300056c8:	00c12b83          	lw	s7,12(sp)
300056cc:	00812c03          	lw	s8,8(sp)
300056d0:	00412c83          	lw	s9,4(sp)
300056d4:	03010113          	addi	sp,sp,48
300056d8:	00008067          	ret
300056dc:	ff87f493          	andi	s1,a5,-8
300056e0:	1807c463          	bltz	a5,30005868 <_malloc_r+0x264>
300056e4:	18b4e263          	bltu	s1,a1,30005868 <_malloc_r+0x264>
300056e8:	784000ef          	jal	ra,30005e6c <__malloc_lock>
300056ec:	1f700793          	li	a5,503
300056f0:	3a97f263          	bgeu	a5,s1,30005a94 <_malloc_r+0x490>
300056f4:	0094d793          	srli	a5,s1,0x9
300056f8:	18078063          	beqz	a5,30005878 <_malloc_r+0x274>
300056fc:	00400713          	li	a4,4
30005700:	2ef76863          	bltu	a4,a5,300059f0 <_malloc_r+0x3ec>
30005704:	0064d793          	srli	a5,s1,0x6
30005708:	03978593          	addi	a1,a5,57
3000570c:	03878513          	addi	a0,a5,56
30005710:	00359693          	slli	a3,a1,0x3
30005714:	30007937          	lui	s2,0x30007
30005718:	72090913          	addi	s2,s2,1824 # 30007720 <__malloc_av_>
3000571c:	00d906b3          	add	a3,s2,a3
30005720:	0046a403          	lw	s0,4(a3)
30005724:	ff868693          	addi	a3,a3,-8
30005728:	02868663          	beq	a3,s0,30005754 <_malloc_r+0x150>
3000572c:	00f00613          	li	a2,15
30005730:	0100006f          	j	30005740 <_malloc_r+0x13c>
30005734:	24075063          	bgez	a4,30005974 <_malloc_r+0x370>
30005738:	00c42403          	lw	s0,12(s0)
3000573c:	00868c63          	beq	a3,s0,30005754 <_malloc_r+0x150>
30005740:	00442783          	lw	a5,4(s0)
30005744:	ffc7f793          	andi	a5,a5,-4
30005748:	40978733          	sub	a4,a5,s1
3000574c:	fee654e3          	bge	a2,a4,30005734 <_malloc_r+0x130>
30005750:	00050593          	mv	a1,a0
30005754:	01092403          	lw	s0,16(s2)
30005758:	30007837          	lui	a6,0x30007
3000575c:	72880813          	addi	a6,a6,1832 # 30007728 <__malloc_av_+0x8>
30005760:	1f040263          	beq	s0,a6,30005944 <_malloc_r+0x340>
30005764:	00442783          	lw	a5,4(s0)
30005768:	00f00693          	li	a3,15
3000576c:	ffc7f793          	andi	a5,a5,-4
30005770:	40978733          	sub	a4,a5,s1
30005774:	32e6c663          	blt	a3,a4,30005aa0 <_malloc_r+0x49c>
30005778:	01092a23          	sw	a6,20(s2)
3000577c:	01092823          	sw	a6,16(s2)
30005780:	2e075a63          	bgez	a4,30005a74 <_malloc_r+0x470>
30005784:	1ff00713          	li	a4,511
30005788:	00492503          	lw	a0,4(s2)
3000578c:	20f76263          	bltu	a4,a5,30005990 <_malloc_r+0x38c>
30005790:	ff87f713          	andi	a4,a5,-8
30005794:	00870713          	addi	a4,a4,8 # ffffe008 <_sp+0xcfefe008>
30005798:	00e90733          	add	a4,s2,a4
3000579c:	00072683          	lw	a3,0(a4)
300057a0:	0057d613          	srli	a2,a5,0x5
300057a4:	00100793          	li	a5,1
300057a8:	00c797b3          	sll	a5,a5,a2
300057ac:	00f56533          	or	a0,a0,a5
300057b0:	ff870793          	addi	a5,a4,-8
300057b4:	00f42623          	sw	a5,12(s0)
300057b8:	00d42423          	sw	a3,8(s0)
300057bc:	00a92223          	sw	a0,4(s2)
300057c0:	00872023          	sw	s0,0(a4)
300057c4:	0086a623          	sw	s0,12(a3)
300057c8:	4025d793          	srai	a5,a1,0x2
300057cc:	00100613          	li	a2,1
300057d0:	00f61633          	sll	a2,a2,a5
300057d4:	0ac56a63          	bltu	a0,a2,30005888 <_malloc_r+0x284>
300057d8:	00a677b3          	and	a5,a2,a0
300057dc:	02079463          	bnez	a5,30005804 <_malloc_r+0x200>
300057e0:	00161613          	slli	a2,a2,0x1
300057e4:	ffc5f593          	andi	a1,a1,-4
300057e8:	00a677b3          	and	a5,a2,a0
300057ec:	00458593          	addi	a1,a1,4
300057f0:	00079a63          	bnez	a5,30005804 <_malloc_r+0x200>
300057f4:	00161613          	slli	a2,a2,0x1
300057f8:	00a677b3          	and	a5,a2,a0
300057fc:	00458593          	addi	a1,a1,4
30005800:	fe078ae3          	beqz	a5,300057f4 <_malloc_r+0x1f0>
30005804:	00f00893          	li	a7,15
30005808:	00359313          	slli	t1,a1,0x3
3000580c:	00690333          	add	t1,s2,t1
30005810:	00030513          	mv	a0,t1
30005814:	00c52783          	lw	a5,12(a0)
30005818:	00058e13          	mv	t3,a1
3000581c:	1ef50c63          	beq	a0,a5,30005a14 <_malloc_r+0x410>
30005820:	0047a703          	lw	a4,4(a5)
30005824:	00078413          	mv	s0,a5
30005828:	00c7a783          	lw	a5,12(a5)
3000582c:	ffc77713          	andi	a4,a4,-4
30005830:	409706b3          	sub	a3,a4,s1
30005834:	1ed8cc63          	blt	a7,a3,30005a2c <_malloc_r+0x428>
30005838:	fe06c2e3          	bltz	a3,3000581c <_malloc_r+0x218>
3000583c:	00e40733          	add	a4,s0,a4
30005840:	00472683          	lw	a3,4(a4)
30005844:	00842603          	lw	a2,8(s0)
30005848:	00098513          	mv	a0,s3
3000584c:	0016e693          	ori	a3,a3,1
30005850:	00d72223          	sw	a3,4(a4)
30005854:	00f62623          	sw	a5,12(a2)
30005858:	00c7a423          	sw	a2,8(a5)
3000585c:	614000ef          	jal	ra,30005e70 <__malloc_unlock>
30005860:	00840513          	addi	a0,s0,8
30005864:	e45ff06f          	j	300056a8 <_malloc_r+0xa4>
30005868:	00c00793          	li	a5,12
3000586c:	00f9a023          	sw	a5,0(s3)
30005870:	00000513          	li	a0,0
30005874:	e35ff06f          	j	300056a8 <_malloc_r+0xa4>
30005878:	20000693          	li	a3,512
3000587c:	04000593          	li	a1,64
30005880:	03f00513          	li	a0,63
30005884:	e91ff06f          	j	30005714 <_malloc_r+0x110>
30005888:	00892403          	lw	s0,8(s2)
3000588c:	00442783          	lw	a5,4(s0)
30005890:	ffc7fb13          	andi	s6,a5,-4
30005894:	009b6863          	bltu	s6,s1,300058a4 <_malloc_r+0x2a0>
30005898:	409b0733          	sub	a4,s6,s1
3000589c:	00f00793          	li	a5,15
300058a0:	0ae7c663          	blt	a5,a4,3000594c <_malloc_r+0x348>
300058a4:	30008cb7          	lui	s9,0x30008
300058a8:	8281aa83          	lw	s5,-2008(gp) # 30007b50 <__malloc_top_pad>
300058ac:	b30ca703          	lw	a4,-1232(s9) # 30007b30 <__malloc_sbrk_base>
300058b0:	fff00793          	li	a5,-1
300058b4:	01640a33          	add	s4,s0,s6
300058b8:	01548ab3          	add	s5,s1,s5
300058bc:	3af70863          	beq	a4,a5,30005c6c <_malloc_r+0x668>
300058c0:	000017b7          	lui	a5,0x1
300058c4:	00f78793          	addi	a5,a5,15 # 100f <__stack_size+0xf>
300058c8:	00fa8ab3          	add	s5,s5,a5
300058cc:	fffff7b7          	lui	a5,0xfffff
300058d0:	00fafab3          	and	s5,s5,a5
300058d4:	000a8593          	mv	a1,s5
300058d8:	00098513          	mv	a0,s3
300058dc:	598000ef          	jal	ra,30005e74 <_sbrk_r>
300058e0:	fff00793          	li	a5,-1
300058e4:	00050b93          	mv	s7,a0
300058e8:	20f50663          	beq	a0,a5,30005af4 <_malloc_r+0x4f0>
300058ec:	21456263          	bltu	a0,s4,30005af0 <_malloc_r+0x4ec>
300058f0:	30018c37          	lui	s8,0x30018
300058f4:	15cc0c13          	addi	s8,s8,348 # 3001815c <__malloc_current_mallinfo>
300058f8:	000c2583          	lw	a1,0(s8)
300058fc:	00ba85b3          	add	a1,s5,a1
30005900:	00bc2023          	sw	a1,0(s8)
30005904:	00058713          	mv	a4,a1
30005908:	28aa1863          	bne	s4,a0,30005b98 <_malloc_r+0x594>
3000590c:	01451793          	slli	a5,a0,0x14
30005910:	28079463          	bnez	a5,30005b98 <_malloc_r+0x594>
30005914:	00892b83          	lw	s7,8(s2)
30005918:	015b07b3          	add	a5,s6,s5
3000591c:	0017e793          	ori	a5,a5,1
30005920:	00fba223          	sw	a5,4(s7)
30005924:	8241a683          	lw	a3,-2012(gp) # 30007b4c <__malloc_max_sbrked_mem>
30005928:	00b6f463          	bgeu	a3,a1,30005930 <_malloc_r+0x32c>
3000592c:	82b1a223          	sw	a1,-2012(gp) # 30007b4c <__malloc_max_sbrked_mem>
30005930:	8201a683          	lw	a3,-2016(gp) # 30007b48 <__malloc_max_total_mem>
30005934:	00b6f463          	bgeu	a3,a1,3000593c <_malloc_r+0x338>
30005938:	82b1a023          	sw	a1,-2016(gp) # 30007b48 <__malloc_max_total_mem>
3000593c:	000b8413          	mv	s0,s7
30005940:	1bc0006f          	j	30005afc <_malloc_r+0x4f8>
30005944:	00492503          	lw	a0,4(s2)
30005948:	e81ff06f          	j	300057c8 <_malloc_r+0x1c4>
3000594c:	0014e793          	ori	a5,s1,1
30005950:	00f42223          	sw	a5,4(s0)
30005954:	009404b3          	add	s1,s0,s1
30005958:	00992423          	sw	s1,8(s2)
3000595c:	00176713          	ori	a4,a4,1
30005960:	00098513          	mv	a0,s3
30005964:	00e4a223          	sw	a4,4(s1)
30005968:	508000ef          	jal	ra,30005e70 <__malloc_unlock>
3000596c:	00840513          	addi	a0,s0,8
30005970:	d39ff06f          	j	300056a8 <_malloc_r+0xa4>
30005974:	00c42683          	lw	a3,12(s0)
30005978:	00842603          	lw	a2,8(s0)
3000597c:	d09ff06f          	j	30005684 <_malloc_r+0x80>
30005980:	00c7a403          	lw	s0,12(a5) # fffff00c <_sp+0xcfeff00c>
30005984:	00258593          	addi	a1,a1,2
30005988:	dc8786e3          	beq	a5,s0,30005754 <_malloc_r+0x150>
3000598c:	ce9ff06f          	j	30005674 <_malloc_r+0x70>
30005990:	0097d713          	srli	a4,a5,0x9
30005994:	00400693          	li	a3,4
30005998:	14e6f263          	bgeu	a3,a4,30005adc <_malloc_r+0x4d8>
3000599c:	01400693          	li	a3,20
300059a0:	30e6ec63          	bltu	a3,a4,30005cb8 <_malloc_r+0x6b4>
300059a4:	05c70613          	addi	a2,a4,92
300059a8:	05b70693          	addi	a3,a4,91
300059ac:	00361613          	slli	a2,a2,0x3
300059b0:	00c90633          	add	a2,s2,a2
300059b4:	00062703          	lw	a4,0(a2)
300059b8:	ff860613          	addi	a2,a2,-8
300059bc:	00e61863          	bne	a2,a4,300059cc <_malloc_r+0x3c8>
300059c0:	2b40006f          	j	30005c74 <_malloc_r+0x670>
300059c4:	00872703          	lw	a4,8(a4)
300059c8:	00e60863          	beq	a2,a4,300059d8 <_malloc_r+0x3d4>
300059cc:	00472683          	lw	a3,4(a4)
300059d0:	ffc6f693          	andi	a3,a3,-4
300059d4:	fed7e8e3          	bltu	a5,a3,300059c4 <_malloc_r+0x3c0>
300059d8:	00c72603          	lw	a2,12(a4)
300059dc:	00c42623          	sw	a2,12(s0)
300059e0:	00e42423          	sw	a4,8(s0)
300059e4:	00862423          	sw	s0,8(a2)
300059e8:	00872623          	sw	s0,12(a4)
300059ec:	dddff06f          	j	300057c8 <_malloc_r+0x1c4>
300059f0:	01400713          	li	a4,20
300059f4:	12f77663          	bgeu	a4,a5,30005b20 <_malloc_r+0x51c>
300059f8:	05400713          	li	a4,84
300059fc:	2cf76c63          	bltu	a4,a5,30005cd4 <_malloc_r+0x6d0>
30005a00:	00c4d793          	srli	a5,s1,0xc
30005a04:	06f78593          	addi	a1,a5,111
30005a08:	06e78513          	addi	a0,a5,110
30005a0c:	00359693          	slli	a3,a1,0x3
30005a10:	d05ff06f          	j	30005714 <_malloc_r+0x110>
30005a14:	001e0e13          	addi	t3,t3,1
30005a18:	003e7793          	andi	a5,t3,3
30005a1c:	00850513          	addi	a0,a0,8
30005a20:	10078e63          	beqz	a5,30005b3c <_malloc_r+0x538>
30005a24:	00c52783          	lw	a5,12(a0)
30005a28:	df5ff06f          	j	3000581c <_malloc_r+0x218>
30005a2c:	00842603          	lw	a2,8(s0)
30005a30:	0014e593          	ori	a1,s1,1
30005a34:	00b42223          	sw	a1,4(s0)
30005a38:	00f62623          	sw	a5,12(a2)
30005a3c:	00c7a423          	sw	a2,8(a5)
30005a40:	009404b3          	add	s1,s0,s1
30005a44:	00992a23          	sw	s1,20(s2)
30005a48:	00992823          	sw	s1,16(s2)
30005a4c:	0016e793          	ori	a5,a3,1
30005a50:	0104a623          	sw	a6,12(s1)
30005a54:	0104a423          	sw	a6,8(s1)
30005a58:	00f4a223          	sw	a5,4(s1)
30005a5c:	00e40733          	add	a4,s0,a4
30005a60:	00098513          	mv	a0,s3
30005a64:	00d72023          	sw	a3,0(a4)
30005a68:	408000ef          	jal	ra,30005e70 <__malloc_unlock>
30005a6c:	00840513          	addi	a0,s0,8
30005a70:	c39ff06f          	j	300056a8 <_malloc_r+0xa4>
30005a74:	00f407b3          	add	a5,s0,a5
30005a78:	0047a703          	lw	a4,4(a5)
30005a7c:	00098513          	mv	a0,s3
30005a80:	00176713          	ori	a4,a4,1
30005a84:	00e7a223          	sw	a4,4(a5)
30005a88:	3e8000ef          	jal	ra,30005e70 <__malloc_unlock>
30005a8c:	00840513          	addi	a0,s0,8
30005a90:	c19ff06f          	j	300056a8 <_malloc_r+0xa4>
30005a94:	0034d593          	srli	a1,s1,0x3
30005a98:	00848793          	addi	a5,s1,8
30005a9c:	bc1ff06f          	j	3000565c <_malloc_r+0x58>
30005aa0:	0014e693          	ori	a3,s1,1
30005aa4:	00d42223          	sw	a3,4(s0)
30005aa8:	009404b3          	add	s1,s0,s1
30005aac:	00992a23          	sw	s1,20(s2)
30005ab0:	00992823          	sw	s1,16(s2)
30005ab4:	00176693          	ori	a3,a4,1
30005ab8:	0104a623          	sw	a6,12(s1)
30005abc:	0104a423          	sw	a6,8(s1)
30005ac0:	00d4a223          	sw	a3,4(s1)
30005ac4:	00f407b3          	add	a5,s0,a5
30005ac8:	00098513          	mv	a0,s3
30005acc:	00e7a023          	sw	a4,0(a5)
30005ad0:	3a0000ef          	jal	ra,30005e70 <__malloc_unlock>
30005ad4:	00840513          	addi	a0,s0,8
30005ad8:	bd1ff06f          	j	300056a8 <_malloc_r+0xa4>
30005adc:	0067d713          	srli	a4,a5,0x6
30005ae0:	03970613          	addi	a2,a4,57
30005ae4:	03870693          	addi	a3,a4,56
30005ae8:	00361613          	slli	a2,a2,0x3
30005aec:	ec5ff06f          	j	300059b0 <_malloc_r+0x3ac>
30005af0:	09240a63          	beq	s0,s2,30005b84 <_malloc_r+0x580>
30005af4:	00892403          	lw	s0,8(s2)
30005af8:	00442783          	lw	a5,4(s0)
30005afc:	ffc7f793          	andi	a5,a5,-4
30005b00:	40978733          	sub	a4,a5,s1
30005b04:	0097e663          	bltu	a5,s1,30005b10 <_malloc_r+0x50c>
30005b08:	00f00793          	li	a5,15
30005b0c:	e4e7c0e3          	blt	a5,a4,3000594c <_malloc_r+0x348>
30005b10:	00098513          	mv	a0,s3
30005b14:	35c000ef          	jal	ra,30005e70 <__malloc_unlock>
30005b18:	00000513          	li	a0,0
30005b1c:	b8dff06f          	j	300056a8 <_malloc_r+0xa4>
30005b20:	05c78593          	addi	a1,a5,92
30005b24:	05b78513          	addi	a0,a5,91
30005b28:	00359693          	slli	a3,a1,0x3
30005b2c:	be9ff06f          	j	30005714 <_malloc_r+0x110>
30005b30:	00832783          	lw	a5,8(t1)
30005b34:	fff58593          	addi	a1,a1,-1
30005b38:	24679863          	bne	a5,t1,30005d88 <_malloc_r+0x784>
30005b3c:	0035f793          	andi	a5,a1,3
30005b40:	ff830313          	addi	t1,t1,-8
30005b44:	fe0796e3          	bnez	a5,30005b30 <_malloc_r+0x52c>
30005b48:	00492703          	lw	a4,4(s2)
30005b4c:	fff64793          	not	a5,a2
30005b50:	00e7f7b3          	and	a5,a5,a4
30005b54:	00f92223          	sw	a5,4(s2)
30005b58:	00161613          	slli	a2,a2,0x1
30005b5c:	d2c7e6e3          	bltu	a5,a2,30005888 <_malloc_r+0x284>
30005b60:	d20604e3          	beqz	a2,30005888 <_malloc_r+0x284>
30005b64:	00f67733          	and	a4,a2,a5
30005b68:	00071a63          	bnez	a4,30005b7c <_malloc_r+0x578>
30005b6c:	00161613          	slli	a2,a2,0x1
30005b70:	00f67733          	and	a4,a2,a5
30005b74:	004e0e13          	addi	t3,t3,4
30005b78:	fe070ae3          	beqz	a4,30005b6c <_malloc_r+0x568>
30005b7c:	000e0593          	mv	a1,t3
30005b80:	c89ff06f          	j	30005808 <_malloc_r+0x204>
30005b84:	30018c37          	lui	s8,0x30018
30005b88:	15cc0c13          	addi	s8,s8,348 # 3001815c <__malloc_current_mallinfo>
30005b8c:	000c2703          	lw	a4,0(s8)
30005b90:	00ea8733          	add	a4,s5,a4
30005b94:	00ec2023          	sw	a4,0(s8)
30005b98:	b30ca683          	lw	a3,-1232(s9)
30005b9c:	fff00793          	li	a5,-1
30005ba0:	14f68863          	beq	a3,a5,30005cf0 <_malloc_r+0x6ec>
30005ba4:	414b87b3          	sub	a5,s7,s4
30005ba8:	00e787b3          	add	a5,a5,a4
30005bac:	00fc2023          	sw	a5,0(s8)
30005bb0:	007bfc93          	andi	s9,s7,7
30005bb4:	0c0c8c63          	beqz	s9,30005c8c <_malloc_r+0x688>
30005bb8:	00001737          	lui	a4,0x1
30005bbc:	419b8bb3          	sub	s7,s7,s9
30005bc0:	00870593          	addi	a1,a4,8 # 1008 <__stack_size+0x8>
30005bc4:	008b8b93          	addi	s7,s7,8
30005bc8:	419585b3          	sub	a1,a1,s9
30005bcc:	015b8ab3          	add	s5,s7,s5
30005bd0:	415585b3          	sub	a1,a1,s5
30005bd4:	fff70713          	addi	a4,a4,-1
30005bd8:	00e5fa33          	and	s4,a1,a4
30005bdc:	000a0593          	mv	a1,s4
30005be0:	00098513          	mv	a0,s3
30005be4:	290000ef          	jal	ra,30005e74 <_sbrk_r>
30005be8:	fff00793          	li	a5,-1
30005bec:	14f50863          	beq	a0,a5,30005d3c <_malloc_r+0x738>
30005bf0:	41750533          	sub	a0,a0,s7
30005bf4:	01450ab3          	add	s5,a0,s4
30005bf8:	000c2703          	lw	a4,0(s8)
30005bfc:	01792423          	sw	s7,8(s2)
30005c00:	001ae793          	ori	a5,s5,1
30005c04:	00ea05b3          	add	a1,s4,a4
30005c08:	00bc2023          	sw	a1,0(s8)
30005c0c:	00fba223          	sw	a5,4(s7)
30005c10:	d1240ae3          	beq	s0,s2,30005924 <_malloc_r+0x320>
30005c14:	00f00693          	li	a3,15
30005c18:	0f66f063          	bgeu	a3,s6,30005cf8 <_malloc_r+0x6f4>
30005c1c:	00442703          	lw	a4,4(s0)
30005c20:	ff4b0793          	addi	a5,s6,-12
30005c24:	ff87f793          	andi	a5,a5,-8
30005c28:	00177713          	andi	a4,a4,1
30005c2c:	00f76733          	or	a4,a4,a5
30005c30:	00e42223          	sw	a4,4(s0)
30005c34:	00500613          	li	a2,5
30005c38:	00f40733          	add	a4,s0,a5
30005c3c:	00c72223          	sw	a2,4(a4)
30005c40:	00c72423          	sw	a2,8(a4)
30005c44:	00f6e663          	bltu	a3,a5,30005c50 <_malloc_r+0x64c>
30005c48:	004ba783          	lw	a5,4(s7)
30005c4c:	cd9ff06f          	j	30005924 <_malloc_r+0x320>
30005c50:	00840593          	addi	a1,s0,8
30005c54:	00098513          	mv	a0,s3
30005c58:	ae8ff0ef          	jal	ra,30004f40 <_free_r>
30005c5c:	00892b83          	lw	s7,8(s2)
30005c60:	000c2583          	lw	a1,0(s8)
30005c64:	004ba783          	lw	a5,4(s7)
30005c68:	cbdff06f          	j	30005924 <_malloc_r+0x320>
30005c6c:	010a8a93          	addi	s5,s5,16
30005c70:	c65ff06f          	j	300058d4 <_malloc_r+0x2d0>
30005c74:	4026d693          	srai	a3,a3,0x2
30005c78:	00100793          	li	a5,1
30005c7c:	00d797b3          	sll	a5,a5,a3
30005c80:	00f56533          	or	a0,a0,a5
30005c84:	00a92223          	sw	a0,4(s2)
30005c88:	d55ff06f          	j	300059dc <_malloc_r+0x3d8>
30005c8c:	015b85b3          	add	a1,s7,s5
30005c90:	40b005b3          	neg	a1,a1
30005c94:	01459593          	slli	a1,a1,0x14
30005c98:	0145da13          	srli	s4,a1,0x14
30005c9c:	000a0593          	mv	a1,s4
30005ca0:	00098513          	mv	a0,s3
30005ca4:	1d0000ef          	jal	ra,30005e74 <_sbrk_r>
30005ca8:	fff00793          	li	a5,-1
30005cac:	f4f512e3          	bne	a0,a5,30005bf0 <_malloc_r+0x5ec>
30005cb0:	00000a13          	li	s4,0
30005cb4:	f45ff06f          	j	30005bf8 <_malloc_r+0x5f4>
30005cb8:	05400693          	li	a3,84
30005cbc:	04e6e463          	bltu	a3,a4,30005d04 <_malloc_r+0x700>
30005cc0:	00c7d713          	srli	a4,a5,0xc
30005cc4:	06f70613          	addi	a2,a4,111
30005cc8:	06e70693          	addi	a3,a4,110
30005ccc:	00361613          	slli	a2,a2,0x3
30005cd0:	ce1ff06f          	j	300059b0 <_malloc_r+0x3ac>
30005cd4:	15400713          	li	a4,340
30005cd8:	04f76463          	bltu	a4,a5,30005d20 <_malloc_r+0x71c>
30005cdc:	00f4d793          	srli	a5,s1,0xf
30005ce0:	07878593          	addi	a1,a5,120
30005ce4:	07778513          	addi	a0,a5,119
30005ce8:	00359693          	slli	a3,a1,0x3
30005cec:	a29ff06f          	j	30005714 <_malloc_r+0x110>
30005cf0:	b37ca823          	sw	s7,-1232(s9)
30005cf4:	ebdff06f          	j	30005bb0 <_malloc_r+0x5ac>
30005cf8:	00100793          	li	a5,1
30005cfc:	00fba223          	sw	a5,4(s7)
30005d00:	e11ff06f          	j	30005b10 <_malloc_r+0x50c>
30005d04:	15400693          	li	a3,340
30005d08:	04e6e463          	bltu	a3,a4,30005d50 <_malloc_r+0x74c>
30005d0c:	00f7d713          	srli	a4,a5,0xf
30005d10:	07870613          	addi	a2,a4,120
30005d14:	07770693          	addi	a3,a4,119
30005d18:	00361613          	slli	a2,a2,0x3
30005d1c:	c95ff06f          	j	300059b0 <_malloc_r+0x3ac>
30005d20:	55400713          	li	a4,1364
30005d24:	04f76463          	bltu	a4,a5,30005d6c <_malloc_r+0x768>
30005d28:	0124d793          	srli	a5,s1,0x12
30005d2c:	07d78593          	addi	a1,a5,125
30005d30:	07c78513          	addi	a0,a5,124
30005d34:	00359693          	slli	a3,a1,0x3
30005d38:	9ddff06f          	j	30005714 <_malloc_r+0x110>
30005d3c:	ff8c8c93          	addi	s9,s9,-8
30005d40:	019a8ab3          	add	s5,s5,s9
30005d44:	417a8ab3          	sub	s5,s5,s7
30005d48:	00000a13          	li	s4,0
30005d4c:	eadff06f          	j	30005bf8 <_malloc_r+0x5f4>
30005d50:	55400693          	li	a3,1364
30005d54:	02e6e463          	bltu	a3,a4,30005d7c <_malloc_r+0x778>
30005d58:	0127d713          	srli	a4,a5,0x12
30005d5c:	07d70613          	addi	a2,a4,125
30005d60:	07c70693          	addi	a3,a4,124
30005d64:	00361613          	slli	a2,a2,0x3
30005d68:	c49ff06f          	j	300059b0 <_malloc_r+0x3ac>
30005d6c:	3f800693          	li	a3,1016
30005d70:	07f00593          	li	a1,127
30005d74:	07e00513          	li	a0,126
30005d78:	99dff06f          	j	30005714 <_malloc_r+0x110>
30005d7c:	3f800613          	li	a2,1016
30005d80:	07e00693          	li	a3,126
30005d84:	c2dff06f          	j	300059b0 <_malloc_r+0x3ac>
30005d88:	00492783          	lw	a5,4(s2)
30005d8c:	dcdff06f          	j	30005b58 <_malloc_r+0x554>

30005d90 <memset>:
30005d90:	00f00313          	li	t1,15
30005d94:	00050713          	mv	a4,a0
30005d98:	02c37e63          	bgeu	t1,a2,30005dd4 <memset+0x44>
30005d9c:	00f77793          	andi	a5,a4,15
30005da0:	0a079063          	bnez	a5,30005e40 <memset+0xb0>
30005da4:	08059263          	bnez	a1,30005e28 <memset+0x98>
30005da8:	ff067693          	andi	a3,a2,-16
30005dac:	00f67613          	andi	a2,a2,15
30005db0:	00e686b3          	add	a3,a3,a4
30005db4:	00b72023          	sw	a1,0(a4)
30005db8:	00b72223          	sw	a1,4(a4)
30005dbc:	00b72423          	sw	a1,8(a4)
30005dc0:	00b72623          	sw	a1,12(a4)
30005dc4:	01070713          	addi	a4,a4,16
30005dc8:	fed766e3          	bltu	a4,a3,30005db4 <memset+0x24>
30005dcc:	00061463          	bnez	a2,30005dd4 <memset+0x44>
30005dd0:	00008067          	ret
30005dd4:	40c306b3          	sub	a3,t1,a2
30005dd8:	00269693          	slli	a3,a3,0x2
30005ddc:	00000297          	auipc	t0,0x0
30005de0:	005686b3          	add	a3,a3,t0
30005de4:	00c68067          	jr	12(a3)
30005de8:	00b70723          	sb	a1,14(a4)
30005dec:	00b706a3          	sb	a1,13(a4)
30005df0:	00b70623          	sb	a1,12(a4)
30005df4:	00b705a3          	sb	a1,11(a4)
30005df8:	00b70523          	sb	a1,10(a4)
30005dfc:	00b704a3          	sb	a1,9(a4)
30005e00:	00b70423          	sb	a1,8(a4)
30005e04:	00b703a3          	sb	a1,7(a4)
30005e08:	00b70323          	sb	a1,6(a4)
30005e0c:	00b702a3          	sb	a1,5(a4)
30005e10:	00b70223          	sb	a1,4(a4)
30005e14:	00b701a3          	sb	a1,3(a4)
30005e18:	00b70123          	sb	a1,2(a4)
30005e1c:	00b700a3          	sb	a1,1(a4)
30005e20:	00b70023          	sb	a1,0(a4)
30005e24:	00008067          	ret
30005e28:	0ff5f593          	zext.b	a1,a1
30005e2c:	00859693          	slli	a3,a1,0x8
30005e30:	00d5e5b3          	or	a1,a1,a3
30005e34:	01059693          	slli	a3,a1,0x10
30005e38:	00d5e5b3          	or	a1,a1,a3
30005e3c:	f6dff06f          	j	30005da8 <memset+0x18>
30005e40:	00279693          	slli	a3,a5,0x2
30005e44:	00000297          	auipc	t0,0x0
30005e48:	005686b3          	add	a3,a3,t0
30005e4c:	00008293          	mv	t0,ra
30005e50:	fa0680e7          	jalr	-96(a3)
30005e54:	00028093          	mv	ra,t0
30005e58:	ff078793          	addi	a5,a5,-16
30005e5c:	40f70733          	sub	a4,a4,a5
30005e60:	00f60633          	add	a2,a2,a5
30005e64:	f6c378e3          	bgeu	t1,a2,30005dd4 <memset+0x44>
30005e68:	f3dff06f          	j	30005da4 <memset+0x14>

30005e6c <__malloc_lock>:
30005e6c:	00008067          	ret

30005e70 <__malloc_unlock>:
30005e70:	00008067          	ret

30005e74 <_sbrk_r>:
30005e74:	ff010113          	addi	sp,sp,-16
30005e78:	00812423          	sw	s0,8(sp)
30005e7c:	00912223          	sw	s1,4(sp)
30005e80:	00050413          	mv	s0,a0
30005e84:	00058513          	mv	a0,a1
30005e88:	00112623          	sw	ra,12(sp)
30005e8c:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
30005e90:	071000ef          	jal	ra,30006700 <_sbrk>
30005e94:	fff00793          	li	a5,-1
30005e98:	00f50c63          	beq	a0,a5,30005eb0 <_sbrk_r+0x3c>
30005e9c:	00c12083          	lw	ra,12(sp)
30005ea0:	00812403          	lw	s0,8(sp)
30005ea4:	00412483          	lw	s1,4(sp)
30005ea8:	01010113          	addi	sp,sp,16
30005eac:	00008067          	ret
30005eb0:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
30005eb4:	fe0784e3          	beqz	a5,30005e9c <_sbrk_r+0x28>
30005eb8:	00c12083          	lw	ra,12(sp)
30005ebc:	00f42023          	sw	a5,0(s0)
30005ec0:	00812403          	lw	s0,8(sp)
30005ec4:	00412483          	lw	s1,4(sp)
30005ec8:	01010113          	addi	sp,sp,16
30005ecc:	00008067          	ret

30005ed0 <__sread>:
30005ed0:	ff010113          	addi	sp,sp,-16
30005ed4:	00812423          	sw	s0,8(sp)
30005ed8:	00058413          	mv	s0,a1
30005edc:	00e59583          	lh	a1,14(a1)
30005ee0:	00112623          	sw	ra,12(sp)
30005ee4:	464000ef          	jal	ra,30006348 <_read_r>
30005ee8:	02054063          	bltz	a0,30005f08 <__sread+0x38>
30005eec:	05042783          	lw	a5,80(s0)
30005ef0:	00c12083          	lw	ra,12(sp)
30005ef4:	00a787b3          	add	a5,a5,a0
30005ef8:	04f42823          	sw	a5,80(s0)
30005efc:	00812403          	lw	s0,8(sp)
30005f00:	01010113          	addi	sp,sp,16
30005f04:	00008067          	ret
30005f08:	00c45783          	lhu	a5,12(s0)
30005f0c:	fffff737          	lui	a4,0xfffff
30005f10:	fff70713          	addi	a4,a4,-1 # ffffefff <_sp+0xcfefefff>
30005f14:	00e7f7b3          	and	a5,a5,a4
30005f18:	00c12083          	lw	ra,12(sp)
30005f1c:	00f41623          	sh	a5,12(s0)
30005f20:	00812403          	lw	s0,8(sp)
30005f24:	01010113          	addi	sp,sp,16
30005f28:	00008067          	ret

30005f2c <__seofread>:
30005f2c:	00000513          	li	a0,0
30005f30:	00008067          	ret

30005f34 <__swrite>:
30005f34:	00c59783          	lh	a5,12(a1)
30005f38:	fe010113          	addi	sp,sp,-32
30005f3c:	00812c23          	sw	s0,24(sp)
30005f40:	00912a23          	sw	s1,20(sp)
30005f44:	01212823          	sw	s2,16(sp)
30005f48:	01312623          	sw	s3,12(sp)
30005f4c:	00112e23          	sw	ra,28(sp)
30005f50:	1007f713          	andi	a4,a5,256
30005f54:	00058413          	mv	s0,a1
30005f58:	00050493          	mv	s1,a0
30005f5c:	00060913          	mv	s2,a2
30005f60:	00068993          	mv	s3,a3
30005f64:	04071063          	bnez	a4,30005fa4 <__swrite+0x70>
30005f68:	fffff737          	lui	a4,0xfffff
30005f6c:	fff70713          	addi	a4,a4,-1 # ffffefff <_sp+0xcfefefff>
30005f70:	00e7f7b3          	and	a5,a5,a4
30005f74:	00e41583          	lh	a1,14(s0)
30005f78:	00f41623          	sh	a5,12(s0)
30005f7c:	01812403          	lw	s0,24(sp)
30005f80:	01c12083          	lw	ra,28(sp)
30005f84:	00098693          	mv	a3,s3
30005f88:	00090613          	mv	a2,s2
30005f8c:	00c12983          	lw	s3,12(sp)
30005f90:	01012903          	lw	s2,16(sp)
30005f94:	00048513          	mv	a0,s1
30005f98:	01412483          	lw	s1,20(sp)
30005f9c:	02010113          	addi	sp,sp,32
30005fa0:	09c0006f          	j	3000603c <_write_r>
30005fa4:	00e59583          	lh	a1,14(a1)
30005fa8:	00200693          	li	a3,2
30005fac:	00000613          	li	a2,0
30005fb0:	330000ef          	jal	ra,300062e0 <_lseek_r>
30005fb4:	00c41783          	lh	a5,12(s0)
30005fb8:	fb1ff06f          	j	30005f68 <__swrite+0x34>

30005fbc <__sseek>:
30005fbc:	ff010113          	addi	sp,sp,-16
30005fc0:	00812423          	sw	s0,8(sp)
30005fc4:	00058413          	mv	s0,a1
30005fc8:	00e59583          	lh	a1,14(a1)
30005fcc:	00112623          	sw	ra,12(sp)
30005fd0:	310000ef          	jal	ra,300062e0 <_lseek_r>
30005fd4:	fff00793          	li	a5,-1
30005fd8:	02f50863          	beq	a0,a5,30006008 <__sseek+0x4c>
30005fdc:	00c45783          	lhu	a5,12(s0)
30005fe0:	00001737          	lui	a4,0x1
30005fe4:	00c12083          	lw	ra,12(sp)
30005fe8:	00e7e7b3          	or	a5,a5,a4
30005fec:	01079793          	slli	a5,a5,0x10
30005ff0:	4107d793          	srai	a5,a5,0x10
30005ff4:	04a42823          	sw	a0,80(s0)
30005ff8:	00f41623          	sh	a5,12(s0)
30005ffc:	00812403          	lw	s0,8(sp)
30006000:	01010113          	addi	sp,sp,16
30006004:	00008067          	ret
30006008:	00c45783          	lhu	a5,12(s0)
3000600c:	fffff737          	lui	a4,0xfffff
30006010:	fff70713          	addi	a4,a4,-1 # ffffefff <_sp+0xcfefefff>
30006014:	00e7f7b3          	and	a5,a5,a4
30006018:	01079793          	slli	a5,a5,0x10
3000601c:	4107d793          	srai	a5,a5,0x10
30006020:	00c12083          	lw	ra,12(sp)
30006024:	00f41623          	sh	a5,12(s0)
30006028:	00812403          	lw	s0,8(sp)
3000602c:	01010113          	addi	sp,sp,16
30006030:	00008067          	ret

30006034 <__sclose>:
30006034:	00e59583          	lh	a1,14(a1)
30006038:	06c0006f          	j	300060a4 <_close_r>

3000603c <_write_r>:
3000603c:	ff010113          	addi	sp,sp,-16
30006040:	00058713          	mv	a4,a1
30006044:	00812423          	sw	s0,8(sp)
30006048:	00912223          	sw	s1,4(sp)
3000604c:	00060593          	mv	a1,a2
30006050:	00050413          	mv	s0,a0
30006054:	00068613          	mv	a2,a3
30006058:	00070513          	mv	a0,a4
3000605c:	00112623          	sw	ra,12(sp)
30006060:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
30006064:	714000ef          	jal	ra,30006778 <_write>
30006068:	fff00793          	li	a5,-1
3000606c:	00f50c63          	beq	a0,a5,30006084 <_write_r+0x48>
30006070:	00c12083          	lw	ra,12(sp)
30006074:	00812403          	lw	s0,8(sp)
30006078:	00412483          	lw	s1,4(sp)
3000607c:	01010113          	addi	sp,sp,16
30006080:	00008067          	ret
30006084:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
30006088:	fe0784e3          	beqz	a5,30006070 <_write_r+0x34>
3000608c:	00c12083          	lw	ra,12(sp)
30006090:	00f42023          	sw	a5,0(s0)
30006094:	00812403          	lw	s0,8(sp)
30006098:	00412483          	lw	s1,4(sp)
3000609c:	01010113          	addi	sp,sp,16
300060a0:	00008067          	ret

300060a4 <_close_r>:
300060a4:	ff010113          	addi	sp,sp,-16
300060a8:	00812423          	sw	s0,8(sp)
300060ac:	00912223          	sw	s1,4(sp)
300060b0:	00050413          	mv	s0,a0
300060b4:	00058513          	mv	a0,a1
300060b8:	00112623          	sw	ra,12(sp)
300060bc:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
300060c0:	4a4000ef          	jal	ra,30006564 <_close>
300060c4:	fff00793          	li	a5,-1
300060c8:	00f50c63          	beq	a0,a5,300060e0 <_close_r+0x3c>
300060cc:	00c12083          	lw	ra,12(sp)
300060d0:	00812403          	lw	s0,8(sp)
300060d4:	00412483          	lw	s1,4(sp)
300060d8:	01010113          	addi	sp,sp,16
300060dc:	00008067          	ret
300060e0:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
300060e4:	fe0784e3          	beqz	a5,300060cc <_close_r+0x28>
300060e8:	00c12083          	lw	ra,12(sp)
300060ec:	00f42023          	sw	a5,0(s0)
300060f0:	00812403          	lw	s0,8(sp)
300060f4:	00412483          	lw	s1,4(sp)
300060f8:	01010113          	addi	sp,sp,16
300060fc:	00008067          	ret

30006100 <_fclose_r>:
30006100:	ff010113          	addi	sp,sp,-16
30006104:	00112623          	sw	ra,12(sp)
30006108:	00812423          	sw	s0,8(sp)
3000610c:	00912223          	sw	s1,4(sp)
30006110:	01212023          	sw	s2,0(sp)
30006114:	02058063          	beqz	a1,30006134 <_fclose_r+0x34>
30006118:	00058413          	mv	s0,a1
3000611c:	00050493          	mv	s1,a0
30006120:	00050663          	beqz	a0,3000612c <_fclose_r+0x2c>
30006124:	03852783          	lw	a5,56(a0)
30006128:	0a078c63          	beqz	a5,300061e0 <_fclose_r+0xe0>
3000612c:	00c41783          	lh	a5,12(s0)
30006130:	02079263          	bnez	a5,30006154 <_fclose_r+0x54>
30006134:	00c12083          	lw	ra,12(sp)
30006138:	00812403          	lw	s0,8(sp)
3000613c:	00000913          	li	s2,0
30006140:	00412483          	lw	s1,4(sp)
30006144:	00090513          	mv	a0,s2
30006148:	00012903          	lw	s2,0(sp)
3000614c:	01010113          	addi	sp,sp,16
30006150:	00008067          	ret
30006154:	00040593          	mv	a1,s0
30006158:	00048513          	mv	a0,s1
3000615c:	de8fe0ef          	jal	ra,30004744 <__sflush_r>
30006160:	02c42783          	lw	a5,44(s0)
30006164:	00050913          	mv	s2,a0
30006168:	00078a63          	beqz	a5,3000617c <_fclose_r+0x7c>
3000616c:	01c42583          	lw	a1,28(s0)
30006170:	00048513          	mv	a0,s1
30006174:	000780e7          	jalr	a5
30006178:	06054c63          	bltz	a0,300061f0 <_fclose_r+0xf0>
3000617c:	00c45783          	lhu	a5,12(s0)
30006180:	0807f793          	andi	a5,a5,128
30006184:	06079e63          	bnez	a5,30006200 <_fclose_r+0x100>
30006188:	03042583          	lw	a1,48(s0)
3000618c:	00058c63          	beqz	a1,300061a4 <_fclose_r+0xa4>
30006190:	04040793          	addi	a5,s0,64
30006194:	00f58663          	beq	a1,a5,300061a0 <_fclose_r+0xa0>
30006198:	00048513          	mv	a0,s1
3000619c:	da5fe0ef          	jal	ra,30004f40 <_free_r>
300061a0:	02042823          	sw	zero,48(s0)
300061a4:	04442583          	lw	a1,68(s0)
300061a8:	00058863          	beqz	a1,300061b8 <_fclose_r+0xb8>
300061ac:	00048513          	mv	a0,s1
300061b0:	d91fe0ef          	jal	ra,30004f40 <_free_r>
300061b4:	04042223          	sw	zero,68(s0)
300061b8:	c11fe0ef          	jal	ra,30004dc8 <__sfp_lock_acquire>
300061bc:	00041623          	sh	zero,12(s0)
300061c0:	c0dfe0ef          	jal	ra,30004dcc <__sfp_lock_release>
300061c4:	00c12083          	lw	ra,12(sp)
300061c8:	00812403          	lw	s0,8(sp)
300061cc:	00412483          	lw	s1,4(sp)
300061d0:	00090513          	mv	a0,s2
300061d4:	00012903          	lw	s2,0(sp)
300061d8:	01010113          	addi	sp,sp,16
300061dc:	00008067          	ret
300061e0:	bd9fe0ef          	jal	ra,30004db8 <__sinit>
300061e4:	00c41783          	lh	a5,12(s0)
300061e8:	f40786e3          	beqz	a5,30006134 <_fclose_r+0x34>
300061ec:	f69ff06f          	j	30006154 <_fclose_r+0x54>
300061f0:	00c45783          	lhu	a5,12(s0)
300061f4:	fff00913          	li	s2,-1
300061f8:	0807f793          	andi	a5,a5,128
300061fc:	f80786e3          	beqz	a5,30006188 <_fclose_r+0x88>
30006200:	01042583          	lw	a1,16(s0)
30006204:	00048513          	mv	a0,s1
30006208:	d39fe0ef          	jal	ra,30004f40 <_free_r>
3000620c:	f7dff06f          	j	30006188 <_fclose_r+0x88>

30006210 <fclose>:
30006210:	300087b7          	lui	a5,0x30008
30006214:	00050593          	mv	a1,a0
30006218:	b2c7a503          	lw	a0,-1236(a5) # 30007b2c <_impure_ptr>
3000621c:	ee5ff06f          	j	30006100 <_fclose_r>

30006220 <_fstat_r>:
30006220:	ff010113          	addi	sp,sp,-16
30006224:	00058713          	mv	a4,a1
30006228:	00812423          	sw	s0,8(sp)
3000622c:	00912223          	sw	s1,4(sp)
30006230:	00050413          	mv	s0,a0
30006234:	00060593          	mv	a1,a2
30006238:	00070513          	mv	a0,a4
3000623c:	00112623          	sw	ra,12(sp)
30006240:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
30006244:	394000ef          	jal	ra,300065d8 <_fstat>
30006248:	fff00793          	li	a5,-1
3000624c:	00f50c63          	beq	a0,a5,30006264 <_fstat_r+0x44>
30006250:	00c12083          	lw	ra,12(sp)
30006254:	00812403          	lw	s0,8(sp)
30006258:	00412483          	lw	s1,4(sp)
3000625c:	01010113          	addi	sp,sp,16
30006260:	00008067          	ret
30006264:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
30006268:	fe0784e3          	beqz	a5,30006250 <_fstat_r+0x30>
3000626c:	00c12083          	lw	ra,12(sp)
30006270:	00f42023          	sw	a5,0(s0)
30006274:	00812403          	lw	s0,8(sp)
30006278:	00412483          	lw	s1,4(sp)
3000627c:	01010113          	addi	sp,sp,16
30006280:	00008067          	ret

30006284 <_isatty_r>:
30006284:	ff010113          	addi	sp,sp,-16
30006288:	00812423          	sw	s0,8(sp)
3000628c:	00912223          	sw	s1,4(sp)
30006290:	00050413          	mv	s0,a0
30006294:	00058513          	mv	a0,a1
30006298:	00112623          	sw	ra,12(sp)
3000629c:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
300062a0:	398000ef          	jal	ra,30006638 <_isatty>
300062a4:	fff00793          	li	a5,-1
300062a8:	00f50c63          	beq	a0,a5,300062c0 <_isatty_r+0x3c>
300062ac:	00c12083          	lw	ra,12(sp)
300062b0:	00812403          	lw	s0,8(sp)
300062b4:	00412483          	lw	s1,4(sp)
300062b8:	01010113          	addi	sp,sp,16
300062bc:	00008067          	ret
300062c0:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
300062c4:	fe0784e3          	beqz	a5,300062ac <_isatty_r+0x28>
300062c8:	00c12083          	lw	ra,12(sp)
300062cc:	00f42023          	sw	a5,0(s0)
300062d0:	00812403          	lw	s0,8(sp)
300062d4:	00412483          	lw	s1,4(sp)
300062d8:	01010113          	addi	sp,sp,16
300062dc:	00008067          	ret

300062e0 <_lseek_r>:
300062e0:	ff010113          	addi	sp,sp,-16
300062e4:	00058713          	mv	a4,a1
300062e8:	00812423          	sw	s0,8(sp)
300062ec:	00912223          	sw	s1,4(sp)
300062f0:	00060593          	mv	a1,a2
300062f4:	00050413          	mv	s0,a0
300062f8:	00068613          	mv	a2,a3
300062fc:	00070513          	mv	a0,a4
30006300:	00112623          	sw	ra,12(sp)
30006304:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
30006308:	370000ef          	jal	ra,30006678 <_lseek>
3000630c:	fff00793          	li	a5,-1
30006310:	00f50c63          	beq	a0,a5,30006328 <_lseek_r+0x48>
30006314:	00c12083          	lw	ra,12(sp)
30006318:	00812403          	lw	s0,8(sp)
3000631c:	00412483          	lw	s1,4(sp)
30006320:	01010113          	addi	sp,sp,16
30006324:	00008067          	ret
30006328:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
3000632c:	fe0784e3          	beqz	a5,30006314 <_lseek_r+0x34>
30006330:	00c12083          	lw	ra,12(sp)
30006334:	00f42023          	sw	a5,0(s0)
30006338:	00812403          	lw	s0,8(sp)
3000633c:	00412483          	lw	s1,4(sp)
30006340:	01010113          	addi	sp,sp,16
30006344:	00008067          	ret

30006348 <_read_r>:
30006348:	ff010113          	addi	sp,sp,-16
3000634c:	00058713          	mv	a4,a1
30006350:	00812423          	sw	s0,8(sp)
30006354:	00912223          	sw	s1,4(sp)
30006358:	00060593          	mv	a1,a2
3000635c:	00050413          	mv	s0,a0
30006360:	00068613          	mv	a2,a3
30006364:	00070513          	mv	a0,a4
30006368:	00112623          	sw	ra,12(sp)
3000636c:	8201a623          	sw	zero,-2004(gp) # 30007b54 <errno>
30006370:	34c000ef          	jal	ra,300066bc <_read>
30006374:	fff00793          	li	a5,-1
30006378:	00f50c63          	beq	a0,a5,30006390 <_read_r+0x48>
3000637c:	00c12083          	lw	ra,12(sp)
30006380:	00812403          	lw	s0,8(sp)
30006384:	00412483          	lw	s1,4(sp)
30006388:	01010113          	addi	sp,sp,16
3000638c:	00008067          	ret
30006390:	82c1a783          	lw	a5,-2004(gp) # 30007b54 <errno>
30006394:	fe0784e3          	beqz	a5,3000637c <_read_r+0x34>
30006398:	00c12083          	lw	ra,12(sp)
3000639c:	00f42023          	sw	a5,0(s0)
300063a0:	00812403          	lw	s0,8(sp)
300063a4:	00412483          	lw	s1,4(sp)
300063a8:	01010113          	addi	sp,sp,16
300063ac:	00008067          	ret

300063b0 <cleanup_glue>:
300063b0:	fe010113          	addi	sp,sp,-32
300063b4:	01212823          	sw	s2,16(sp)
300063b8:	0005a903          	lw	s2,0(a1)
300063bc:	00812c23          	sw	s0,24(sp)
300063c0:	00912a23          	sw	s1,20(sp)
300063c4:	00112e23          	sw	ra,28(sp)
300063c8:	01312623          	sw	s3,12(sp)
300063cc:	01412423          	sw	s4,8(sp)
300063d0:	00058413          	mv	s0,a1
300063d4:	00050493          	mv	s1,a0
300063d8:	04090263          	beqz	s2,3000641c <cleanup_glue+0x6c>
300063dc:	00092983          	lw	s3,0(s2)
300063e0:	02098863          	beqz	s3,30006410 <cleanup_glue+0x60>
300063e4:	0009aa03          	lw	s4,0(s3)
300063e8:	000a0e63          	beqz	s4,30006404 <cleanup_glue+0x54>
300063ec:	000a2583          	lw	a1,0(s4)
300063f0:	00058463          	beqz	a1,300063f8 <cleanup_glue+0x48>
300063f4:	fbdff0ef          	jal	ra,300063b0 <cleanup_glue>
300063f8:	000a0593          	mv	a1,s4
300063fc:	00048513          	mv	a0,s1
30006400:	b41fe0ef          	jal	ra,30004f40 <_free_r>
30006404:	00098593          	mv	a1,s3
30006408:	00048513          	mv	a0,s1
3000640c:	b35fe0ef          	jal	ra,30004f40 <_free_r>
30006410:	00090593          	mv	a1,s2
30006414:	00048513          	mv	a0,s1
30006418:	b29fe0ef          	jal	ra,30004f40 <_free_r>
3000641c:	00040593          	mv	a1,s0
30006420:	01812403          	lw	s0,24(sp)
30006424:	01c12083          	lw	ra,28(sp)
30006428:	01012903          	lw	s2,16(sp)
3000642c:	00c12983          	lw	s3,12(sp)
30006430:	00812a03          	lw	s4,8(sp)
30006434:	00048513          	mv	a0,s1
30006438:	01412483          	lw	s1,20(sp)
3000643c:	02010113          	addi	sp,sp,32
30006440:	b01fe06f          	j	30004f40 <_free_r>

30006444 <_reclaim_reent>:
30006444:	300087b7          	lui	a5,0x30008
30006448:	b2c7a783          	lw	a5,-1236(a5) # 30007b2c <_impure_ptr>
3000644c:	10a78a63          	beq	a5,a0,30006560 <_reclaim_reent+0x11c>
30006450:	04c52583          	lw	a1,76(a0)
30006454:	fe010113          	addi	sp,sp,-32
30006458:	00912a23          	sw	s1,20(sp)
3000645c:	00112e23          	sw	ra,28(sp)
30006460:	00812c23          	sw	s0,24(sp)
30006464:	01212823          	sw	s2,16(sp)
30006468:	01312623          	sw	s3,12(sp)
3000646c:	00050493          	mv	s1,a0
30006470:	04058063          	beqz	a1,300064b0 <_reclaim_reent+0x6c>
30006474:	00000913          	li	s2,0
30006478:	08000993          	li	s3,128
3000647c:	012587b3          	add	a5,a1,s2
30006480:	0007a403          	lw	s0,0(a5)
30006484:	00040e63          	beqz	s0,300064a0 <_reclaim_reent+0x5c>
30006488:	00040593          	mv	a1,s0
3000648c:	00042403          	lw	s0,0(s0)
30006490:	00048513          	mv	a0,s1
30006494:	aadfe0ef          	jal	ra,30004f40 <_free_r>
30006498:	fe0418e3          	bnez	s0,30006488 <_reclaim_reent+0x44>
3000649c:	04c4a583          	lw	a1,76(s1)
300064a0:	00490913          	addi	s2,s2,4
300064a4:	fd391ce3          	bne	s2,s3,3000647c <_reclaim_reent+0x38>
300064a8:	00048513          	mv	a0,s1
300064ac:	a95fe0ef          	jal	ra,30004f40 <_free_r>
300064b0:	0404a583          	lw	a1,64(s1)
300064b4:	00058663          	beqz	a1,300064c0 <_reclaim_reent+0x7c>
300064b8:	00048513          	mv	a0,s1
300064bc:	a85fe0ef          	jal	ra,30004f40 <_free_r>
300064c0:	1484a403          	lw	s0,328(s1)
300064c4:	02040063          	beqz	s0,300064e4 <_reclaim_reent+0xa0>
300064c8:	14c48913          	addi	s2,s1,332
300064cc:	01240c63          	beq	s0,s2,300064e4 <_reclaim_reent+0xa0>
300064d0:	00040593          	mv	a1,s0
300064d4:	00042403          	lw	s0,0(s0)
300064d8:	00048513          	mv	a0,s1
300064dc:	a65fe0ef          	jal	ra,30004f40 <_free_r>
300064e0:	fe8918e3          	bne	s2,s0,300064d0 <_reclaim_reent+0x8c>
300064e4:	0544a583          	lw	a1,84(s1)
300064e8:	00058663          	beqz	a1,300064f4 <_reclaim_reent+0xb0>
300064ec:	00048513          	mv	a0,s1
300064f0:	a51fe0ef          	jal	ra,30004f40 <_free_r>
300064f4:	0384a783          	lw	a5,56(s1)
300064f8:	04078663          	beqz	a5,30006544 <_reclaim_reent+0x100>
300064fc:	03c4a783          	lw	a5,60(s1)
30006500:	00048513          	mv	a0,s1
30006504:	000780e7          	jalr	a5
30006508:	2e04a403          	lw	s0,736(s1)
3000650c:	02040c63          	beqz	s0,30006544 <_reclaim_reent+0x100>
30006510:	00042583          	lw	a1,0(s0)
30006514:	00058663          	beqz	a1,30006520 <_reclaim_reent+0xdc>
30006518:	00048513          	mv	a0,s1
3000651c:	e95ff0ef          	jal	ra,300063b0 <cleanup_glue>
30006520:	00040593          	mv	a1,s0
30006524:	01812403          	lw	s0,24(sp)
30006528:	01c12083          	lw	ra,28(sp)
3000652c:	01012903          	lw	s2,16(sp)
30006530:	00c12983          	lw	s3,12(sp)
30006534:	00048513          	mv	a0,s1
30006538:	01412483          	lw	s1,20(sp)
3000653c:	02010113          	addi	sp,sp,32
30006540:	a01fe06f          	j	30004f40 <_free_r>
30006544:	01c12083          	lw	ra,28(sp)
30006548:	01812403          	lw	s0,24(sp)
3000654c:	01412483          	lw	s1,20(sp)
30006550:	01012903          	lw	s2,16(sp)
30006554:	00c12983          	lw	s3,12(sp)
30006558:	02010113          	addi	sp,sp,32
3000655c:	00008067          	ret
30006560:	00008067          	ret

30006564 <_close>:
30006564:	ff010113          	addi	sp,sp,-16
30006568:	00112623          	sw	ra,12(sp)
3000656c:	00812423          	sw	s0,8(sp)
30006570:	03900893          	li	a7,57
30006574:	00000073          	ecall
30006578:	00050413          	mv	s0,a0
3000657c:	00054c63          	bltz	a0,30006594 <_close+0x30>
30006580:	00c12083          	lw	ra,12(sp)
30006584:	00040513          	mv	a0,s0
30006588:	00812403          	lw	s0,8(sp)
3000658c:	01010113          	addi	sp,sp,16
30006590:	00008067          	ret
30006594:	40800433          	neg	s0,s0
30006598:	2cc000ef          	jal	ra,30006864 <__errno>
3000659c:	00852023          	sw	s0,0(a0)
300065a0:	fff00413          	li	s0,-1
300065a4:	fddff06f          	j	30006580 <_close+0x1c>

300065a8 <_exit>:
300065a8:	05d00893          	li	a7,93
300065ac:	00000073          	ecall
300065b0:	00054463          	bltz	a0,300065b8 <_exit+0x10>
300065b4:	0000006f          	j	300065b4 <_exit+0xc>
300065b8:	ff010113          	addi	sp,sp,-16
300065bc:	00812423          	sw	s0,8(sp)
300065c0:	00050413          	mv	s0,a0
300065c4:	00112623          	sw	ra,12(sp)
300065c8:	40800433          	neg	s0,s0
300065cc:	298000ef          	jal	ra,30006864 <__errno>
300065d0:	00852023          	sw	s0,0(a0)
300065d4:	0000006f          	j	300065d4 <_exit+0x2c>

300065d8 <_fstat>:
300065d8:	f7010113          	addi	sp,sp,-144
300065dc:	08912223          	sw	s1,132(sp)
300065e0:	08112623          	sw	ra,140(sp)
300065e4:	00058493          	mv	s1,a1
300065e8:	08812423          	sw	s0,136(sp)
300065ec:	05000893          	li	a7,80
300065f0:	00010593          	mv	a1,sp
300065f4:	00000073          	ecall
300065f8:	00050413          	mv	s0,a0
300065fc:	02054463          	bltz	a0,30006624 <_fstat+0x4c>
30006600:	00048513          	mv	a0,s1
30006604:	00010593          	mv	a1,sp
30006608:	1b4000ef          	jal	ra,300067bc <_conv_stat>
3000660c:	08c12083          	lw	ra,140(sp)
30006610:	00040513          	mv	a0,s0
30006614:	08812403          	lw	s0,136(sp)
30006618:	08412483          	lw	s1,132(sp)
3000661c:	09010113          	addi	sp,sp,144
30006620:	00008067          	ret
30006624:	40800433          	neg	s0,s0
30006628:	23c000ef          	jal	ra,30006864 <__errno>
3000662c:	00852023          	sw	s0,0(a0)
30006630:	fff00413          	li	s0,-1
30006634:	fcdff06f          	j	30006600 <_fstat+0x28>

30006638 <_isatty>:
30006638:	f9010113          	addi	sp,sp,-112
3000663c:	00810593          	addi	a1,sp,8
30006640:	06112623          	sw	ra,108(sp)
30006644:	f95ff0ef          	jal	ra,300065d8 <_fstat>
30006648:	fff00793          	li	a5,-1
3000664c:	00f50e63          	beq	a0,a5,30006668 <_isatty+0x30>
30006650:	00c12503          	lw	a0,12(sp)
30006654:	06c12083          	lw	ra,108(sp)
30006658:	00d55513          	srli	a0,a0,0xd
3000665c:	00157513          	andi	a0,a0,1
30006660:	07010113          	addi	sp,sp,112
30006664:	00008067          	ret
30006668:	06c12083          	lw	ra,108(sp)
3000666c:	00000513          	li	a0,0
30006670:	07010113          	addi	sp,sp,112
30006674:	00008067          	ret

30006678 <_lseek>:
30006678:	ff010113          	addi	sp,sp,-16
3000667c:	00112623          	sw	ra,12(sp)
30006680:	00812423          	sw	s0,8(sp)
30006684:	03e00893          	li	a7,62
30006688:	00000073          	ecall
3000668c:	00050413          	mv	s0,a0
30006690:	00054c63          	bltz	a0,300066a8 <_lseek+0x30>
30006694:	00c12083          	lw	ra,12(sp)
30006698:	00040513          	mv	a0,s0
3000669c:	00812403          	lw	s0,8(sp)
300066a0:	01010113          	addi	sp,sp,16
300066a4:	00008067          	ret
300066a8:	40800433          	neg	s0,s0
300066ac:	1b8000ef          	jal	ra,30006864 <__errno>
300066b0:	00852023          	sw	s0,0(a0)
300066b4:	fff00413          	li	s0,-1
300066b8:	fddff06f          	j	30006694 <_lseek+0x1c>

300066bc <_read>:
300066bc:	ff010113          	addi	sp,sp,-16
300066c0:	00112623          	sw	ra,12(sp)
300066c4:	00812423          	sw	s0,8(sp)
300066c8:	03f00893          	li	a7,63
300066cc:	00000073          	ecall
300066d0:	00050413          	mv	s0,a0
300066d4:	00054c63          	bltz	a0,300066ec <_read+0x30>
300066d8:	00c12083          	lw	ra,12(sp)
300066dc:	00040513          	mv	a0,s0
300066e0:	00812403          	lw	s0,8(sp)
300066e4:	01010113          	addi	sp,sp,16
300066e8:	00008067          	ret
300066ec:	40800433          	neg	s0,s0
300066f0:	174000ef          	jal	ra,30006864 <__errno>
300066f4:	00852023          	sw	s0,0(a0)
300066f8:	fff00413          	li	s0,-1
300066fc:	fddff06f          	j	300066d8 <_read+0x1c>

30006700 <_sbrk>:
30006700:	8301a703          	lw	a4,-2000(gp) # 30007b58 <heap_end.0>
30006704:	ff010113          	addi	sp,sp,-16
30006708:	00112623          	sw	ra,12(sp)
3000670c:	00050793          	mv	a5,a0
30006710:	02071063          	bnez	a4,30006730 <_sbrk+0x30>
30006714:	0d600893          	li	a7,214
30006718:	00000513          	li	a0,0
3000671c:	00000073          	ecall
30006720:	fff00613          	li	a2,-1
30006724:	00050713          	mv	a4,a0
30006728:	02c50a63          	beq	a0,a2,3000675c <_sbrk+0x5c>
3000672c:	82a1a823          	sw	a0,-2000(gp) # 30007b58 <heap_end.0>
30006730:	0d600893          	li	a7,214
30006734:	00e78533          	add	a0,a5,a4
30006738:	00000073          	ecall
3000673c:	8301a703          	lw	a4,-2000(gp) # 30007b58 <heap_end.0>
30006740:	00e787b3          	add	a5,a5,a4
30006744:	00f51c63          	bne	a0,a5,3000675c <_sbrk+0x5c>
30006748:	00c12083          	lw	ra,12(sp)
3000674c:	82a1a823          	sw	a0,-2000(gp) # 30007b58 <heap_end.0>
30006750:	00070513          	mv	a0,a4
30006754:	01010113          	addi	sp,sp,16
30006758:	00008067          	ret
3000675c:	108000ef          	jal	ra,30006864 <__errno>
30006760:	00c12083          	lw	ra,12(sp)
30006764:	00c00793          	li	a5,12
30006768:	00f52023          	sw	a5,0(a0)
3000676c:	fff00513          	li	a0,-1
30006770:	01010113          	addi	sp,sp,16
30006774:	00008067          	ret

30006778 <_write>:
30006778:	ff010113          	addi	sp,sp,-16
3000677c:	00112623          	sw	ra,12(sp)
30006780:	00812423          	sw	s0,8(sp)
30006784:	04000893          	li	a7,64
30006788:	00000073          	ecall
3000678c:	00050413          	mv	s0,a0
30006790:	00054c63          	bltz	a0,300067a8 <_write+0x30>
30006794:	00c12083          	lw	ra,12(sp)
30006798:	00040513          	mv	a0,s0
3000679c:	00812403          	lw	s0,8(sp)
300067a0:	01010113          	addi	sp,sp,16
300067a4:	00008067          	ret
300067a8:	40800433          	neg	s0,s0
300067ac:	0b8000ef          	jal	ra,30006864 <__errno>
300067b0:	00852023          	sw	s0,0(a0)
300067b4:	fff00413          	li	s0,-1
300067b8:	fddff06f          	j	30006794 <_write+0x1c>

300067bc <_conv_stat>:
300067bc:	0185d703          	lhu	a4,24(a1)
300067c0:	0145d783          	lhu	a5,20(a1)
300067c4:	ff010113          	addi	sp,sp,-16
300067c8:	01c5a283          	lw	t0,28(a1)
300067cc:	0205af83          	lw	t6,32(a1)
300067d0:	0305af03          	lw	t5,48(a1)
300067d4:	0405ae83          	lw	t4,64(a1)
300067d8:	0385ae03          	lw	t3,56(a1)
300067dc:	0485a303          	lw	t1,72(a1)
300067e0:	04c5a383          	lw	t2,76(a1)
300067e4:	0585a803          	lw	a6,88(a1)
300067e8:	05c5a883          	lw	a7,92(a1)
300067ec:	00812623          	sw	s0,12(sp)
300067f0:	00912423          	sw	s1,8(sp)
300067f4:	0105a403          	lw	s0,16(a1)
300067f8:	0085a483          	lw	s1,8(a1)
300067fc:	01212223          	sw	s2,4(sp)
30006800:	0005a903          	lw	s2,0(a1)
30006804:	0685a603          	lw	a2,104(a1)
30006808:	01071713          	slli	a4,a4,0x10
3000680c:	00e7e7b3          	or	a5,a5,a4
30006810:	06c5a683          	lw	a3,108(a1)
30006814:	01251023          	sh	s2,0(a0)
30006818:	00951123          	sh	s1,2(a0)
3000681c:	00852223          	sw	s0,4(a0)
30006820:	00f52423          	sw	a5,8(a0)
30006824:	00551623          	sh	t0,12(a0)
30006828:	01f51723          	sh	t6,14(a0)
3000682c:	01e52823          	sw	t5,16(a0)
30006830:	05d52623          	sw	t4,76(a0)
30006834:	05c52423          	sw	t3,72(a0)
30006838:	00652c23          	sw	t1,24(a0)
3000683c:	00752e23          	sw	t2,28(a0)
30006840:	03052423          	sw	a6,40(a0)
30006844:	03152623          	sw	a7,44(a0)
30006848:	02c52c23          	sw	a2,56(a0)
3000684c:	00c12403          	lw	s0,12(sp)
30006850:	02d52e23          	sw	a3,60(a0)
30006854:	00812483          	lw	s1,8(sp)
30006858:	00412903          	lw	s2,4(sp)
3000685c:	01010113          	addi	sp,sp,16
30006860:	00008067          	ret

30006864 <__errno>:
30006864:	300087b7          	lui	a5,0x30008
30006868:	b2c7a503          	lw	a0,-1236(a5) # 30007b2c <_impure_ptr>
3000686c:	00008067          	ret
