global @n_0 = alloc i32, zeroinit

decl @getint(): i32
decl @getch(): i32
decl @getarray(*i32): i32
decl @putint(i32)
decl @putch(i32)
decl @putarray(i32, *i32)
decl @starttime()
decl @stoptime()

fun @gcd(@m_0: i32, @n_1: i32): i32 {
%entry:
  @m_1 = alloc i32
  store @m_0, @m_1
  @n_2 = alloc i32
  store @n_1, @n_2
  @t_0 = alloc i32
  @r_0 = alloc i32
  %0 = load @m_1
  %1 = load @n_2
  %2 = lt %0, %1
  br %2, %then_0, %end_0
%then_0:
  %3 = load @m_1
  store %3, @t_0
  %4 = load @n_2
  store %4, @m_1
  %5 = load @t_0
  store %5, @n_2
  jump %end_0
%end_0:
  %6 = load @m_1
  %7 = load @n_2
  %8 = mod %6, %7
  store %8, @r_0
  jump %while_entry_0
%while_entry_0:
  %9 = load @r_0
  %10 = ne %9, 0
  br %10, %while_body_0, %while_end_0
%while_body_0:
  %11 = load @n_2
  store %11, @m_1
  %12 = load @r_0
  store %12, @n_2
  %13 = load @m_1
  %14 = load @n_2
  %15 = mod %13, %14
  store %15, @r_0
  jump %while_entry_0
%while_end_0:
  %16 = load @n_2
  ret %16
}

fun @main(): i32 {
%entry:
  @i_0 = alloc i32
  @m_2 = alloc i32
  store 10, @i_0
  store 1478, @m_2
  %1 = load @i_0
  %2 = load @m_2
  %0 = call @gcd(%1, %2)
  ret %0
}

